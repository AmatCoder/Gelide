Gelide
Systems & Emulators HowTo (v 0.1.5)
2008-2011 Juan Ángel Moreno Fernández
http://gelide.sourceforge.net
<gelide.prj@gmail.com>
======================================



0. Tabla de contenidos:

	1. Introducción
	2. HowTo Emuladores en Gelide
		2.1. BoyCott Advance-SDL
		2.2. Bsnes
		2.3. DeSMuME
		2.4. FBZX
		2.5. FCEUX
		2.6. Fuse
		2.7. Gambatte
		2.8. Generator
		2.9. Gens/GS
		2.10. Gngb
		2.11. GnGeo
		2.12. Gnuboy		
		2.13. Handy/SDL
		2.14. Hu-Go!
		2.15. jzIntv
		2.16. Mame
		2.17. Mednafen
		2.18. Mess		
		2.19. Mupen64Plus
		2.20. Nestopia				
		2.21. Raine
		2.22. Regen
		2.23. SdlMame		
		2.24. SdlMess
		2.25. Snes9x-Gtk
		2.26. SpectEmu
		2.27. Stella
		2.28. Osmose
		2.29. Virtual Jaguar GCC/SDL
		2.30. VisualBoyAdvance
		2.31. Xe emulator		
		2.32. XMame
		2.33. XMess		
		2.34. z26		
		2.35. ZiNc
		2.36. ZSNes
	3. Sistemas y Emuladores preconfigurados, otras alternativas
		3.1. Amstrad GX4000
		3.2. Atari 2600
		3.3. Atari 5200
		3.4. Atari 7800		
		3.5. Atari Jaguar
		3.6. Atari Lynx
		3.7. Bandai WonderSwan
		3.8. Bandai WonderSwan Color
		3.9. Coleco ColecoVision
		3.10. Emerson Arcadia 2001
		3.11. Entex Adventure Vision
		3.12. Fairchild Channel F
		3.13. GCE Vectrex
		3.14. Magnavox Odyssey2
		3.15. Mame
		3.16. Mattel Intellivision
		3.17. NEC Pc Engine
		3.18. NEC SuperGrafx
		3.19. Nintendo DS
		3.20. Nintendo Famicom Disk System
		3.21. Nintendo Game Boy
		3.22. Nintendo Game Boy Color
		3.23. Nintendo Game Boy Advance
		3.24. Nintendo Entertaninment System (NES)
		3.25. Nintendo Super Nintendo Entertaninment System (SNES)
		3.26. Nintendo 64
		3.27. Raine		
		3.28. RCA Studio II		
		3.29. Sega 32X
		3.30. Sega Game Gear
		3.31. Sega Master System
		3.32. Sega Mega Drive
		3.33. Sega SG-1000
		3.34. Sinclair ZX Spectrum
		3.35. SNK Neo Geo Pocket
		3.36. SNK Neo Geo Pocket Color
		3.37. SNK Neo Geo AES
		3.38. ZiNc
	4. Cómo contribuir
	5. Créditos
	6. Agradecimientos
	7. Licencia



1. Introducción

	Este documento surge con la necesidad de conocer y aprender como se puede
instalar y ejecutar un emulador determinado bajo GNU/Linux. Su intención no es
más que proporcionar la información básica necesaria para que cualquier usuario
conozca el funcionamiento básico de un emulador determinado y con ello, ser
capaz de configurarlo en su distribución preferida y por lo tanto en Gelide.

	Todo lo mencionado en este documento está basado en mi propio estudio,  
experiencia y documentación de los respectivos emuladores, sus webs y otros
textos relacionados con la emulación de sistemas/consolas que he visitado/leído
durante el desarrollo de Gelide.

	Ni mi perro ni yo, nos hacemos responsables de lo que te pueda pasar a ti o
a tu ordenador, por hacer caso a lo que se menciona en los siguientes párrafos.
Este documento está escrito sin ninguna intención más allá de mi propia
inquietud sobre este mundillo, puedes hacer con el lo que quieras, pero te
agradecería que me mencionaras si me copy-pasteas.

	Todas las configuraciones / opciones que se mencionan en este documento han
sido probadas en Debian Testing, que es la distribución GNU/Linux que utilizo 
normalmente. Si usas esta misma distribución u otra diferente y encuentras una
forma más simple de hacerlo, te agradecería que me lo dijeras para ampliar este
documento. Puedes ponerte en contacto conmigo en el correo gelide.prj@gmail.com
o en la web del proyecto Gelide (http://gelide.sf.net).

	Este documento no se debería tomar al pie de la letra, ya que un emulador
puede funcionar perfectamente en una máquina, con una configuración determinada,
y funcionar muy mal con la misma configuración en otra máquina diferente. En mi
opinión, se uso debería limitarse a servir como base para configurar tus
emuladores.

	No olvides lo que supone la ejecución de un emulador, seguramente alguno
te cuelgue el ordenador, te bloquee las X's, te cambie la resolución, etc, pero
al final lo más probable es que consigas utilizar aquella consola que tenías
cuando eras niño y que tantos recuerdos te trae (la mía, una Atari 2600 que aún
conservo).

Un saludo y suerte.	
jamf. 



2. HowTo Emuladores en Gelide

	En este apartado encontrarás una breve descripción del modo en el que puedes
encontrar, instalar y configurar cada uno de los emuladores que vienen
preconfigurados en la versión actual de Gelide.

	Una gran parte de esta información ha sido obtenida de las correspondientes
páginas webs o archivos de ayuda de cada uno de los emuladores. Otra parte no es
más que mi propia experimentación.

	Algunos emuladores requieren la compilación desde el código fuente, por lo
que en está guía se asume que tienes instaladas las herramientas necesarias para
compilar en tu distribución (gcc, make, etc). Si no es así, te aconsejo que
antes de continuar te busques algún buen tutorial al respecto, hay miles
indexados en Google. En Debian todo comienza con la instalación del meta paquete 
build-essential ($ sudo apt-get install build-essential).

	En los siguientes apartados, siempre que aparezca el símbolo $, estamos
indicando que se trata de una línea de ordenes que deberá ser introducida en la
consola o como prefieras hacerlo. 

	En algunos casos solo existe la versión 32bits de un emulador, por lo que en
arquitecturas amd64 tendremos que forzar la instalación e intentar obtener las
librerías de 32bits necesarias para dicho emulador. Para esta tarea, lo más
sencillo (en mi opinión) es hacer uso de la utilidad "getlibs", que podemos
descargar en paquete deb desde:
	(http://frozenfox.freehostia.com/cappy/getlibs-all.deb)
Su uso básico consiste en pasar el binario del que queremos instalar librerías
de 32bits y el se encargará de buscar los paquetes adecuados y de instalarlos:
$ sudo getlibs path/al/binario 


2.1. BoyCott Advance-SDL

	Emulador de Nintendo Game Boy Advance Freeware.
	
	BoyCott Advance-SDL es un port directo del emulador BoyCott Advance, usando
las librerías SLD. El código fuente es muy portable, por lo que existen muchas
versiones para diferentes sistemas operativos: BeOS, FreeBSD, Linux, Windows,
etc.
	Usa licencia Freeware ya que fue el deseo del autor original, así que el
código fuente no está disponible.

2.1.1. Información general
	- Nombre: BoyCott Advance-SDL
	- Autores: SDLEmu development-team
	- Versión: 0.2.8 R1
	- Web: http://sdlemu.ngemu.com/basdl.php
	- Wiki:	http://en.wikipedia.org/wiki/Boycott_Advance
	- Compresión: Si, zip, gzip
	- Extensiones: .bin
	
2.1.2. Instalación (Debian)
	* Binarios oficiales (v0.2.8 R1) (Recomendado):
	Antes de comenzar, tenemos que tener en cuenta que el emulador es freeware y
	solo existe compilado para 32bits, por lo que su instalación en
	arquitecturas amd64	pasa por el uso de librerías de 32bits con lo que ello
	conlleva.
		Para instalar el emulador, lo primero que necesitamos es descargarlo de
	la web oficial (http://sdlemu.ngemu.com/basdl.php) y descomprimirlo. En
	teoría con esto debería bastar para usarlo.
		Para arquitecturas amd64, el método anterior puede que no funcione
	directamente, así que tendremos que usar getlibs con el binario del emulador
	que	una vez descomprimido el paquete descargado de la web oficial, se llama
	"boyca".
		En una terminal nos desplazamos hasta el directorio donde hemos
	realizado la descompresión y ejecutaremos:
	$ getlibs ./boycottadvance-sdl
		Esto, en teoría, descargará e instalará las librerías de 32bits
	necesarias para ejecutarlo.

	- Instalación local:
		Lo ideal, sería mantener los emuladores en un mismo	directorio para
	tenerlos un poco ordenados, así que vamos a suponer que	usamos el directorio
	"emulators" en nuestro home para guardar los emuladores. Así, suponiendo que
	aún estamos dentro del directorio donde hemos descomprimido BoyCott Advance,
	ejecutaremos:
	$ mkdir /home/myuser/emulators/boycottadvance-sdl
	con lo que crearemos un directorio para alojar el emulador. Hay que	tener en
	cuenta que "myuser" debe ser sustituido por el nombre de nuestro usuario.
		El último paso, en este caso, es copiar el emulador y sus archivos al
	nuevo directorio:
	$ cp -r * /home/myuser/emulators/boycottadvance-sdl

	- Instalación en el sistema:
		Creamos un directorio en el sistema para alojar el emulador:		
	$ sudo mkdir /usr/share/games/boycottadvance-sdl
		Copiamos el emulador y sus archivos al nuevo directorio creado en el
	sistema:
	$ sudo cp -r * /usr/share/games/boycottadvance-sdl
		El último paso, en este caso, es enlazar el ejecutable del emulador para
	que el sistema pueda localizarlo:
	$ sudo ln -s /usr/share/games/boycottadvance-sdl/boyca /usr/games/boyca
	
2.1.3. Comandos
	-Información:
	$ boyca

	-Uso básico:
	$ boyca _path_al_juego_ -sound -fullscreen
	
	-Uso avanzado:
	$ boyca _path_al_juego_ -sound -opengl -fullscreen -gltexture 2 -scale 2

2.1.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Terminar emulación				ESC
	Pausar emulación				F1
	Continuar emulación				F2
	
	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------
	Arriba		 					Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha				 			Cursor derecha
	Botón A 						X
	Botón B 						C
	Botón L 						Z
	Botón R 						V
	Select							Tab
	Start							Return

2.1.5. Notas
	Emulación bastante buena.
	Por algún motivo el cursor del ratón siempre está visible.


2.2. Bsnes

	Emulador de Super Nintendo Entertainment System centrado en la precisión.
	
	Bsnes es un emulador que comenzó su desarrollo el 14-10-2004. El objetivo de
este emulador es un poco diferente respecto de otros: Se centra en precisión,
funcionalidad de depuración y en mantener un código limpio.
	El emulador no se centra en cosas que dificultan la precisión. Esto incluye
la velocidad y hacks para juegos específicos para hacerlo más compatible. Como
resultado, los requisitos mínimos del sistema para Bsnes son muy altos.
	El emulador en sí no deriva ningún otro como Snes9x. Ha sido escrito desde
cero por el autor. Cualquier similitud con otros emuladores no son más que una
coincidencia.
	
2.2.1. Información general
	- Nombre: Bsnes
	- Autores: Byuu
	- Versión: 070
	- Web: http://byuu.org/bsnes/
	- Wiki:	http://en.wikipedia.org/wiki/Bsnes
	- Compresión: Si, zip, 7z, jma, rar, gzip y bzip2
	- Extensiones: .sfc, .smc, .fig, .swc, .bin, .ufo, .gd3, .gd7
	
2.2.2. Instalación (Debian)
	* Compilación de los fuentes (v070) (Recomendado):
		Para compilar Bsnes desde el código fuente, primero debemos bajar el
	paquete con los fuentes de (http://byuu.org/bsnes/) y descomprimirlo en un
	directorio adecuado, por ejemplo "bsnes_v070". Una vez descomprimidos los
	fuentes, la compilación e instalación son muy sencillas.
		Para poder tener toda la potencia de Bsnes, tendremos que hacer cuatro
	compilaciones, ya que Bsnes está dividido en el binario y tres librerías.
		Primero debemos acceder al directorio "bsnes_v070/bsnes" para compilar
	el emulador en si. Desde este punto ejecutaremos:
	$ make
		Si todo fue correcto ya tendremos el emulador compilado. El binario 
	quedará en "bsnes_v070/bsnes/out/bsnes".
		Ahora realizaremos el mismo proceso en los directorios
	"bsnes_v070/snesfilter", "bsnes_v070/snesreader" y "bsnes_v070/supergameboy"
	con lo que ya tendremos compiladas las librerías adicionales para soportar
	múltiples formatos de compresión (zip, 7z, rar, etc) y Super Gameboy.

	- Instalación en el sistema:
		Para instalar Bsnes y sus librerías, primero accederemos al directorio
	"bsnes_v070/bsnes" y ejecutaremos:
	$ sudo make install
		Ahora realizaremos el mismo proceso en el resto de directorios, es
	decir, "bsnes_v070/snesfilter", "bsnes_v070/snesreader" y
	"bsnes_v070/supergameboy" con lo que ya tendremos instalados en nuestro
	sistema tanto el emulador como las librerías necesarias.
	
		Una vez que hemos instalado el emulador, deberemos arrancarlo para
	configurarlo desde su propia GUI y de esta forma dejarlo preparado para su
	uso desde Gelide.
	
2.2.3. Comandos
	-Información:
	No dispone de información por linea de comandos.

	-Uso básico:
	$ bsnes _path_al_juego_
	
	-Uso avanzado:
	$ bsnes _path_al_juego_

2.2.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Terminar emulación				Alt + F4
	Pausar/Continuar emulación		Pause
	Entrar/Salir modo fullscreen	Alt + Enter 

	
	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------
	Arriba		 					Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha				 			Cursor derecha
	Botón A 						X
	Botón B 						Z
	Botón Y 						A
	Botón X 						S
	Botón L 						D
	Botón R 						C
	Select							'
	Start							Return

2.2.5. Notas
	La emulación es muy buena y tiene muchas opciones para configurar el
emulador al gusto, aunque hay que hacerlo desde su propia GUI.
	Un detalle a tener en cuenta es que si entramos en modo fullscreen (Alt +
Enter), si cerramos el emulador, recuerda esta opción y el próximo arranque lo
hará en modo fullscreen.
	Una de las características más avanzadas de este emulador, es el poder usar
píxel shaders para poder aplicar efectos. Podéis descargarlo de la misma web del
emulador. 


2.3. DeSmuME

	Emulador para Nintendo DS bajo licencia GNU GPL.

	DesMuME, anteriormente conocido como YopYop DS, es un emulador Open Source
para Nintendo DS para GNU/Linux, MacOS y Windows. Está escrito en C usando las
librerías SDL y Gtk.
	Su nombre deriva de un juego con las palabras DS + eMu + Me.
	El emulador original estaba en Francés y fue traducido más tarde a Inglés y
otros idiomas. Soportaba muchas demos homebrew y unas cuantas demos Wireless
Multiboot. YopYop156 dejó de desarrollar el emulador en la versión 0.3.3 a causa
de un cambio, referente a la emulación, en las leyes Francesas, pero antes de
ello, liberó el código fuente, lo que permitió que muchos desarrolladores
continuaran su trabajo con algunas releases no oficiales basadas en el código
original de YopYop. Muchos de estos desarrolladores se unieron más tarde, en lo
que sería el DeSMuME Team, mezclando sus trabajos. Como resultado se lanzó la
versión 0.5.0 como la primera de DeSMuME.

2.3.1. Información general
	- Nombre: DeSMuME
	- Autores: Yopyop y el DeSmuME Team
	- Versión: 0.9.6
	- Web: http://desmume.org/
	- Wiki:	http://wiki.desmume.org/index.php?title=Main_Page
	        http://en.wikipedia.org/wiki/Desmume
	- Compresión: No (Linux)
	- Extensiones: .nds

2.3.2. Instalación (Debian)
	* Compilación de los fuentes (v0.9.6) (Recomendado):
		Para compilar DeSMuME desde el código fuente, primero debemos bajar el
	paquete con los fuentes desde la zona de descargas de la página web oficial
	(http://desmume.org/download/) y descomprimirlo en un directorio adecuado,
	por ejemplo "desmume-0.9.6".
		Una vez	descomprimidos los fuentes, la compilación e instalación son muy
	 sencillas ya que sigue un proceso estándar en GNU/Linux.
		Primero debemos acceder al directorio "desmume-0.9.6" y	procedemos a
	configurar el paquete:
	$ ./configure
		Llegados a este punto ya estaremos listos para compilar:	
	$ make
		Si todo fue correcto tendremos el emulador compilado. Por defecto la
	compilación nos creará tres binarios:
		- src/cli/desmume-cli: DeSMuME solo con interfaz por linea de comandos.
		- src/gtk-glade/desmume-glade: DeSMuME con UI basada en Gtk y Glade.
		- src/gtk/desmume: DeSMuME con interfaz totalmente basada en Gtk.
	De estas tres versiones, la que realmente nos interesa para configurar el
	emulador bajo Gelide es la versión CLI.
	
	- Instalación local:
		Lo ideal, sería mantener los emuladores en un mismo	directorio para
	tenerlos un poco ordenados, así que vamos a suponer que	usamos el directorio
	"emulators" en nuestro home para guardar los emuladores. Así, suponiendo que
	aún estamos dentro del directorio donde hemos descomprimido DeSMuME,
	ejecutaremos:
	$ mkdir /home/myuser/emulators/desmume
	con lo que crearemos un directorio para alojar el emulador. Hay que	tener en
	cuenta que "myuser" debe ser sustituido por el nombre de nuestro usuario.
		El último paso, en este caso, es copiar el emulador al nuevo directorio:
	$ cp src/cli/desmume-cli /home/myuser/emulators/desmume

	- Instalación en el sistema:
		Para instalar DeSMuME en el sistema, ejecutaremos:
	$ sudo make install

2.3.3. Comandos
	-Información:
	$ desmume-cli --help

	-Uso básico:
	$ desmume-cli --auto-pause _path_al_juego_ 
	
	-Uso avanzado:
	$ desmume-cli --auto-pause --opengl-2d _path_al_juego_	
	
2.3.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Salir del emulador				ESC
	Pausar / Continuar emulación	Pause

	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------	
 	Arriba 							Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha		 					Cursor derecha
	Botón A 						Z
	Botón B 						X
	Botón Y 						A
	Botón X 						S
	Botón L 						Q
	Botón R 						W
	Start							Return
	Select							LShift

	* Stylus
	-------------------------------------------------------
	Mover							Mouse
	Touch							MouseLButton
		
2.3.5. Notas
	Emulación bastante buena.
	Aunque en la documentación dice que soporta archivos comprimidos, parece que
esta característica no está disponible en la versión para Linux.


2.4. FBZX

	Un emulador de ZX Spectrum para FrameBuffer

	FBZX es un emulador de Sinclair ZX Spectrum diseñado para funcionar bajo el
FrameBuffer de sistemas Linux, pero también funciona bajo XWindows tanto en
pantalla completa como en modo ventana. Utiliza las librerías SDL, por lo que
debería ser facilmente portable a otras arquitecturas. Está basado en Z80Free.
Emula el Spectrum original (tanto el 1 como el 2), el clásico 128k, el Amstrad
Plus 2 y el Plus 2A así como la versión española del 128k

2.4.1. Información general
	- Nombre: FBZX
	- Autores: Raster Software Vigo (Sergio Costas)
	- Versión: 2.4.2
	- Web: http://www.rastersoft.com/fbzx.html
	- Wiki:
	- Compresión: No.
	- Extensiones: .tzx, .tap, .z80, .sna, .dsk

2.4.2. Instalación (Debian)
	* Paquetes deb oficiales (v2.4.2) (Recomendado):
		El desarrollador de FBZX proporciona (además del código fuente),
	paquetes en formato deb tanto para arquitecturas i386 como para amd64.
		Descargamos el paquete adecuado para nuestro sistema desde el apartado
	de descargas de la web (http://www.rastersoft.com/fbzx.html) y ejecutamos el
	siguiente comando para instalarlo:
	$ sudo dpkg -i fbzx_2.4.2-0~rastersoft0_i386.deb

		Para el correcto funcionamiento del emulador, debemos instalar además el
	paquete spectrum-roms que podremos hacerlo desde los repositorios oficiales
	o desde la página del emulador:
	$ sudo apt-get install spectrum-roms

2.4.3. Comandos
	-Información:
	$ fbzx --help

	-Uso básico:
	$ fbzx -fs _path_al_juego_
	
	-Uso avanzado:
	$ fbzx -fs -db -ds _path_al_juego_

2.4.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Terminar emulación				ESC + ESC
	Ayuda							F1
	Cinta Stop						F5
	Cinta Play						F6
	Mapa de teclado					F8
	Reset							F10

2.4.5. Notas
	Emulación perfecta prácticamente.
	Cuando se usan formatos de cinta .tzx o .tap, el emulador actúa como el
ordenador normal, por lo que hay que cargar el juego con el comando " LOAD "" "
con su respectivo tiempo de carga. Sin embargo cuando se usan formatos de
snapshots .z80 o .sna, la carga es instantanea.
	

2.5. FCEUX

	Emulador de Nintendo Nes, Famicom y FDS basado en el FCE Ultra original.

	Realmente se trata de una evolución del FCE Ultra ya que este, a través del
tiempo se ha ido separando en muy distintas ramas. Por ello el concepto detrás
de FCEUX es mezclar elementos del FCEU Ultra, FCEU rerecoding, FCEUXD, FCEUXDSP,
FCEUXDSP CE, y FCEU-mm en una sola rama.

2.5.1. Información general
	- Nombre: FCEUX
	- Autores: El FCEUX team
	- Versión: 2.1.4a
	- Web: http://www.fceux.com
	- Wiki:	http://en.wikipedia.org/wiki/FCEUX
	- Compresión: Si, 7z, zip, rar, tar, gzip
	- Extensiones: .nes, .fds, .nsf, .unf, .nez, .unif 
	
2.5.2. Instalación (Debian)
	* Compilación de los fuentes SVN (2.1.5svn) (Recomendado):
		La razón para compilar desde la versión SVN no es otra que lo que parece
	un error en los fuentes de la versión 2.1.4a que impide compilar FCEUX sin
	su nueva GUI. Para aquellos que prefiráis tener FCEUX con su GUI, solo
	tenéis que descargar los fuentes desde la web oficial del emulador
	(http://www.fceux.com/), descomprimir y pasar al apartado donde se expone la
	compilación.
		Lo primero que debemos hacer es clonar el SVN del proyecto, para lo cual
	ejecutaremos:
	$ svn co https://fceultra.svn.sourceforge.net/svnroot/fceultra fceultra
	lo cual nos dejará todo el código bajo el directorio "fceultra".
		Para compilarlo, es posible que necesitemos instalar algunas librerías:
	$ sudo apt-get install scons libsdl1.2-dev libsdl1.2debian-alsa
				   liblua5.1-dev zlib1g-dev zenity
		Una vez instaladas las librerías anteriores, accedemos al directorio
	principal del emulador:
	$ cd fceultra/fceu
	y compilamos indicando que no queremos GUI y que no active el modo debug:
	$ scons GTK=0 DEBUG=0
	Esto nos dejará el binario del emulador en "fceultra/fceu/bin/fceux".
	
	- Instalación local:
		Lo ideal, en este caso, sería mantener los emuladores en un mismo
	directorio para tenerlos un poco ordenados, así que vamos a suponer que
	usamos el directorio "emulators" en nuestro home para guardar los
	emuladores. Así, suponiendo que estamos dentro del directorio
	"fceultra/fceu", ejecutaremos:
	$ mkdir /home/myuser/emulators/fceux
	con lo que crearemos un directorio para alojar el emulador. Hay que tener en
	cuenta que "myuser" debe ser sustituido por el nombre de nuestro usuario.
		El último paso, en este caso, es copiar el emulador al nuevo directorio:
	$ cp ./bin/fceux /home/myuser/emulators/fceux
	
	- Instalación en el sistema:
		Para instalarlo en el sistema para todos los usuarios, ejecutaremos:
	$ scons GTK=0 DEBUG=0 install		

2.5.3. Comandos
	-Información:
	$ fceux --help

	-Uso básico:
	$ fceux --fullscreen 1 _path_al_juego_
	
	-Uso avanzado:
	$ fceux --xres 800 --yres 600 --autoscale 1 --keepratio 1 --opengl 1
	--doublebuf 1 --fullscreen 1 --sound 1 --volume 50 _path_al_juego_

2.5.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Terminar emulación				Ninguna!! (Leer Notas)
	Pausar/Continuar emulación		Pausa
	
	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------
	Arriba		 					Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha				 			Cursor derecha
	Botón A 						F
	Botón B 						D
	Select							S
	Start							Enter	

2.5.5. Notas
	Emulación perfecta prácticamente.
	La configuración de teclas por defecto es bastante rara, por ejemplo no
existe una tecla asociada a la terminación de la emulación. Por suerte, toda la
configuración está en el fichero "/home/myuser/.fceux/fceux.cfg" y por lo tanto
se puede modificar sin problemas.
	Para emular la Nintendo Famicom Disk System, FCEUX requiere que la bios de
la consola esté en "/home/myuser/.fceux/disksys.rom".


2.6. Fuse

	Un emulador libre de Spectrum para Unix.

	Fuse es un emulador de Sinclair ZX Spectrum. Soporta una gran cantidad de
modelos (incluido el 128k) con una emulación de imágen y sonido muy fiel.
	Inicialmente fue desarrollado para Unix, pero ha sido portado a otras
plataformas como Mac OS X y Windows.
	Es capaz de cargar cualquier formato de fichero soportado por libspectrum,
tales como snapshots en formato Z80, SNA, SZX y cintas virtuales como TAP o TZX.

2.6.1. Información general
	- Nombre: Fuse (The Free Unix Spectrum Emulator)
	- Autores: Philip Kendall
	- Versión: 1.0.0.1
	- Web: http://fuse-emulator.sourceforge.net
	- Wiki: http://en.wikipedia.org/wiki/Fuse_(emulator)
	- Compresión: Si, gzip y bzip2.
	- Extensiones: .tzx, .tap, .z80, .sna, .szx, .dsk

2.6.2. Instalación (Debian)
	* Paquetes deb oficiales (v1.0.0.1) (Recomendado):
		Fuse se encuentra en los repositorios oficiales de Debian, por lo que
	podremos instalarlo con:
	$ sudo apt-get install fuse-emulator-sdl
		También existe una versión con GUI basada en Gtk: fuse-emulator-gtk.

		Para el correcto funcionamiento del emulador, debemos instalar además el
	paquete spectrum-roms que también se encuentra en los repositorios oficiales
	de Debian:
	$ sudo apt-get install spectrum-roms

2.6.3. Comandos
	-Información:
	$ fuse-sdl --help

	-Uso básico:
	$ fuse-sdl --full-screen _path_al_juego_
	
	-Uso avanzado:
	$ fuse-sdl --kempston --full-screen --graphics-filter tv2x _path_al_juego_

2.6.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Terminar emulación				F10 (Pide confirmación)
	Menú							F1 (También actúa como Pausa)
	Opciones						F4
	Reset							F5
	Cinta Play / Pause				F8

2.6.5. Notas
	Emulación perfecta prácticamente.
	Cuando se usan formatos de cinta .tzx o .tap, el emulador actúa como el
ordenador normal, aunque Fuse simula automáticamente la carga del juego, por lo
que no es necesario el comando " LOAD "" " ni su tiempo de espera. De todas
formas, cuando se usan formatos de snapshots .z80 o .sna, la carga es
instantanea.
	La versión Gtk, por desgracia no tiene modo de pantalla completa.


2.7. Gambatte

	Emulador de Nintendo Game Boy (Color) OpenSource y de plataforma cruzada.

	Gambatte es un emulador de Nintendo Game Boy escrito en C++ enfocado en la
precisión de la emulación. Es OpenSource y está disponible para múltiples
plataformas. Está basado en cientos de test hardware así como en documentación
previa e ingeniería inversa.

2.7.1. Información general
	- Nombre: Gambatte
	- Autores: Sindre Aamås
	- Versión: 0.4.1
	- Web: https://sourceforge.net/projects/gambatte
	- Wiki: ???
	- Compresión: Si, zip
	- Extensiones: .gb, .gmb, .cgb, .gbc, .bin

2.7.2. Instalación (Debian)
		Antes de comenzar, he de mencionar que Gambatte tiene dos versiones, una
	basada en Qt y otra basada en SDL. Nosotros nos centraremos en la versión
	SDL.
	
	* Paquetes deb oficiales (v0.4.1) (Recomendado i386):
		El desarrollador de Gambatte proporciona (además del código fuente),
	paquetes para algunas plataformas diferentes. Entre estos podemos encontrar
	paquetes en formato deb para arquitecturas i386. Por desgracia no los hay
	para amd64 así que para esta arquitectura tendremos que	compilar desde los
	fuentes.
		Descargamos el paquete adecuado para nuestro sistema desde el apartado
	de descargas de la web (http://sourceforge.net/projects/gambatte/files/) y
	ejecutamos el siguiente comando para instalarlo:
	$ sudo dpkg -i gambatte-sdl_0.4.1-1_i386.deb
	
	* Compilación de los fuentes (v0.4.1) (Recomendado amd64):
		Descargamos los fuentes desde el apartado de descargas de la web y
	prepararemos el código fuente, para lo que debemos descomprimir el archivo
	que nos hemos descargado, por ejemplo bajo el directorio
	"gambatte_src-0.4.1".
		Entramos en el directorio donde tenemos los fuentes y para compilar el
	emulador tendremos que ejecutar:
	$ sh build_sdl.sh
		Con lo que ya tendremos compilado Gambatte para nuestro sistema bajo el
	directorio "gambatte_src-0.4.1/gambatte_sdl/gambatte_sdl".
		Llegados a este punto tenemos dos opciones, instalarlo en nuestro
	directorio personal (home) únicamente para nuestro uso o instalarlo en el
	sistema para el uso de todos los usuarios:

	- Instalación local:
		Lo ideal, en este caso, sería mantener los emuladores en un mismo
	directorio para tenerlos un poco ordenados, así que vamos a suponer que
	usamos el directorio "emulators" en nuestro home para guardar los
	emuladores. Así, suponiendo que aún estamos dentro del directorio
	"gambatte_src-0.4.1", ejecutaremos:
	$ mkdir /home/myuser/emulators/gambatte
	con lo que crearemos un directorio para alojar el emulador. Hay que	tener en
	cuenta que "myuser" debe ser sustituido por el nombre de nuestro usuario.
		El último paso, en este caso, es copiar el emulador al nuevo directorio:
	$ cp gambatte_sdl/gambatte_sdl /home/myuser/emulators/gambatte/gambatte
	
	- Instalación en el sistema:
		Creamos un directorio en el sistema para alojar el emulador:		
	$ sudo mkdir /usr/share/games/gambatte
		Copiamos el emulador al nuevo directorio creado en el sistema:
	$ sudo cp gambatte_sdl/gambatte_sdl /usr/share/games/gambatte/gambatte
		El último paso, en este caso, es enlazar el ejecutable del emulador para
	que el sistema pueda localizarlo:
	$ sudo ln -s /usr/share/games/gambatte/gambatte /usr/games/gambatte

2.7.3. Comandos
	-Información:
	$ gambatte

	-Uso básico:
	$ gambatte -f _path_al_juego_ 
	
	-Uso avanzado:
	$ gambatte -f -v 3 _path_al_juego_ 
		
2.7.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Terminar emulación				ESC
	
	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------
	Arriba		 					Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha				 			Cursor derecha
	Botón A 						D
	Botón B 						C
	Select							Shift
	Start							Return

2.7.5. Notas
	Emulación prácticamente perfecta tanto para Game Boy como para Color.
	Parece que hay gente con problemas para compilar está versión con gcc 4.4,
para ellos, podéis encontrar un parche en la web oficial.


2.8. Generator

	Emulador de SEGA Genesis/Mega-Drive Open Source.

	Generator es un emulador Open Source diseñado para emular la consola de SEGA
Mega Drive / Genesis que fue una máquina de juegos producida al principio de los
1990. El código fuente es portable y ha sido portado a plataformas como Amiga,
Macintosh, Windows, etc. Nativamente compila bajo Unix con X Windows usando o
bien tcl/tk o gtk/SDL, para svgalib y también compilación cruzada con DOS.
	Usa su propia emulación del procesador 68000 que utiliza técnicas avanzadas.
	La primera release del emulador es de Agosto de 1998 
	Generator (cbiere) es una modificación basada en Generator 0.35 con muchas
características adicionales tales como compresión BZIP2, GZIP y ZIP, soporte de
audio basado en SDL, etc. Esta modificación está realizada por Christian Biere.

2.8.1. Información general
	- Nombre: Generator
	- Autores: James Ponder, Christian Biere (cbiere)
	- Versión: 0.35.4 (cbiere r4)
	- Web: http://www.squish.net/generator
	       http://www.ghostwhitecrab.de/generator/
	- Wiki:	???
	- Compresión: Si, zip, gzip, bzip2
	- Extensiones: .smd, .bin, .md, .gen

2.8.2. Instalación (Debian)
	* Compilación de los fuentes (v0.35.4 (cbiere r4)) (Recomendado):
		Para compilar Generator (cbiere) desde el código fuente, primero debemos
	bajar el paquete con los fuentes modificados por Christian Biere desde
	(http://www.squish.net/generator/cbiere/generator/) y descomprimirlo en un
	directorio adecuado, por ejemplo "generator-0.35-cbiere-r4".
		Una vez	descomprimidos los fuentes, la compilación e instalación son muy
	 sencillas ya que sigue un proceso estándar en GNU/Linux.
		Primero debemos acceder al directorio "generator-0.35-cbiere-r4" y
	procedemos a configurar el paquete:
	$ ./configure --with-sdl --with-raze --with-sdl-audio
		Para amd64 deberemos cambiar el parámetro --with-raze por --with-cmz80
	ya que el emulador de Z80 Raze, no es compatible con arquitecturas de 64bits
	pero si que lo es C mz80:
	$ ./configure --with-sdl --with-cmz80 --with-sdl-audio
		Puede que para compilar el emulador, tengamos que instalar el paquete
	nasm:
	$ sudo apt-get install nasm
		Llegados a este punto ya estaremos listos para compilar:	
	$ make
		Si todo fue correcto tendremos el emulador compilado. El binario quedará
	en "generator-0.35-cbiere-r4/main/generator-sdl".

	- Instalación local:
		Lo ideal, sería mantener los emuladores en un mismo	directorio para
	tenerlos un poco ordenados, así que vamos a suponer que	usamos el directorio
	"emulators" en nuestro home para guardar los emuladores. Así, suponiendo que
	aún estamos dentro del directorio donde hemos descomprimido Generator,
	ejecutaremos:
	$ mkdir /home/myuser/emulators/generator
	con lo que crearemos un directorio para alojar el emulador. Hay que	tener en
	cuenta que "myuser" debe ser sustituido por el nombre de nuestro usuario.
		El último paso, en este caso, es copiar el emulador y sus archivos al
	nuevo directorio:
	$ cp -r docs main/generator-sdl /home/myuser/emulators/generator

	- Instalación en el sistema:
		Para instalar Generator en el sistema, ejecutaremos:
	$ sudo make install

2.8.3. Comandos
	-Información:
	$ generator-sdl

	-Uso básico:
	$ generator-sdl -a _path_al_juego_ 
	
	-Uso avanzado:
	$ generator-sdl -a -r europe/USA/japan _path_al_juego_	
	
2.8.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Salir del emulador				Ctrl + Q
	Pausar / Continuar emulación	Pause

	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------	
 	Arriba 							Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha		 					Cursor derecha
	Botón A 						A
	Botón B 						S
	Botón C 						D
	Start							Return
	Mode							RShift

2.8.5. Notas
	Emulación bastante buena.
	Puede que en algunos casos aislados, necesite el parámetro -r para
especificar la región del juego (europe, usa, japan).


2.9. Gens/GS

	Emulador de SEGA Mega Drive/Genesis, 32X y Sega-CD/Mega-CD basado en Gens.

	Gens es un emulador para los sistemas SEGA Mega Drive/Genesis, 32X y
Sega-CD/Mega-CD, te permite jugar a los juegos desarrollados para las consolas
clásicas de 16bits de SEGA en un PC compatible con x86.
	Gens fue desarrollado por Stéphane Dallongeville y fue codificado
aproximadamente un 35% en C/C++ y un 65% en ensamblador.
	Gens/GS es una versión de Gens mantenida por GerbilSoft. El objetivo
principal de Gens/GS es limpiar el código fuente original y combinar
características de varios forks de Gens, así como mejorar la portabilidad a
otras plataformas.
	Originalmente estaba basado en Gens 2.15.2 para Linux. El número después de
la "r" en los nombres de Gens/GS, indica la versión de Gens/GS.

2.9.1. Información general
	- Nombre: Gens/GS
	- Autores: Stephane Dallongeville, Stephane Akhoun, David Korth (GS)
	- Versión: 2.16.7 (gs-r7)
	- Web: http://www.segaretro.org/Gens/GS
	       http://gens.consolemul.com
	- Wiki:	http://en.wikipedia.org/wiki/Gens/GS
	        http://es.wikipedia.org/wiki/Gens_(emulador)
	- Compresión: Si, zip, gzip, 7z, rar
	- Extensiones: .smd, .bin, .md, .gen, .32x

2.9.2. Instalación (Debian)
	* Paquetes deb oficiales (2.16.7 (gs-r7)) (Recomendado):
		Descargamos el paquete deb para i386 desde la zona de descargas de la
	web oficial (http://www.segaretro.org/Gens/GS) y ejecutamos:
	$ sudo dpkg -i Gens_2.16.7_i386.deb
		De momento no existe versión de 64bits, por lo que para amd64 tendremos
	que forzar la instalación del paquete para i386:
	$ sudo dpkg -i --force-architecture Gens_2.16.7_i386.deb
		Llegados a este punto es muy probable que tengamos que instalar	alguna
	librería de 32bits para que funcione correctamente en amd64. Para ello
	haremos uso de getlibs
	$ sudo getlibs /usr/bin/gens
	
		Es muy importante que una vez instalado Gens/GS, lo configuremos desde
	su propia GUI, ya que hay parámetros imposibles de establecer por linea de
	comandos. Por ejemplo, el uso de plugins de renderizado, OpenGL, directorios
	de Bios, resolución, etc.
	
2.9.3. Comandos
	-Información:
	$ gens --help

	-Uso básico:
	$ gens --fs _path_al_juego_
	
	-Uso avanzado:
	$ gens --fs --disable-fps _path_al_juego_	

2.9.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Salir del emulador				Ctrl + Q
	Pausar/Continuar emulación		ESC

	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------
	Arriba 							Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha		 					Cursor derecha
	Botón A 						A
	Botón B 						S
	Botón C 						D
	Botón X 						Z
	Botón Y 						X
	Botón Z 						C
	Start							Return
	Mode							RShift
		
	- Joy derecho (Joy1)
	Función 						Tecla
	-------------------------------------------------------
	Arriba 							Y
	Abajo 							H
	Izquierda 						G
	Derecha		 					J
	Botón A 						K
	Botón B 						L
	Botón C 						?/ (Ñ)
	Botón X 						I
	Botón Y 						O
	Botón Z 						P
	Start							U
	Mode							T

2.9.5. Notas
	Emulación prácticamente perfecta en todos los sistemas que soporta.
	Puede ser muy importante configurarlo previamente desde su propia GUI, antes
de usarlo bajo Gelide.


2.10. Gngb

	Emulador de Nintendo Game Boy (Color) escrito para GNU/Linux.

	Gngb es un emulador de Game Boy (Color) escrito íntegramente en C usando las
librerías SDL. Es software libre y se distribuye bajo los términos de la
licencia GNU GPL.
	Soporta casi todos los juegos de Nintendo Game Boy y Game Boy Color.
	
2.10.1. Información general
	- Nombre: Gngb
	- Autores: Frogus y Pepone
	- Versión: 20060309
	- Web: http://m.peponas.free.fr/gngb
	- Wiki: ???
	- Compresión: Si, gzip (zip??, bzip2??)
	- Extensiones: .gb, .gmb, .cgb, .gbc, .bin	

2.10.2. Instalación (Debian)
	* Paquetes deb oficiales (v20060309) (Recomendado):
		Gngb se encuentra en los repositorios oficiales de Debian, por lo que
	podremos instalarlo con:
	$ sudo apt-get install gngb
	
	* Compilación de los fuentes (v20060309):
		Descargamos los fuentes desde el apartado de descargas de la web oficial
	de Gngb (http://m.peponas.free.fr/gngb/download.html) y	prepararemos el
	código fuente, para lo que debemos descomprimir el archivo que nos hemos
	descargado, por ejemplo bajo el directorio "gngb-20060309".
		Entramos en el directorio donde tenemos los fuentes y para compilar el
	emulador tendremos que ejecutar:
	$ ./configure
	$ make
		Con lo que ya tendremos compilado Gngb para nuestro sistema bajo el
	directorio "gngb-20060309/src/gngb".
		Llegados a este punto tenemos dos opciones, instalarlo en nuestro
	directorio personal (home) únicamente para nuestro uso o instalarlo en el
	sistema para el uso de todos los usuarios:

	- Instalación local:
		Lo ideal, en este caso, sería mantener los emuladores en un mismo
	directorio para tenerlos un poco ordenados, así que vamos a suponer que
	usamos el directorio "emulators" en nuestro home para guardar los
	emuladores. Así, suponiendo que aún estamos dentro del directorio
	"gngb-20060309", ejecutaremos:
	$ mkdir /home/myuser/emulators/gngb
	con lo que crearemos un directorio para alojar el emulador. Hay que tener en
	cuenta que "myuser" debe ser sustituido por el nombre de nuestro usuario.
		El último paso, en este caso, es copiar el emulador al nuevo directorio:
	$ cp src/gngb /home/myuser/emulators/gngb/gngb
	
	- Instalación en el sistema:
		Una vez compilado, para instalarlo en el sistema, tendremos que	ejecutar
	el siguiente comando:
	$ sudo make install

2.10.3. Comandos
	-Información:
	$ gngb --help

	-Uso básico:
	$ gngb -a -s _path_al_juego_ 
	
	-Uso avanzado:
	$ gngb -a -s -o -f _path_al_juego_ 
	
2.10.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Terminar emulación				ESC
	Abrir menú						Tab
	
	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------
	Arriba		 					Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha				 			Cursor derecha
	Botón A 						X
	Botón B 						W
	Select							RShift
	Start							Return

2.10.5. Notas
	Emulación prácticamente perfecta tanto para Game Boy como para Color.
	Solamente soporta archivos comprimidos en formato gzip, aunque en la
documentación dice soportar zip y otros.
	Se puede remapear las teclas así como cambiar toda la configuración, con un
archivo de perfil que se debe guardar en "/home/myuser/.gngb/gngbrc". Tanto en
el código como en el paquete deb, viene un ejemplo de este fichero:
"sample_gngbrc".


2.11. GnGeo

	Emulador rápido y potente para SNK Neo Geo bajo GNU/Linux.

	GnGeo es un emulador de Neo Geo por linea de comandos rápido y potente para
plataformas GNU/Linux, FreeBSD y puede que otros (existe un port para BeOS).
	Es Software Libre, lanzado bajo los términos de la GNU GPL y desarrollado
principalmente por Mathieu Peponas.
		
2.11.1. Información general
	- Nombre: GnGeo
	- Autores: Mathieu Peponas y otros.
	- Versión: 0.7
	- Web: http://gngeo.berlios.de
	- Wiki:	???
	- Compresión: Si, zip
	- Extensiones: .zip

2.11.2. Instalación (Debian)		
	* Paquetes deb del repositorio Asher256 (v0.7) (Recomendado):
		Asher256 es un repositorio para Ubuntu con muchos programas interesantes
	entre los que podemos encontrar GnGeo. Está disponible tanto para i386 como
	para amd64, por lo que es la opción más cómoda y menos compleja de instalar
	este emulador.
		Lo primero que debemos hacer es añadir el repositorio a nuestra lista de
	repositorios, para lo cual, editaremos el fichero "/etc/apt/sources.list":
	$ sudo gedit /etc/apt/sources.list
	y añadiremos al final del mismo estas entradas:
	deb http://asher256-repository.tuxfamily.org edgy main dupdate french
	deb http://asher256-repository.tuxfamily.org ubuntu main dupdate french
		Una vez guardados los cambios, tendremos que actualizar la lista de
	paquetes con apt para que tenga acceso al nuevo repositorio:
	$ sudo apt-get update
		Ahora ya podremos instalar GnGeo con un simple:
	$ sudo apt-get install gngeo
	
		Una vez que tengamos instalado GnGeo, podremos quitar las entradas del
	repositorio Asher256 o "anularlas" para que no se usen normalmente. Para
	ello editaremos de nuevo el fichero "sources.list" y eliminaremos las líneas
	que añadimos antes o colocaremos el símbolo "#" delante para anularlas:
	#deb http://asher256-repository.tuxfamily.org edgy main dupdate french
	#deb http://asher256-repository.tuxfamily.org ubuntu main dupdate french

2.11.3. Comandos
	-Información:
	$ gngeo

	-Uso básico:
	$ gngeo --biospath=_path_al_directorio_de_bios_ _path_al_juego_ 
	
	-Uso avanzado:
	$ gngeo --biospath=_path_al_directorio_de_bios_ -f --sound _path_al_juego_	

2.11.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Salir del emulador				ESC
	Pausar / Continuar emulación	Pause
	Insertar monedas				P
	Start jugador 1					O

	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------	
 	Arriba 							Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha		 					Cursor derecha
	Botón 1 						Q
	Botón 2 						W
	Botón 3 						E
	Botón 4 						X

2.11.5. Notas
	Emulación bastante buena, aunque el emulador es algo viejo y no soporta
muchos juegos.
	Las bios "sp-s2.sp1", "sfix.sfx", "000-lo.lo", deben encontrarse en el path
indicado con el parámetro "--biospath" y deben estar descomprimidas.


2.12. Gnuboy

	Uno de los pocos emulador de Nintendo Game Boy (Color) para GNU/Linux.

	Gnuboy es un emulador de Game Boy (Color) escrito íntegramente en ANSI C con
unas pocas optimizaciones en ensamblador para algunas CPU's. Soporta una gran
variedad de plataformas tales como Linux, Windows, FreeBSD, etc.
	Gnuboy es software libre y se distribuye bajo los términos de la licencia
GNU GPL.

2.12.1. Información general
	- Nombre: Gnuboy
	- Autores: Laguna y Gilgamesh
	- Versión: 1.0.3
	- Web: http://gnuboy.unix-fu.org/
	- Wiki: ???
	- Compresión: Si, gzip
	- Extensiones: .gb, .gmb, .cgb, .gbc, .bin	

2.12.2. Instalación (Debian)
	* Paquetes deb oficiales (v1.0.3) (Recomendado):
		Gnuboy se encuentra en los repositorios oficiales de Debian, por lo que
	podremos instalarlo con:
	$ sudo apt-get install gnuboy-sdl

2.12.3. Comandos
	-Información:
	$ sdlgnuboy --help

	-Uso básico:
	$ sdlgnuboy _path_al_juego_ 
	
	-Uso avanzado:
	$ sdlgnuboy --bind _key_ _comando_ --VAR=_valor_ _path_al_juego_
	
2.12.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Terminar emulación				ESC
	
	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------
	Arriba		 					Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha				 			Cursor derecha
	Botón A 						D
	Botón B 						S
	Select							Space
	Start							Return

2.12.5. Notas
	Emulación prácticamente perfecta tanto para Game Boy como para Color.
	Se puede modificar toda la configuración del emulador, con un archivo de
perfil que se debe guardar en "/home/myuser/.gnuboy/gnuboy.rc". En el manual se
encuentra la sintaxis completa de este fichero y ejemplos.


2.13. Handy/SDL

	Emulador de Atari Lynx Freeware para GNU/Linux usando las librerías SDL.
		
	Handy/SDL está basado en el emulador Handy del que existen ports para
múltiples sistemas operativos y plataformas, como por ejemplo GNU/Linux,
FreeBSD y BeOS.

2.13.1. Información general
	- Nombre: Handy/SDL
	- Autores: Niels Wagenaar y Caz
	- Versión: 0.82 R1
	- Web: http://sdlemu.ngemu.com/handysdl.php
	- Wiki:	???
	- Compresión: Si, zip
	- Extensiones: .lnx, .bin
	
2.13.2. Instalación (Debian) 
	* Binarios oficiales (v0.82 R1) (Recomendado):
		En el momento de escribir esta entrada, la última versión conocida de
	este emulador (v0.82 R1) es de 2001 por lo que he de decir que la
	instalación y uso, aunque a priori puede parecer sencilla, el camino
	mediante el cual he llegado a ella, no lo ha sido tanto.
		El principal problema es que el emulador hace uso de una librería que no
	solo ya no está disponible en ninguna de las distribuciones actuales de
	Debian, sino que además, prácticamente ha desaparecido de la red o por lo
	menos resulta muy muy difícil de localizar. Por otra parte, el emulador solo
	fue compilado para 32bits, por lo que su instalación en arquitecturas amd64
	pasa por el uso de librerías de 32bits con lo que ello conlleva.
		Para instalar el emulador, lo primero que necesitamos es descargarlo de
	la web oficial (http://sdlemu.ngemu.com/handysdl.php) y descomprimirlo.	En
	teoría con esto debería bastar para usarlo, en la práctica tenemos que
	descargar e instalar el paquete "libstdc++2.10-glibc2.2" que incluye la
	librería "libstdc++-libc6.2-2.so.3" necesaria para su funcionamiento.
		Este paquete, se puede encontrar en los repositorios oficiales de Ubuntu
	Dapper (2006) (http://packages.ubuntu.com/dapper/i386/
	libstdc++2.10-glibc2.2/download).
		Para instalarlo, una vez descargado, ejecutaremos:
	$ sudo dpkg -i libstdc++2.10-glibc2.2_2.95.4-24_i386.deb
		Para arquitecturas amd64, el método anterior no funcionará, así que lo
	primero que debemos hacer es usar getlibs con el binario del emulador que
	una vez descomprimido el paquete descargado de la web oficial, se llama
	"sdlhandy".
		En una terminal nos desplazamos hasta el directorio donde hemos
	realizado la descompresión y ejecutaremos:
	$ getlibs ./sdlhandy
		Esto, en teoría, descargará e instalará las librerías de 32bits
	necesarias para ejecutarlo, excepto la citada anteriormente que no podrá
	localizarla.
		Para instalar la librería en amd64, tendremos que abrir el paquete
	"libstdc++2.10-glibc2.2_2.95.4-24_i386.deb" con algún gestor de ficheros
	empaquetados (por ejemplo fileroller) y extraer el fichero, que estará en
	"/usr/lib/libstdc++-libc6.2-2.so.3" dentro del paquete, dejándolo en el
	directorio "/usr/lib32/", para lo cual necesitaremos privilegios de
	administrador.
		En este punto, Handy/SDL ya debería funcionar, aunque no será capaz de
	lanzar ningún juego hasta que coloquemos la bios de la consola Atari Lynx en
	el mismo directorio desde el que se ejecutara el emulador. La bios debe
	tener forzosamente el nombre "lynxboot.img".
		Para poder usar sin problemas este emulador desde Gelide, tendremos que
	colocar esta bios en el directorio home configurado para el sistema Atari
	Lynx, que por defecto será "/home/myuser/.gelide/Atari Lynx/". Hay que tener
	en cuenta que "myuser" debe ser sustituido por el nombre de nuestro usuario.

	- Instalación local:
		Lo ideal, sería mantener los emuladores en un mismo	directorio para
	tenerlos un poco ordenados, así que vamos a suponer que	usamos el directorio
	"emulators" en nuestro home para guardar los emuladores. Así, suponiendo que
	aún estamos dentro del directorio donde hemos descomprimido Handy/SDL,
	ejecutaremos:
	$ mkdir /home/myuser/emulators/handysdl
	con lo que crearemos un directorio para alojar el emulador. Hay que	tener en
	cuenta que "myuser" debe ser sustituido por el nombre de nuestro usuario.
		El último paso, en este caso, es copiar el emulador y sus archivos al
	nuevo directorio:
	$ cp -r * /home/myuser/emulators/handysdl

2.13.3. Comandos
	-Información:
	$ sdlhandy

	-Uso básico:
	$ sdlhandy _path_al_juego_ -sound -fullscreen
	
	-Uso avanzado:
	$ sdlhandy _path_al_juego_ -sound -fullscreen -core 2
		
2.13.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Terminar emulación				ESC
	Reset							F10
	Rotar izquierda					F11
	Rotar derecha					F12
	Pausar/Continuar emulación		Enter

	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------
	Arriba							Cursor arriba
	Abajo							Cursor abajo
	Izquierda						Cursor izquierda
	Derecha							Cursor derecha
	Botón A							Z
	Botón B							X

2.13.5. Notas
	Emulación bastante buena aunque, sinceramente, creo que Mednafen es una
opción mucho mejor y además, la emulación del sistema Atari Lynx de Mednafen
también está basada en el código fuente de Handy.
	Como he mencionado más arriba, Handy/SDL requiere que coloquemos la bios de
la consola Atari Lynx en el mismo directorio desde el que se ejecutará el
emulador. La bios debe tener forzosamente el nombre "lynxboot.img". Para poder
usar sin problemas este emulador desde Gelide, tendremos que colocar esta bios
en el directorio home configurado para el sistema Atari Lynx, que por defecto
será "/home/myuser/.gelide/Atari Lynx/" donde "myuser" debe ser sustituido por
el nombre de nuestro usuario.


2.14. Hu-Go!

	Hu-Go! es un emulador de la consola PC Engine de NEC.

	Proviene del FPCE de Bero que era un emulador no muy avanzado pero que
funcionaba bastante bien. Zeograd estuvo trabajando en el hasta que lo considero
tan avanzado como para cambiarle el nombre. También usa partes o está inspirado
en otros emuladores.
 
2.14.1. Información general
	- Nombre: Hu-Go!
	- Autores: Zeograd
	- Versión: 2.12
	- Web: http://spatula-city.org/~im14u2c/intv/
	- Wiki: ???
	- Compresión: Si, zip
	- Extensiones: .pce, .iso 
		
2.14.2. Instalación (Debian)
	* Paquetes deb oficiales (v2.12) (Recomendado i386):
		El desarrollador de Hu-Go proporciona (además del código fuente),
	paquetes para las distribuciones más comunes. Entre estos podemos encontrar
	paquetes en formato deb para arquitecturas i386. Por desgracia no los hay
	para amd64 así que tendremos que o bien compilar o bien hacer un alien.
		Descargamos el paquete adecuado para nuestro sistema desde el apartado
	de descargas de la web (http://www.zeograd.com/hugo_download.php) y
	ejecutamos el siguiente	comando para instalarlo:
	$ sudo dpkg -i hugo_2.12_i386.deb
		Con esto ya lo tendremos listo para utilizar. Puede que sea necesario
	instalar sdl-mixer 1.2 por lo que si no lo tenéis, ejecutad:
	$ sudo apt-get install libsdl-mixer1.2
	
	* Alien del paquete de OpenSuse 11.3 (v2.12):
		Convertir un paquete RPM en un DEB no siempre es la mejor forma de
	instalar una aplicación, pero en este caso puede llegar a ser la única forma
	de hacerlo para amd64.
		Lo primero que necesitamos es tener instalado el paquete alien, que nos
	ayudará a convertir un paquete rpm en un deb. Para instalarlo, nos vamos a
	una terminal y ejecutamos:
	$ sudo apt-get install alien
		Ahora descargamos el paquete "hugo-2.12-3.2.x86_64.rpm" para OpenSuse.
	Lo podemos descargar de (ftp://ftp5.gwdg.de/pub/opensuse/repositories/
	Emulators/openSUSE_11.3/x86_64/hugo-2.12-3.2.x86_64.rpm).
		El siguiente paso es convertirlo en un paquete deb para nuestra Debian:
	$ sudo alien hugo-2.12-3.2.x86_64.rpm
	lo cual nos creará el paquete "hugo_2.12-4.2_amd64.deb". Ya solo nos queda
	instalarlo, para lo cual ejecutaremos:
	$ sudo dpkg -i hugo_2.12-4.2_amd64.deb	

2.14.3. Comandos
	-Información:
	$ hugo --help

	-Uso básico:
	$ hugo -f _path_al_juego_
	
	-Uso avanzado:
	$ hugo -a -f -s _path_al_juego_

2.14.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Terminar emulación				ESC
	Pausar/Continuar emulación		Enter
	
	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------
	Arriba		 					Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha				 			Cursor derecha
	Botón 1 						Espace
	Botón 2 						LAlt
	Botón 1 auto					C
	Botón 2 auto					X
	Select							Tab
	Run								Enter		

2.14.5. Notas
	Emulación bastante buena, aunque he notado algunos problemas con el audio.


2.15. jzIntv

	Joe Zbiciak's Intellivision Emulator for Linux.

jzIntv es, en parte, un emulador del hardware de la consola Mattel Intellivision
y de sus periféricos. Es portable existiendo ports para	Dos, Linux, FreeBSD,
MacOS, Win32, etc.
	Más allá del emulador, jzIntv es un proyecto que incluye un kit completo de
desarrollo, esto incluye documentación y herramientas.
	jzIntv está licenciado bajo GPL.
	
2.15.1. Información general
	- Nombre: jzIntv
	- Autores: Joseph Zbiciak
	- Versión: 1.0-beta3
	- Web: http://spatula-city.org/~im14u2c/intv/
	- Wiki: ???
	- Compresión: No
	- Extensiones: .rom, .bin, .int, .itv
		
2.15.2. Instalación (Debian) 
	* Binarios oficiales (v1.0-beta3) (Recomendado):
		Descargamos el paquete de binarios oficiales para nuestra arquitectura
	desde la web oficial (http://spatula-city.org/~im14u2c/intv/) y lo
	descomprimimos, quedándonos todo en el directorio "jzintv-1.0-beta".
		Antes de comenzar, hemos de tener en cuenta que el paquete que nos hemos
	descargado incluye toda la suite jzIntv (emulador, documentación,
	herramientas, etc) pero a nosotros lo que realmente nos interesa es el
	emulador, que estará localizado en "jzintv-1.0-beta/bin/jzintv".
		Llegados a este punto tenemos dos opciones, instalarlo en nuestro
	directorio personal (home) únicamente para nuestro uso o instalarlo en el
	sistema para el uso de todos los usuarios:

	- Instalación local:
		Lo ideal, en este caso, sería mantener los emuladores en un mismo
	directorio para tenerlos un poco ordenados, así que vamos a suponer que
	usamos el directorio "emulators" en nuestro home para guardar los
	emuladores. Así, suponiendo que estamos dentro del directorio
	"jzintv-1.0-beta", ejecutaremos:
	$ mkdir /home/myuser/emulators/jzintv
	con lo que crearemos un directorio para alojar el emulador. Hay que
	tener en cuenta que "myuser" debe ser sustituido por el nombre de nuestro
	usuario.
		El último paso, en este caso, es copiar el emulador al nuevo directorio:
	$ cp ./bin/jzintv /home/myuser/emulators/jzintv
	
	- Instalación en el sistema:
		Creamos un directorio en el sistema para alojar el emulador:		
	$ sudo mkdir /usr/share/games/jzintv
		Copiamos el emulador y sus archivos al nuevo directorio creado en el 
	sistema:
	$ sudo cp ./bin/jzintv /usr/share/games/jzintv
		El último paso, en este caso, es enlazar el ejecutable del emulador para
	que el sistema pueda localizarlo:
	$ sudo ln -s /usr/share/games/jzintv/jzintv /usr/games/jzintv		

2.15.3. Comandos
	-Información:
	$ jzintv --help

	-Uso básico:
	$ jzintv -e path_al_fichero/exec.bin -g path_al_fichero/grom.bin -f1
	_path_al_juego_ 
	
	-Uso avanzado:
	$ jzintv -e path_al_fichero/exec.bin -g path_al_fichero/grom.bin -z1 -f1
	_path_al_juego_

2.15.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Terminar emulación				F1
	Pausar/Continuar emulación		Pause
	
	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------
	Botones 1-9			Numpad 1-9
	Clear				0
	0					.
	Enter				Enter
	Arriba				Cursor arriba
	Abajo				Cursor abajo
	Izquierda			Cursor izquierda
	Derecha				Cursor derecha
	Botón lateral 1		RShift
	Botón lateral 2		RAlt
	Botón lateral 3		RCtrl

2.15.5. Notas
	Emulación bastante buena, aunque no soporta archivos comprimidos.
jzIntv necesita que los archivos bios de la consola ("exec.bin" y "grom.bin"),
estén descomprimidos.


2.16. Mame

	MAME (Multiple Arcade Machine Emulator).

	Se trata de un proyecto sin fines de lucro cuyo objetivo principal es ser
una referencia del funcionamiento interno de las máquinas arcade emuladas. Esto
se hace tanto con propósitos educativos como con de preservación con el fin de
evitar que muchos de los juegos históricos desaparezcan para siempre una vez que
su hardware deja de funcionar.
	Como efecto colateral de esta documentación y preservación, MAME permite
jugar a estos juegos en PC's actuales y otras plataformas, aunque esto no es el
objetivo principal del proyecto.

2.16.1. Información general
	- Nombre: Mame
	- Autores: Nicola Salmoria y el MAME team
	- Versión: 0.139
	- Web: http://www.mamedev.org/
	- Wiki: http://mamedev.org/devwiki/index.php/Main_Page
	- Compresión: Si, zip
	- Extensiones: .zip, .chd

2.16.2. Instalación (Debian)
	* Compilación de los fuentes (v0.139) (Recomendado):
		Lo primero que necesitaremos, es descargar el código fuente del Mame
	desde la web oficial (http://mamedev.org/release.html).	
		Antes de comenzar, probablemente necesitaremos instalar algunas
	librerías de desarrollo:
	$ sudo apt-get install libgconf2-dev libsdl1.2-dev libgtk2.0-dev
		En algunos casos, puede que también necesitemos instalar las librerías y
	headers de OpenGL o alternativamente MesaGL y MesaGL-Dev.
		Ahora prepararemos el código fuente, para lo que debemos descomprimirlo
	por ejemplo en el directorio "mame139".
		Para compilar, en una consola, nos movemos hasta el directorio "mame139"
	donde tenemos todo el código y ejecutaremos:
	$ make
		Si disponemos de un dual core, podemos añadir al final -j3 o -j5 si
	nuestro procesador es un quad core:
	$ make -j3
		Una vez que termine el proceso de compilación, eliminamos los archivos y
	directorios innecesarios (makefiles, codigo fuente, objetos, etc):
	$ rm -r obj src makefile
	¡¡Mucho cuidado con este comando!! antes de ejecutarlo debemos estar seguros
	de que estamos en el directorio donde hemos compilado Mame.
		Llegados a este punto tenemos dos opciones, instalarlo en nuestro
	directorio personal (home) únicamente para nuestro uso o instalarlo en el
	sistema para el uso de todos los usuarios:

	- Instalación local:
		Lo ideal, en este caso, sería mantener los emuladores en un mismo
	directorio para tenerlos un poco ordenados, así que vamos a suponer que
	usamos el directorio "emulators" en nuestro home para guardar los
	emuladores. Así, suponiendo que aún estamos dentro del directorio "mame139",
	ejecutaremos:
	$ mkdir /home/myuser/emulators/mame
	con lo que crearemos un directorio para alojar el emulador. Hay que	tener en
	cuenta que "myuser" debe ser sustituido por el nombre de nuestro usuario.
		El último paso, en este caso, es copiar el emulador y sus archivos al
	nuevo directorio:
	$ cp -r * /home/myuser/emulators/mame
	
	- Instalación en el sistema:
		Creamos un directorio en el sistema para alojar el emulador:		
	$ sudo mkdir /usr/share/games/mame
		Copiamos el emulador y sus archivos al nuevo directorio creado en el 
	sistema:
	$ sudo cp -r * /usr/share/games/mame
		El último paso, en este caso, es enlazar el ejecutable del emulador para
	que el sistema pueda localizarlo:
	$ sudo ln -s /usr/share/games/mame/mame /usr/games/mame
		Puede que el ejecutable se llame "mame64" si en la compilación se
	detectó una arquitectura de 64 bits.

2.16.3. Comandos
	-Información:
	$ mame -showusage

	-Uso básico:
	$ mame _path_al_juego_
	
	-Uso avanzado:
	$ mame -antialias -sound -skip_gameinfo -multithreading -vídeo opengl
	-keepaspect -rompath _path_al_dir_de_juegos_  _path_al_juego_ 

2.16.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Terminar emulación				ESC
	Entrar/Salir opciones			Tab
	Insertar monedas jugador 1		5
	Insertar monedas jugador 2		6
	Start jugador 1					1
	Start jugador 2					2
	Pausar/Continuar emulación		P
	
	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------
	Arriba		 					Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha		 					Cursor derecha
	Botón 1 						LCtr
	Botón 2 						LAlt
	Botón 3	 						Espace
	Botón 4	 						LShift
	Botón 5 						Z
	Botón 6 						X
	Botón 7 						C
	Botón 8 						V	
		
2.16.5. Notas
	El estado de la emulación depende del sistema emulado, aunque por norma
general funciona bastante bien.


2.17. Mednafen

	Emulador multi-sistema portable basado en OpenGL y SDL con características
avanzadas.

	Actualmente emula Atari Lynx, Nintendo GameBoy (Color), Nintendo GameBoy
Advance, Nintendo NES y FDS, Nec PC Engine/TurboGrafx 16 (CD) y SuperGrafx, Neo
Geo Pocket (Color), Nec PC-FX, WonderSwan (Color), Sega Master System, Sega Game
Gear, aunque estas dos últimas no están totalmente documentadas en la versión
actual.
Mednafen se distribuye bajo licencia GPL.

2.17.1. Información general
	- Nombre: Mednafen
	- Autores: El Mednafen Team
	- Versión: 0.8.D
	- Web: http://mednafen.sourceforge.net
	- Wiki:	http://en.wikipedia.org/wiki/Mednafen
	- Compresión: Si, zip y gzip
	- Extensiones: Depende del sistema emulado
	
2.17.2. Instalación (Debian) 
	* Paquetes deb oficiales (v0.8.D) (Recomendado):
		En el momento de escribir esta entrada, está disponible la versión más
	reciente de Mednafen en los repositorios oficiales de Debian, por lo que
	para instalarla, solo tendrémos que hacer:
	$ sudo apt-get install mednafen

	* Compilación de los fuentes (v0.8.D):
		Para compilar Mednafen desde el código fuente, primero debemos bajar el
	paquete con los fuentes de (http://sourceforge.net/projects/mednafen/) y
	descomprimirlo en un directorio adecuado. Una vez descomprimidos los
	fuentes, la compilación e instalación siguen un proceso estándar en los
	sistemas GNU/Linux, primero configuramos los fuentes:
	$ ./configure
		En el caso de que tras la configuración nos indicase que falta alguna
	librería en el sistema, solo tenemos que instalarla con apt.
		Continuaremos compilando e instalando
	$ make
	$ sudo make install

2.17.3. Comandos
	-Información:
	$ mednafen -help

	-Uso básico:
	$ mednafen -_sys_.stretch 0 -fs 1 _path_al_juego_
	
	-Uso avanzado:
	$ mednafen -_sys_.stretch 0 -fs 1 -vdriver 0 -_sys_.xres 1024 -_sys_.yres
	768 -_sys_.special hq4x _path_al_juego_

2.17.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Terminar emulación				ESC
	Mostrar ayuda					F1 <<<< Aquí está todo
	Pausar/Continuar emulación		P

	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------
	Arriba							W
	Abajo							Z
	Izquierda						A
	Derecha							S
	Botón 1							Numpad 3
	Botón 2							Numpad 2
	Botón 3							Numpad 1
	Botón 4							Numpad 6
	Botón 5							Numpad 5
	Botón 6							Numpad 4
	Select							Tab
	Run								Enter

2.17.5. Notas
	Emulación perfecta prácticamente en todos los sistemas soportados, en mi
opinión, uno de los mejores emuladores para GNU/Linux de cada uno de los
sistemas que emula.
	La configuración de teclas por defecto son un coñazo, pero como permite
reconfigurar las teclas para cada sistema de forma independiente, es muy
recomendable.
	Algunos sistemas requieren que su bios se encuentre en el directorio por
defecto de Mednafen "/home/myuser/.mednafen/". Consulta el manual del emulador
para obtener más información al respecto.


2.18. Mess

	MESS (Multi Emulator Super System).
	
	Se trata de un proyecto que documenta el hardware de una gran variedad de
ordenadores, consolas de vídeo juegos y calculadoras (casi todos clásicos) a
través de la emulación por software.
	Como efecto colateral de esta documentación, MESS permite que programas y
juegos para estas plataformas, puedan ser ejecutados en PC's actuales.
	MESS está basado en MAME.
	
2.18.1. Información general
	- Nombre: MESS (Multi Emulator Super System)
	- Autores: El MESS Team
	- Versión: 0.139
	- Web: http://www.mess.org
	- Wiki: http://mess.redump.net
	- Compresión: Si, zip
	- Extensiones: Depende del sistema emulado

2.18.2. Instalación (Debian)
	* Compilación de los fuentes (v0.139) (Recomendado):
		Mess está desarrollado como un parche para el código fuente del Mame,
	por lo que para compilarlo, lo primero que necesitaremos, es descargar el
	código fuente del propio Mess (http://mess.redump.net/downloads) así como el
	del Mame (http://mamedev.org/release.html). Las versiones deben coincidir,
	es decir, necesitaremos el código del Mame 0.139 para poder compilar el Mess
	0.139.
		Antes de comenzar, probablemente necesitaremos instalar algunas
	librerías de desarrollo:
	$ sudo apt-get install libgconf2-dev libsdl1.2-dev libgtk2.0-dev
		En algunos casos, puede que también necesitemos instalar las librerías y
	headers de OpenGL o alternativamente MesaGL y MesaGL-Dev.
		Ahora prepararemos el código fuente, para lo que debemos descomprimir el
	código fuente del Mame y una vez realizado esto, descomprimimos el del Mess
	en el mismo directorio, sobreescribiendo todo. En este punto ya tenemos todo
	el código fuente preparado para la compilación, supongamos que lo hemos
	descomprimido todo bajo el directorio "mess139".
		Para compilar, en una consola, nos movemos hasta el directorio "mess139"
	donde tenemos todo el código y ejecutaremos:
	$ make TARGET=mess
	Si disponemos de un dual core, podemos añadir al final -j3 o -j5 si	nuestro
	procesador es un quad core:
	$ make TARGET=mess -j3
		Una vez que termine el proceso de compilación, eliminamos los archivos y
	directorios innecesarios (makefiles, codigo fuente, objetos, etc):
	$ rm -r obj src cfg docs makefile svn.info
	¡¡Mucho cuidado con este comando!! antes de ejecutarlo debemos estar seguros
	de que estamos en el directorio donde hemos compilado Mess.
		Llegados a este punto tenemos dos opciones, instalarlo en nuestro
	directorio personal (home) únicamente para nuestro uso o instalarlo en el
	sistema para el uso de todos los usuarios:

	- Instalación local:
		Lo ideal, en este caso, sería mantener los emuladores en un mismo
	directorio para tenerlos un poco ordenados, así que vamos a suponer que
	usamos el directorio "emulators" en nuestro home para guardar los
	emuladores. Así, suponiendo que aún estamos dentro del directorio "mess139",
	ejecutaremos:
	$ mkdir /home/myuser/emulators/mess
	con lo que crearemos un directorio para alojar el emulador. Hay que	tener en
	cuenta que "myuser" debe ser sustituido por el nombre de nuestro usuario.
		El último paso, en este caso, es copiar el emulador y sus archivos al
	nuevo directorio:
	$ cp -r * /home/myuser/emulators/mess
	
	- Instalación en el sistema:
		Creamos un directorio en el sistema para alojar el emulador:		
	$ sudo mkdir /usr/share/games/mess
		Copiamos el emulador y sus archivos al nuevo directorio creado en el 
	sistema:
	$ sudo cp -r * /usr/share/games/mess
		El último paso, en este caso, es enlazar el ejecutable del emulador para
	que el sistema pueda localizarlo:
	$ sudo ln -s /usr/share/games/mess/mess /usr/games/mess
	Puede que el ejecutable se llame "mess64" si en el proceso de compilación se
	detectó una arquitectura de 64 bits.

2.18.3. Comandos
	- Información:
	$ mess -showusage

	- Uso básico:
	$ mess _sistema_ -cart _path_al_juego_

	- Uso avanzado:
	$ mess _sistema_ -keepaspect -skip_gameinfo -sound -multithreading -vídeo
	opengl -cart _path_al_juego_ -bp _path_a_las_bios_
	
	
2.18.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Terminar emulación				ESC
	Entrar/Salir opciones			Tab
	Seleccionar Juego				0
	Resetear Juego					2	<<<< Comenzar juego
	Pausar/Continuar emulación		P
		
	* Joystick (Puede ser remapeado)
	Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------
	Arriba 							Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha		 					Cursor derecha
	Botón 1 						LCtr
	Botón 2 						LAlt
	Botón 3 						Espace
	Botón 4 						LShift

2.18.5 Notas
	El estado de la emulación depende del sistema emulado, aunque por norma
general funciona bastante bien.
	Muchos sistemas necesitan bios y el uso del parámetro -bp.
	En los comandos hemos usado el parámetro "-cart" que se utiliza para indicar
la entrada de un cartucho, pero hay otros sistemas que usarán discos "-flop",
cassettes "-cass" o incluso CDRom's "-cdrm".


2.19. Mupen64Plus

	Emulador de Nintendo 64 basado en plug-ins de plataforma cruzada.

	Mupen64Plus, originalmente Mupen64-64bit, es un fork del emulador Mupen64
desarrollado por Richard42 
 	Es un emulador Open Source aunque el código fuente de los plugins son
distribuidos bajo la misma licencia que fueron creados.
	Mupen64Plus es capaz de ejecutar muchos juegos de Nintendo 64 de forma muy
precisa. Incluye un emulador de MIPS R4300 con recompilación dinámica para
arquitecturas de 32bits x86 y de 64bits amd64 y los plugins necesarios para
audio, renderizado de gráficos, co-procesador de señales y entrada o control.

2.19.1. Información general
	- Nombre: Mupen64Plus
	- Autores: Richard42
	- Versión: 1.5
	- Web: http://code.google.com/p/mupen64plus
	- Wiki:	http://code.google.com/p/mupen64plus/w/list
	- Compresión: Si, zip, 7z, gzip, bzip 
	- Extensiones: .n64, .z64, .v64	

2.19.2. Instalación (Debian)
	* Paquetes deb oficiales (v1.5) (Recomendado):
		Mupen64Plus se encuentra en los repositorios oficiales de Debian, por lo
	que	podremos instalarlo con:
	$ sudo apt-get install mupen64plus	
		Una vez que hemos instalado el emulador, deberemos arrancarlo para
	configurarlo desde su propia GUI y de esta forma dejarlo preparado para su
	uso desde Gelide.

		He de mencionar que en el momento de realizar esta entrada, está
	disponible la Beta 3 de la versión 2.0 (v1.99.3) pero aunque esta versión ya
	está muy avanzada, no está pensada para usuarios finales. Es por este motivo
	que hemos preferido mantener la versión estable 1.5.

2.19.3. Comandos
	-Información:
	$ mupen64plus --help

	-Uso básico:
	$ mupen64plus --nogui --fullscreen _path_al_juego_
	
	-Uso avanzado:
	$ mupen64plus --nogui --noask --noosd --fullscreen _path_al_juego_
	
2.19.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Terminar emulación				ESC
	Pausar/Continuar emulación		Enter
	
	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------
	Arriba		 					Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha				 			Cursor derecha
	Botón A 						X
	Botón B 						W
	Botón L 						Q
	Botón R 						S
	Botón Z 						Espace
	C Arriba						Home
	C Abajo							End							
	C Izquierda						Delete
	C Derecha						PGDown
	Start							Return	

2.19.5. Notas
	Emulación muy buena. Este emulador tiene su propia Gui. Para utilizarlo bajo
Gelide, es muy aconsejable ejecutar primero el emulador para configurar las
propiedades de sus plugins.


2.20. Nestopia

	Emulador de Nintendo Nes, Famicom y FDS centrado en la exactitud.

	Nestopia es un emulador OpenSource escrito en C++ estándar enfocado en
proporcionar una emulación lo más precisa posible. El desarrollo comenzó a mitad
de 2002, inicialmente fue lanzado para la plataforma Windows un año más tarde.
Desde entonces se ha portado a muchas plataformas, incluidas Linux y MacOS X.
	El port para Linux fue realizado por R. Belmont.
	
2.20.1. Información general
	- Nombre: Nestopia
	- Autores: Martin Freij, R. Belmont (Linux port)
	- Versión: 1.4.0
	- Web: http://nestopia.sourceforge.net/
	       http://rbelmont.mameworld.info/?page_id=200
	- Wiki:	http://en.wikipedia.org/wiki/Nestopia
	- Compresión: Si, 7z, zip, rar
	- Extensiones: .nes, .fds, .unf

2.20.2. Instalación (Debian)
	* Compilación de los fuentes (v1.4.0) (Recomendado):
		El port para GNU/Linux de Nestopia, está desarrollado como una especie
	de parche para el código fuente del Nestopia original, por lo que para
	compilarlo, lo primero que necesitaremos, es descargar el código fuente del
	propio Nestopia (http://nestopia.sourceforge.net/) así como el del port
	(http://rbelmont.mameworld.info/nst140_lnx_release_h.zip). Las versiones
	deben coincidir, es decir, necesitaremos el código del Nestopia 1.4.0 para
	poder compilar el port de la misma versión.
		Antes de comenzar, probablemente necesitaremos instalar algunas
	librerías de desarrollo:
	$ sudo apt-get install libgconf2-dev libsdl1.2-dev libgtk2.0-dev
		En algunos casos, puede que también necesitemos instalar las librerías y
	headers de OpenGL o alternativamente MesaGL y MesaGL-Dev.
		Ahora prepararemos el código fuente, para lo que debemos descomprimir el
	código fuente del Nestopia y una vez realizado esto, descomprimimos el del
	port para Linux en el mismo directorio, sobreescribiendo todo. En este punto
	ya tenemos todo el código fuente preparado para la compilación, supongamos
	que lo hemos descomprimido todo bajo el	directorio "Nestopia140src".
		Para compilar, en una consola, nos movemos hasta este directorio y
	ejecutaremos:
	$ make
		Si disponemos de un dual core, podemos añadir al final -j3 o -j5 si
	nuestro procesador es un quad core:
	$ make -j3
		Una vez que termine el proceso de compilación, para que el emulador
	funcione correctamente, necesitará unos archivos especiales, que debe
	localizar cuando se ejecute, por lo que	deberemos realizar las siguientes
	tareas antes de continuar con la instalación:
	$ mkdir /home/myuser/.nestopia
		Este comando creará un directorio donde Nestopia guardará sus archivos
	de configuración.
	$ cp nstcontrols NstDatabase.xml /home/doverman/.nestopia
		Llegados a este punto tenemos dos opciones, instalarlo en nuestro
	directorio personal (home) únicamente para nuestro uso o instalarlo en el
	sistema para el uso de todos los usuarios:

	- Instalación local:
		Lo ideal, en este caso, sería mantener los emuladores en un mismo
	directorio para tenerlos un poco ordenados, así que vamos a suponer que
	usamos el directorio "emulators" en nuestro home para guardar los
	emuladores. Así, suponiendo que aún estamos dentro del directorio
	"Nestopia140src", ejecutaremos:
	$ mkdir /home/myuser/emulators/nestopia
	con lo que crearemos un directorio para alojar el emulador. Hay que tener en
	cuenta que "myuser" debe ser sustituido por el nombre de nuestro usuario.
		El último paso, en este caso, es copiar el emulador al nuevo directorio:
	$ cp nst /home/myuser/emulators/nestopia/nestopia
	
	- Instalación en el sistema:
		Creamos un directorio en el sistema para alojar el emulador:		
	$ sudo mkdir /usr/share/games/nestopia
		Copiamos el emulador al nuevo directorio creado en el sistema:
	$ sudo cp nst /usr/share/games/nestopia
		El último paso, en este caso, es enlazar el ejecutable del emulador para
	que el sistema pueda localizarlo:
	$ sudo ln -s /usr/share/games/nestopia/nst /usr/games/nestopia
	
	- Configuración:
		Por desgracia este fantástico emulador solo acepta como parámetro por
	linea de comandos, el fichero del juego a emular, por lo que para dejar
	configurado el emulador a nuestro gusto, primero debemos ejecutarlo sin
	parámetros y desde su GUI, configurarlo a nuestro gusto:
	$ nestopia

2.20.3. Comandos
	-Información:
	$ No dispone por linea de comandos.

	-Uso básico:
	$ nestopia _path_al_juego_ 
	
	-Uso avanzado:
	$ nestopia _path_al_juego_
		
2.20.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Terminar emulación				ESC
	Pausar/Continuar emulación		Pausa
	
	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------
	Arriba		 					Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha				 			Cursor derecha
	Botón A 						,
	Botón B 						.
	Select							2
	Start							1
	
2.20.5. Notas	
	Emulación bastante buena.
	La configuración de teclas por defecto es bastante rara. Toda la
configuración está en el fichero "/home/myuser/.nestopia/nstcontrols" y	por lo
tanto se puede modificar directamente o bien desde la GUI del emulador.
	Para emular la Famicom Disk System, Nestopia requiere que la bios de la
consola esté en "/home/myuser/.nestopia/disksys.rom".


2.21. Raine

	Emulador multi arcade enfocado principalmente en el hardware de Taito y
	Jaleco.

	Raine es un emulador de maquinas arcade. Emula algunas de las basadas en el
hardware M68000, M68020 así como algunas otras. Inicialmente estaba enfocado a
emular el hardware de Taito y Jaleco.	
	Comenzó como un experimento con el romset del Rainbow Island, dumpeado por
Aracorn/Romlist. Ahora Raine es capaz de emular muchos buenos juegos, incluyendo
nuevas adiciones de Cave y otras compañías.
	El engine de sonido fue mejorado gracias al trabajo de Hiromitsu Shioya.
	Recientemente muchos programadores se han unido al Raine Team, añadiendo
nuevos drivers y realizando muchas mejoras.

2.21.1. Información general
	- Nombre: Raine
	- Autores: Antiriad y el Raine Team
	- Versión: 0.51.7
	- Web: http://rainemu.swishparty.co.uk/
	- Wiki:	???
	- Compresión: Si, zip 
	- Extensiones: .zip
	
2.21.2. Instalación (Debian)
	* Paquetes deb oficiales (v0.51.7) (Recomendado):
		Descargamos el paquete deb para i386 desde la zona de descargas de la
	web oficial (http://rainemu.swishparty.co.uk/html/download/latest.html) y
	ejecutamos:
	$ sudo dpkg -i raine_0.51.7_i386.deb
		De momento no existe versión de 64bits, por lo que para amd64 tendremos
	que forzar la instalación del paquete para i386:
	$ sudo dpkg -i --force-architecture raine_0.51.7_i386.deb
		Llegados a este punto es muy probable que tengamos que instalar	alguna
	librería de 32bits para que funcione correctamente en amd64. Para ello
	haremos uso de getlibs
	$ sudo getlibs /usr/games/raine
	
		Es muy importante que una vez instalado raine, lo configuremos desde su
	propia GUI, ya que hay parámetros imposibles de establecer por linea de
	comandos. En concreto uno de los más importantes que deberemos configurar
	para su correcto funcionamiento bajo Gelide, es el path de nuestros juegos.
	Raine no usa el path completo al juego, sino su nombre y por lo tanto este
	path debe estar bien configurado para poder usar Raine correctamente desde
	Gelide.
	 
2.21.3. Comandos
	-Información:
	$ raine -help

	-Uso básico:
	$ raine -game _nombre_del_juego_
	
	-Uso avanzado:
	$ raine -nogui -game _nombre_del_juego_

2.21.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Terminar emulación				ESC
	Insertar monedas jugador 1		3
	Insertar monedas jugador 2		4
	Start jugador 1					1
	Start jugador 2					2
	Pausar/Continuar emulación		P
	
	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------
	Arriba		 					Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha		 					Cursor derecha
	Botón 1 						V
	Botón 2 						B
	Botón 3	 						N
	Botón 4	 						M

2.21.5. Notas
	Emulación muy buena prácticamente en todos los juegos de su romset.
	

2.22. Regen

	Emulador de SEGA Genesis/Mega-Drive enfocado en la precisión.
	
	Regen es un emulador que soporta las consolas Genesis/Mega Drive, Master
System, Game Gear, SC-3000 y SG-1000 de SEGA, aunque de momento para GNU/Linux,
solo está disponible la primera de ellas.
	Regen se centra principalmente en la precisión de la emulación, por lo que
la compatibilidad en Mega Drive es probablemente del 100%.
 
2.22.1. Información general
	- Nombre: Regen
	- Autores: Aamir Mughal
	- Versión: 0.9
	- Web: http://aamirm.hacking-cult.org/www/regen.html
	- Wiki:	???
	- Compresión: Si, zip, 7z
	- Extensiones: .smd, .bin, .md, .gen

2.22.2. Instalación (Debian)
	* Binarios oficiales (v0.9) (Recomendado):
		Para instalar el emulador, lo primero que necesitamos es descargarlo
	desde el siguiente enlace (http://files.emuwiki.com/Regen09-linux.tar.bz2).
	Este paquete ya viene preparado con el binario y los plugins de renderizado.
		Una vez	descargado, descomprimimos por ejemplo en "regen09-linux". En
	teoría con esto debería bastar para usarlo.

	- Instalación local:
		Lo ideal, sería mantener los emuladores en un mismo	directorio para
	tenerlos un poco ordenados, así que vamos a suponer que	usamos el directorio
	"emulators" en nuestro home para guardar los emuladores. Así, suponiendo que
	aún estamos dentro del directorio donde hemos descomprimido Regen,
	ejecutaremos:
	$ mkdir /home/myuser/emulators/regen
	con lo que crearemos un directorio para alojar el emulador. Hay que	tener en
	cuenta que "myuser" debe ser sustituido por el nombre de nuestro usuario.
		El último paso, en este caso, es copiar el emulador y sus archivos al
	nuevo directorio:
	$ cp -r * /home/myuser/emulators/regen

	- Instalación en el sistema:
		Creamos un directorio en el sistema para alojar el emulador:		
	$ sudo mkdir /usr/share/games/regen
		Copiamos el emulador y sus archivos al nuevo directorio creado en el
	sistema:
	$ sudo cp -r * /usr/share/games/regen
		El último paso, en este caso, es enlazar el ejecutable del emulador para
	que el sistema pueda localizarlo:
	$ sudo ln -s /usr/share/games/regen/regen /usr/games/regen

2.22.3. Comandos
	-Información:
	$ regen

	-Uso básico:
	$ regen -f _path_al_juego_
	
	-Uso avanzado:
	$ regen -f -v -p _path_al_plugin_sin_extension_ _path_al_juego_	

2.22.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Salir del emulador				ESC

	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------	
 	Arriba 							Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha		 					Cursor derecha
	Botón A 						A
	Botón B 						S
	Botón C 						D
	Botón X 						Z
	Botón Y 						X
	Botón Z 						C
	Start							Return
	Mode							Q

2.22.5. Notas
	Emulación prácticamente perfecta soportando probablemente el 100% de los
juegos comerciales. Es probablemente el mejor de los que he probado hasta ahora.


2.23. SdlMame

	MAME (Multiple Arcade Machine Emulator).

	Se trata de un proyecto sin fines de lucro cuyo objetivo principal es ser
una referencia del funcionamiento interno de las máquinas arcade emuladas. Esto
se hace tanto con propósitos educativos como con de preservación con el fin de
evitar que muchos de los juegos históricos desaparezcan para siempre una vez que
su hardware deja de funcionar.
	Como efecto colateral de esta documentación y preservación, MAME permite
jugar a estos juegos en PC's actuales y otras plataformas, aunque esto no es el
objetivo principal del proyecto.
	SdlMame es una versión portable para sistemas POSIX usando las librerías
SDL.
	A partir de la versión 0.136, SdlMame fue integrado en el propio MAME, por
lo que esta es la última versión que existe como SdlMame.

2.23.1. Información general
	- Nombre: SdlMame
	- Autores: Olivier Galibert, R. Belmont y el MAME Team.
	- Versión: 0.136
	- Web: http://www.mamedev.org/
	       http://rbelmont.mameworld.info/?page_id=163
	- Wiki:	http://mamedev.org/devwiki/index.php/Main_Page
	        http://es.wikipedia.org/wiki/MAME
	- Compresión: Si, zip
	- Extensiones: .zip, .chd
	
2.23.2. Instalación (Debian)	
	* Compilación de los fuentes (v0.136) (Recomendado):
		Lo primero que necesitaremos, es descargar el código fuente de la
	versión 0.136 desde (http://rbelmont.mameworld.info/sdlmame0136.zip)
		Antes de comenzar, probablemente necesitaremos instalar algunas
	librerías de desarrollo:
	$ sudo apt-get install libgconf2-dev libsdl1.2-dev libgtk2.0-dev
		En algunos casos, puede que también necesitemos instalar las librerías y
	headers de OpenGL o alternativamente MesaGL y MesaGL-Dev.
		Ahora prepararemos el código fuente, para lo que debemos descomprimir el
	archivo que nos hemos descargado, por ejemplo bajo el directorio
	"sdlmame136".
		El código fuente de la versión 0.136 tiene un bug, por lo que para
	corregirlo,	antes de compilarlo, nos movemos hasta el directorio que hemos
	creado y ejecutamos el siguiente comando:
	$ sed -i 's:GTK_WIDGET_REALIZED:gtk_widget_get_realized:' src/osd/sdl/dview.c
		Ahora ya estamos listos para compilar SdlMame:
	$ make
		Si nuestra arquitectura es de 64 bits tendremos que ejecutar:
	$ make PTR64=1
		Una vez que termine el proceso de compilación, eliminamos los archivos y
	directorios innecesarios (makefiles, codigo fuente, objetos, etc):
	$ rm -r obj src makefile
	¡¡Mucho cuidado con este comando!! antes de ejecutarlo debemos estar seguros
	de que estamos en el directorio donde hemos compilado SdlMame.
		Llegados a este punto tenemos dos opciones, instalarlo en nuestro
	directorio personal (home) únicamente para nuestro uso o instalarlo en el
	sistema para el uso de todos los usuarios:

	- Instalación local:
		Lo ideal, en este caso, sería mantener los emuladores en un mismo
	directorio para tenerlos un poco ordenados, así que vamos a suponer que
	usamos el directorio "emulators" en nuestro home para guardar los
	emuladores. Así, suponiendo que aún estamos dentro del directorio
	"sdlmame136", ejecutaremos:
	$ mkdir /home/myuser/emulators/sdlmame
	con lo que crearemos un directorio para alojar el emulador. Hay que	tener en
	cuenta que "myuser" debe ser sustituido por el nombre de nuestro usuario.
		El último paso, en este caso, es copiar el emulador y sus archivos al
	nuevo directorio:
	$ cp -r * /home/myuser/emulators/sdlmame
	
	- Instalación en el sistema:
		Creamos un directorio en el sistema para alojar el emulador:		
	$ sudo mkdir /usr/share/games/sdlmame
		Copiamos el emulador y sus archivos al nuevo directorio creado en el 
	sistema:
	$ sudo cp -r * /usr/share/games/sdlmame
		El último paso, en este caso, es enlazar el ejecutable del emulador para
	que el sistema pueda localizarlo:
	$ sudo ln -s /usr/share/games/sdlmame/mame /usr/games/sdlmame

2.23.3. Comandos
	-Información:
	$ sdlmame -showusage

	-Uso básico:
	$ sdlmame _path_al_juego_
	
	-Uso avanzado:
	$ sdlmame -antialias -sound -skip_gameinfo -multithreading -vídeo opengl
	-keepaspect -rompath _path_al_dir_de_juegos_  _path_al_juego_ 

2.23.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Terminar emulación				ESC
	Entrar/Salir opciones			Tab
	Insertar monedas jugador 1		5
	Insertar monedas jugador 2		6
	Start jugador 1					1
	Start jugador 2					2
	Pausar/Continuar emulación		P
	
	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------
	Arriba		 					Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha		 					Cursor derecha
	Botón 1 						LCtr
	Botón 2 						LAlt
	Botón 3	 						Espace
	Botón 4	 						LShift
	Botón 5 						Z
	Botón 6 						X
	Botón 7 						C
	Botón 8 						V	

2.23.5. Notas
	El estado de la emulación depende del sistema emulado, aunque por norma
general funciona bastante bien.


2.24. SdlMess

	MESS (Multi Emulator Super System).
	
	Se trata de un proyecto que documenta el hardware de una gran variedad de
ordenadores, consolas de vídeo juegos y calculadoras (casi todos clásicos) a
través de la emulación por software.
	Como efecto colateral de esta documentación, MESS permite que programas y
juegos para estas plataformas, puedan ser ejecutados en PC's actuales.
	MESS está basado en MAME.
	SdlMess es una versión portable para sistemas POSIX usando las librerías
SDL.
	A partir de la versión 0.136, SdlMess fue integrado en el propio MESS, por
lo que esta es la última versión que existe como SdlMess.

2.24.1. Información general
	- Nombre: SDLMess
	- Autores: Olivier Galibert, R. Belmont y el MESS Team.
	- Versión: 0.136
	- Web: http://www.mess.org
	       http://rbelmont.mameworld.info/?page_id=163
	- Wiki: http://mess.redump.net
	        http://en.wikipedia.org/wiki/MESS
	- Compresión: Si, zip
	- Extensiones: Depende del sistema emulado
	
2.24.2. Instalación (Debian)
	* Compilación de los fuentes (v0.136) (Recomendado):
		Lo primero que necesitaremos, es descargar el código fuente de la
	versión 0.136 desde (http://rbelmont.mameworld.info/sdlmess0136.zip).
		Antes de comenzar, probablemente necesitaremos instalar algunas
	librerías de desarrollo:
	$ sudo apt-get install libgconf2-dev libsdl1.2-dev libgtk2.0-dev
		En algunos casos, puede que también necesitemos instalar las librerías y
	headers de OpenGL o alternativamente MesaGL y MesaGL-Dev.
		Ahora prepararemos el código fuente, para lo que debemos descomprimir el
	archivo que nos hemos descargado, por ejemplo en el directorio "sdlmess136".
		El código fuente de la versión 0.136 tiene un bug, por lo que para
	corregirlo,	antes de compilarlo, nos movemos hasta el directorio que hemos
	creado y ejecutamos el siguiente comando:
	$ sed -i 's:GTK_WIDGET_REALIZED:gtk_widget_get_realized:' src/osd/sdl/dview.c
	Ahora ya estamos listos para compilar SdlMess:
	$ make -f makefile.sdl
	Si nuestra arquitectura es de 64 bits tendremos que ejecutar:
	$ make -f makefile.sdl PTR64=1
		Una vez que termine el proceso de compilación, eliminamos los archivos y
	directorios innecesarios (makefiles, codigo fuente, objetos, etc):
	$ rm -r obj src cfg docs makefile.sdl svn.info
	¡¡Mucho cuidado con este comando!! antes de ejecutarlo debemos estar seguros
	de que estamos en el directorio donde hemos compilado SdlMess.
		Llegados a este punto tenemos dos opciones, instalarlo en nuestro
	directorio personal (home) únicamente para nuestro uso o instalarlo en el
	sistema para el uso de todos los usuarios:
	
	- Instalación local:
		Lo ideal, en este caso, sería mantener los emuladores en un mismo
	directorio para tenerlos un poco ordenados, así que vamos a suponer que
	usamos el directorio "emulators" en nuestro home para guardar los
	emuladores. Así, suponiendo que aún estamos en el directorio "sdlmess136",
	ejecutaremos:
	$ mkdir /home/myuser/emulators/sdlmess
	con lo que crearemos un directorio para alojar el emulador. Hay que	tener en
	cuenta que "myuser" debe ser sustituido por el nombre de nuestro usuario.
		El último paso, en este caso, es copiar el emulador y sus archivos al
	nuevo directorio:
	$ cp -r * /home/myuser/emulators/sdlmess
	
	- Instalación en el sistema:
		Creamos un directorio en el sistema para alojar el emulador:		
	$ sudo mkdir /usr/share/games/sdlmess
		Copiamos el emulador y sus archivos al nuevo directorio creado en el 
	sistema:
	$ sudo cp -r * /usr/share/games/sdlmess
		El último paso, en este caso, es enlazar el ejecutable del emulador para
	que el sistema pueda localizarlo:
	$ sudo ln -s /usr/share/games/sdlmess/mess /usr/games/sdlmess

2.24.3. Comandos
	-Información:
	$ sdlmess -showusage

	-Uso básico:
	$ sdlmess _sistema_ -cart _path_al_juego_

	-Uso avanzado:
	$ sdlmess _sistema_ -keepaspect -skip_gameinfo -sound -multithreading -vídeo
	opengl -cart _path_al_juego_ -bp _path_a_las_bios_

2.24.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Terminar emulación				ESC
	Entrar/Salir opciones			Tab
	Seleccionar Juego				0
	Resetear Juego					2	<<<< Comenzar juego
	Pausar/Continuar emulación		P

	* Joystick (Puede ser remapeado)
	Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------
	Arriba 							Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha		 					Cursor derecha
	Botón 1 						LCtr
	Botón 2 						LAlt
	Botón 3 						Espace
	Botón 4 						LShift
	
2.24.5. Notas
	El estado de la emulación depende del sistema emulado, aunque por norma
general funciona bastante bien.
	Muchos sistemas necesitan bios y el uso del parámetro -bp.
	En los comandos hemos usado el parámetro "-cart" que se utiliza para indicar
la entrada de un cartucho, pero hay otros sistemas que usarán discos "-flop",
cassettes "-cass" o incluso CDRom's "-cdrm".


2.25. Snes9x-Gtk

	Emulador portable Freeware para Super Nintendo Entertainment System.

	SNes9x básicamente te permite jugar a muchos de los juegos diseñados para la
SNES y Super Famicom en un PC.
	Es el resultado de más de tres años de trabajo de programación, hackeo, etc.
Esta escrito en C++, con tres núcleos de CPU emulados en ensamblador apara Linux
i386 y con port para Windows.
	Actualmente hay muchos ports de Snes9x para diferentes sistemas.
	Snes9x-Gtk es un port de Snes9x usando las librerías GTK+.
	
2.25.1. Información general
	- Nombre: Snes9x-Gtk
	- Autores: Brandon Wright (bearoso)
	- Versión: 1.52.79
	- Web: http://code.google.com/p/snes9x-gtk/
	- Wiki:	http://es.wikipedia.org/wiki/Snes9x
	- Compresión: Si, zip y gzip
	- Extensiones: .sfc, .smc, .fig, .swc, .bin 
	
2.25.2. Instalación (Debian)
	* Compilación de los fuentes (v1.52.79) (Recomendado):
		Para compilar Snes9x-Gtk desde el código fuente, primero debemos bajar
	el paquete con los fuentes de (http://code.google.com/p/snes9x-gtk/) y
	descomprimirlo en un directorio adecuado. Una vez descomprimidos los
	fuentes, la compilación e instalación siguen un proceso estándar en los
	sistemas GNU/Linux, aunque deberemos realizarlo desde el directorio "gtk"
	incluido en los fuentes.
		Primero configuramos los fuentes:
	$ ./configure
		En el caso de que tras la configuración nos indicase que falta alguna
	librería en el sistema, solo tenemos que instalarla con apt.
		Continuaremos compilando e instalando
	$ make
		Si todo fue correcto ya tendremos el emulador compilado con el nombre
	"snes9x-gtk".
		Llegados a este punto tenemos dos opciones, instalarlo en nuestro
	directorio personal (home) únicamente para nuestro uso o instalarlo en el
	sistema para el uso de todos los usuarios:
	
	- Instalación local:
		Lo ideal, sería mantener los emuladores en un mismo	directorio para
	tenerlos un poco ordenados, así que vamos a suponer que	usamos el directorio
	"emulators" en nuestro home para guardar los emuladores. Así, suponiendo que
	aún estamos dentro del directorio donde hemos compilado Snes9x-gtk,
	ejecutaremos:
	$ mkdir /home/myuser/emulators/snes9x-gtk
	con lo que crearemos un directorio para alojar el emulador. Hay que	tener en
	cuenta que "myuser" debe ser sustituido por el nombre de nuestro usuario.
		El último paso, en este caso, es copiar el emulador:
	$ cp -r snes9x-gtk /home/myuser/emulators/snes9x-gtk

	- Instalación en el sistema:
	Suponiendo que aún estamos dentro del directorio donde hemos compilado
	Snes9x-gtk,	ejecutaremos:
	$ sudo make install

		Una vez que hemos instalado el emulador, deberemos arrancarlo para
	configurarlo desde su propia GUI, ya que por defecto viene totalmente sin
	configuración, sobre todo de controles.
	
2.25.3. Comandos
	-Información:
	No dispone de información por linea de comandos.

	-Uso básico:
	$ snes9x-gtk _path_al_juego_
	
	-Uso avanzado:
	$ snes9x-gtk -filter 2xsai _path_al_juego_

2.25.4. Controles básicos
	Por defecto están totalmente desconfigurados, hay que configurarlos antes de
poder usarlos.
	Snes9x-Gtk tiene una opción muy interesante en el panel de preferencias de
emulación: "The ESC key should". Esta opción la podremos establecer como
"Quit Snes9x", para cerrar totalmente el emulador con la tecla ESC.

2.25.5. Notas
	La emulación es muy buena y tiene muchas opciones para configurar el
emulador al gusto. El modo fullscreen ha mejorado mucho respecto al original
Snes9x, donde incluso había que ejecutarlo en modo root.
	La única nota en contra es que venga sin una preconfiguración en los
controles.


2.26. SpectEmu

	Un emulador de ZX-Spectrum 48k para Linux y otros Unix.

	SpectEmu es un emulador de Sinclair ZX Spectrum 48k diseñado para Linux y
otros sistemas Unix con un soporte completo de las instrucciones del Z80. Posee
una emulación de Pantalla, sonido y cintas bastante precisa y puede correr tanto
en consola como en X11.
	SpectEmu es libre y usa la licencia GNU GPL

2.26.1. Información general
	- Nombre: SpectEmu
	- Autores: Miklos Szeredi
	- Versión: 0.94
	- Web: http://www.inf.bme.hu/~mszeredi/spectemu
	- Wiki:
	- Compresión: No.
	- Extensiones: .tzx, .tap, .z80, .sna.

2.26.2. Instalación (Debian)
	* Paquetes deb oficiales (v94) (Recomendado):
		SpectEmu se encuentra en los repositorios oficiales de Debian, por lo
	que podremos instalarlo con:
	$ sudo apt-get install spectemu-x11

		Para el correcto funcionamiento del emulador, debemos instalar además el
	paquete spectrum-roms que también se encuentra en los repositorios oficiales
	de Debian:
	$ sudo apt-get install spectrum-roms

2.26.3. Comandos
	-Información:
	$ xspect -help

	-Uso básico:
	$ xspect _path_al_juego_
	
	-Uso avanzado:
	$ xspect -quick-load -scale 3 _path_al_juego_

2.26.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Terminar emulación				F10
	Ayuda							F1 (La muestra por consola)
	Reset							F5
	Cinta Play 						F4
	Cinta Pause						F6
	Cinta Stop 						F7

2.26.5. Notas
	Emulación perfecta prácticamente.
	Cuando se usan formatos de cinta .tzx o .tap, el emulador actúa como el
ordenador normal, por lo que es necesario el comando " LOAD "" " para cargar un
juego, de todas formas, gracias al parámetro -quick-load, SpectEmu evita los
tiempos de carga de las cintas. Cuando se usan formatos de snapshots .z80 o
.sna, la carga es instantanea.
	Por desgracia el emulador no tiene modo de pantalla completa.


2.27. Stella

	Emulador multi-plataforma de Atari 2600 VCS bajo licencia GNU.
	
	Stella es un emulador de Atari 2600 VCS libre y multi-plataforma
originalmente desarrollado para Linux por Bradford W. Mott. Stella te permite
divertirte una vez más con todos tus juegos favoritos de la 2600.
	Está escrito en C++ lo cual permite que sea portado a otros sistemas
operativos y arquitecturas. Desde su aparición, ha sido portado con éxito a 
AcornOS, AmigaOS, DOS, FreeBSD, Linux, MacOS, OpenStep, OS/2, Unix, and Windows,
así como a consolas como Sega Dreamcast, GP2X, Nintendo DS y Playstation.
 
2.27.1. Información general
	- Nombre: Stella
	- Autores: Bradford W. Mott y el Stella Team
	- Versión: 3.2.2
	- Web: http://stella.sourceforge.net
	- Wiki:	http://es.wikipedia.org/wiki/Stella_(emulador)
	- Compresión: Si, zip y gzip
	- Extensiones: .a26, .bin, .rom

2.27.2. Instalación (Debian)
	* Paquetes deb oficiales (v3.2.2) (Recomendado):
		El equipo de Stella proporciona para cada nueva versión (además del
	código fuente) paquetes para las distribuciones más comunes. Entre estos
	podemos encontrar paquetes en formato deb tanto para arquitecturas i386	como
	para amd64, por lo que es aconsejable usar estos paquetes.
		Descargamos el paquete adecuado para nuestra arquitectura desde el
	apartado de descargas de la web oficial del proyecto Stella
	(http://stella.sourceforge.net/downloads.html) y ejecutamos el siguiente
	comando para instalarlo:
	$ sudo dpkg -i stella_3.3.3-1_i386.deb
		En caso de descargar la versión para amd64, el comando a ejecutar será:
	$ sudo dpkg -i stella_3.3.3-1_amd64.deb
	sobra decir que para ejecutar estos comandos deberemos estar situados en
	el directorio donde hemos descargo los paquetes.
	
	* Desde los repositorios oficiales:
		En los repositorios oficiales de Debian está la versión 3.1.2
	$ sudo apt-get install stella

2.27.3. Comandos
	-Información:
	$ stella -help

	-Uso básico:
	$ stella -fullscreen 1 _path_al_juego_

	-Uso avanzado:
	$ stella -fullscreen 1 -vídeo gl -gl_fsmax 1 -gl_filter nearest	-gl_aspect
	1.7 -center 1 -sound 1 -channels 2 _path_al_juego_

2.27.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Salir del emulador				Control + q
	Abrir menú de opciones			Tab
	Fin emulación / Salir opciones	ESC
	Seleccionar juego				F1
	Resetear Juego					F2	<<<< Comenzar juego
	Jugador 1 dificultad A			F5
	Jugador 1 dificultad B			F6
	Jugador 2 dificultad A			F7
	Jugador 2 dificultad B			F8
	Pausar/Continuar emulación		Pause

	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------
	Arriba 							Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha		 					Cursor derecha
	Botón 1 (Fire)		 			Space
	Botón 2 (Trigger)	 			4
	Botón 3 (Booster)	 			5

	- Joy derecho (Joy1)
	Función 						Tecla
	-------------------------------------------------------
	Arriba 							Y
	Abajo 							H
	Izquierda 						G
	Derecha		 					J
	Botón 1 (Fire)		 			F
	Botón 2 (Trigger)	 			6
	Botón 3 (Booster)	 			7	

2.27.5. Notas	
	Emulación prácticamente perfecta.
	
	
2.28. Osmose

	Emulador de Sega Master System y Game Gear Open Source.
		
	Osmose es un emulador para Sega Master System y Game Gear Open Source
lanzado bajo licencia GPL. Hace uso de las librerías SDL, OpenGL, Zlib, así como
del paquete de descompresión de Gilles Vollant.
	Su nombre proviene de una combinación de palabras: Object Sega Master
Oriented System Emulator.

2.28.1. Información general
	- Nombre: Osmose
	- Autores: Bruno Vedder
	- Versión: 0.9.2
	- Web: http://bcz.emu-france.com/osmose.htm
	- Wiki:	???
	- Compresión: Si, zip 
	- Extensiones: .sms, .gg

2.28.2. Instalación (Debian)
	* Binarios oficiales (v0.9.2) (Recomendado):
		Para instalar el emulador, lo primero que necesitamos es descargarlo de
	la web oficial (http://bcz.emu-france.com/osmose.htm). Podremos encontrar
	paquetes tanto para i386 como para amd64, además del código fuente. Una vez
	descargado, descomprimimos por ejemplo en "Osmose-0.9.2". En teoría con esto
	debería bastar para usarlo.

	- Instalación local:
		Lo ideal, sería mantener los emuladores en un mismo	directorio para
	tenerlos un poco ordenados, así que vamos a suponer que	usamos el directorio
	"emulators" en nuestro home para guardar los emuladores. Así, suponiendo que
	aún estamos dentro del directorio donde hemos descomprimido Osmose,
	ejecutaremos:
	$ mkdir /home/myuser/emulators/osmose
	con lo que crearemos un directorio para alojar el emulador. Hay que	tener en
	cuenta que "myuser" debe ser sustituido por el nombre de nuestro usuario.
		El último paso, en este caso, es copiar el emulador y sus archivos al
	nuevo directorio:
	$ cp * /home/myuser/emulators/osmose

	- Instalación en el sistema:
		Creamos un directorio en el sistema para alojar el emulador:		
	$ sudo mkdir /usr/share/games/osmose
		Copiamos el emulador y sus archivos al nuevo directorio creado en el
	sistema:
	$ sudo cp * /usr/share/games/osmose
		El último paso, en este caso, es enlazar el ejecutable del emulador para
	que el sistema pueda localizarlo:
	$ sudo ln -s /usr/share/games/osmose/osmose /usr/games/osmose

2.28.3. Comandos
	-Información:
	$ osmose

	-Uso básico:
	$ osmose -fs _path_al_juego_
	
	-Uso avanzado:
	$ osmose -fs -bilinear _path_al_juego_

2.28.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Salir del emulador				ESC
	Pausar emulación				P
	Game Gear Start					Enter

	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------
	Arriba 							Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha		 					Cursor derecha
	Botón 1 						W
	Botón 2 						V
		
	- Joy derecho (Joy1)
	Función 						Tecla
	-------------------------------------------------------
	Arriba 							Numpad 5
	Abajo 							Numpad 2
	Izquierda 						Numpad 1
	Derecha		 					Numpad 3
	Botón 1					 		J
	Botón 2					 		M

2.28.5. Notas
	Emulación muy buena tanto para Master System como para Game Gear.
		
	
2.29. Virtual Jaguar GCC/SDL

	Emulador portable para Atari Jaguar.
	
	Virtual Jaguar es un emulador portable dedicado a emular el hardware de la
consola Atari Jaguar en un PC estándar. El emulador fue desarrollado
originalmente por David Raingeard de Potato Emulation y fue liberado bajo la
licencia GPL en 2003.
	Virtual Jaguar GCC/SDL no es solo un port, sino que ha sido extendido y
reescrito para que podamos divertirnos con la emulación de la Atari Jaguar en
cualquier plataforma con soporte para GCC y SDL.

2.29.1. Información general
	- Nombre: Virtual Jaguar GCC/SDL
	- Autores: Niels Wagenaar, Carwin Jones, James L. Hammons y Adam Gree.
	- Versión: 1.0.7
	- Web: http://icculus.org/virtualjaguar/
	- Wiki:	???
	- Compresión: Si, zip y gzip
	- Extensiones: .j64, .jag, .rom, .abs
	
2.29.2. Instalación (Debian) 
	* Compilación de los fuentes (v1.0.7) (Recomendado):
		Antes de comenzar, he de mencionar que el código fuente de la versión
	1.0.7 de Virtual Jaguar GCC/SDL tiene algunos fallos que impiden su	correcta
	compilación, por lo que deberemos corregirlos antes de poder compilar.
		Lo primero que debemos hacer es descargar y descomprimir el código
	fuente desde la página oficial (http://www.icculus.org/virtualjaguar/
	tarballs/virtualjaguar-1.0.7-src.tar.bz2). Vamos a suponer que lo hemos
	descomprimido en el directorio "vjsrc". Procederemos con la modificación
	de los errores: 
	- Archivo "src/cdintf_linux.cpp":
	Debemos añadir } antes del #endif que aparece al final en la linea 210.
	- Archivo "src/sdlemu_config.cpp"
	Debemos añadir las líneas
		#include <stdlib.h>
		#include <string.h>
	justo después de la cabecera inicial, en la línea 19.
	- Archivo "src/memory.cpp"
	Debemos modificar la línea 138, cambiando "(unsigned int)alias->ptr" por
	"alias->ptr".
		Una vez realizados estos cambios, ya tenemos el código fuente preparado
	para ser compilado. Desde una terminal accedemos al directorio "vjsrc" y
	ejecutaremos:
	$ ./compile
		Eliminamos los archivos no necesarios tras la compilación:
	$ rm -r obj src compile Makefile vj-ico.o 

	- Instalación local:
		Lo ideal, en este caso, sería mantener los emuladores en un mismo
	directorio para tenerlos un poco ordenados, así que vamos a suponer que
	usamos el directorio "emulators" en nuestro home para guardar los
	emuladores. Así, suponiendo que estamos dentro del directorio "vjsrc",
	ejecutaremos:
	$ mkdir /home/myuser/emulators/virtualjaguar
	con lo que crearemos un directorio para alojar el emulador. Hay que	tener en
	cuenta que "myuser" debe ser sustituido por el nombre de nuestro usuario.
		El último paso, en este caso, es copiar el emulador al nuevo directorio:
	$ cp -r * /home/myuser/emulators/virtualjaguar

	- Instalación en el sistema:
		Creamos un directorio en el sistema para alojar el emulador:		
	$ sudo mkdir /usr/share/games/virtualjaguar
		Copiamos el emulador y sus archivos al nuevo directorio creado en el 
	sistema:
	$ sudo cp -r * /usr/share/games/virtualjaguar
		El último paso, es enlazar el ejecutable del emulador para que el
	sistema pueda localizarlo:
	$ sudo ln -s /usr/share/games/virtualjaguar/vj /usr/games/virtualjaguar

2.29.3. Comandos
	-Información:
	$ virtualjaguar -help

	-Uso básico:
	$ virtualjaguar _path_al_juego_ -fullscreen

	-Uso avanzado:
	$ virtualjaguar _path_al_juego_ -fullscreen -dsp -gl

2.29.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Abrir / Cerrar menú				ESC
	Salir del emulador				ESC y después Q

	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------
	Arriba 							Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha		 					Cursor derecha
	Botón A							C
	Botón B							X
	Botón C							Z
	Botones 1-10					Numpad 0-9 (0 = 10)
	Botón #							Numpad /
	Botón *							Numpad *	
	Start							Enter
	Select							'

2.29.5. Notas
	Emulación imperfecta. El sonido funciona muy mal, por lo que es	mejor no
utilizar el parámetro -dsp.
	En el caso de utilizar el parámetro -bios, requiere que la bios de la
consola se encuentre en "/usr/share/games/virtualjaguar/bios/jagboot.rom".
		
	
2.30. VisualBoyAdvance

	Emulador libre para Nintendo Game Boy (Color) y Game Boy Advance.

	VBA Esta disponible para diferentes plataformas, como Linux, Windows, Mac
OS X, etc.		
	El proyecto comenzó de la mano de Forgotten y cuando está persona lo dejó,
el proyecto continuó de la mano del VBA Team. El desarrollo del VBA original se
detuvo en 2004 con su versión 1.8.0 Beta 3, desde entonces muchos forks
comenzaron a aparecer por desarrolladores diferentes.
	Desde hace algún tiempo se está trabajando en una nueva versión del emulador
llamado VBA-M cuya intención es combinar las características de los diferentes
forks del VBA original. VBA-M está en desarrollo activo y aunque aún no hay una
versión estable, promete bastante. Además existe un fork del VBA-M llamado
VisualBoyAdvance 2 centrado principalmente en la velocidad en vez de en la
exactitud de la emulación.

2.30.1. Información general
	- Nombre: VisualBoyAdvance
	- Autores: Forgotten y el VBA Team.
	- Versión: 1.8.0 Beta 3
	- Web: http://vba.ngemu.com
	- Wiki:	http://es.wikipedia.org/wiki/VisualBoyAdvance
	- Compresión: Si, zip, gzip
	- Extensiones: .gb, .gmb, .cgb, .gbc, .bin
	
2.30.2. Instalación (Debian)
	* Paquetes deb oficiales (v1.8.0 Beta 3) (Recomendado):
		VBA se encuentra en los repositorios oficiales de Debian, por lo que
	podremos instalarlo con:
	$ sudo apt-get install visualboyadvance	

2.30.3. Comandos
	-Información:
	$ vba

	-Uso básico:
	$ vba -F  _path_al_juego_
	
	-Uso avanzado:
	$ vba -F -f 7 _path_al_juego_

2.30.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Terminar emulación				ESC
	
	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------
	Arriba		 					Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha				 			Cursor derecha
	Botón A 						Z
	Botón B 						X
	Botón L 						A
	Botón R 						S
	Select							Backspace
	Start							Return

2.30.5. Notas
	Emulación prácticamente perfecta.
	VBA-M es compilable desde el SVN del proyecto, es muy probable que en una
futura versión de Gelide, sustituya al VBA original.
	

2.31. Xe emulator

	Xe es un emulador multi-sistema freeware para muchas consolas que ya no
están en el mercado.
	Actualmente emula Sega SG-1000, Nintendo Famicom y Famicom Disk System /
NES, Sega Mark III / Master System, Nec PC Engine y PC Engine CD / Turbo Grafx
16 y Turbo Grafx CD, Sega Mega Drive y Mega CD / Genesis y Sega CD, Nintendo
Super Famicom / SNES, Neo Geo, Neo Geo CD, CPS Changer, FM Towns Marty, Nec
PC-FX, Nintendo Game Boy y Game Boy Color, Sega Game Gear, Neo Geo Pocket y Neo
Geo Pocket Color, Bandai Wonder Swan y Wonder Swan Color y Nintendo Game Boy
Advance.

2.31.1. Información general
	- Nombre: Xe
	- Autores: James Li
	- Versión: 2.16.2
	- Web: http://www.xe-emulator.com
	- Wiki:	???
	- Compresión: Si, zip y gzip
	- Extensiones: Depende del sistema emulado

2.31.2. Instalación (Debian) 
	* Binarios oficiales (v2.16.2) (Recomendado):
		Aunque hay paquetes oficiales precompilados para i386 y amd64, no vienen
	enlazados, por lo que deberemos realizar nosotros esta tarea.
		Descargamos el paquete adecuado para nuestra arquitectura desde la web
	oficial (http://www.xe-emulator.com) y lo descomprimimos. En una terminal
	accedemos a la carpeta donde hemos descomprimido y ejecutamos:
	$ sudo make
		Puede que durante el proceso de compilación nos aparezcan errores
	indicándonos la ausencia de librerías, por ejemplo -lXv ó -lXxf86vm. Esto
	nos está indicando que debemos instalar los paquetes "libxv-dev" y
	"libxxf86vm-dev".
		Una vez terminada la compilación, para instalarlo, solo tendremos que
	ejecutar:
	$ sudo make install
		Ahora ya tenemos el emulador listo para ser usado, pero antes, deberemos
	descargar el paquete de bios no oficiales que podemos encontrar en la web de
	Xe (http://www.xe-emulator.com/files/bios.zip) y descomprimir su contenido
	en el directorio "/home/myuser/.xe/bios/" (Si este directorio no existe, lo
	podemos crear a mano o ejecutar Xe una vez para que lo genere
	automáticamente).

2.31.3. Comandos
	-Información:
	$ xe --help

	-Uso básico:
	$ xe --fullscreen _path_al_juego_
	
	-Uso avanzado:
	$ xe --lite --fullscreen --render 1 _path_al_juego_

2.31.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Terminar emulación				Ctrl + X
	Abrir el menú					ESC <<<< Aquí está todo
	Pausar/Continuar emulación		P

	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------
	Arriba						Cursor arriba
	Abajo						Cursor abajo
	Izquierda					Cursor izquierda
	Derecha						Cursor derecha
	Botón 1						A
	Botón 2						S
	Botón 3						D
	Botón 4						D
	Botón 5						Q
	Botón 6						W
	Botón 7						E
	Botón 8						R				
	Select						2
	Start						1		
	Run							Enter

2.31.5. Notas
	Emulación perfecta prácticamente en todos los sistemas soportados.
	Algunos sistemas requieren la bios en "/home/myuser/.xe/bios/. Muchas de
ellas están en el paquete de bios no oficiales descargable de la web. Para
obtener más información al respecto, consultar el manual del emulador.


2.32. XMame

	MAME (Multiple Arcade Machine Emulator).

	Se trata de un proyecto sin fines de lucro cuyo objetivo principal es ser
una referencia del funcionamiento interno de las máquinas arcade emuladas. Esto
se hace tanto con propósitos educativos como con de preservación con el fin de
evitar que muchos de los juegos históricos desaparezcan para siempre una vez que
su hardware deja de funcionar.
	Como efecto colateral de esta documentación y preservación, MAME permite
jugar a estos juegos en PC's actuales y otras plataformas, aunque esto no es el
objetivo principal del proyecto.
	XMame es una versión para GNU/Linux del MAME original.
	A partir de la versión 0.106, el desarrollo de XMame parece estar
abandonado.

2.32.1. Información general
	- Nombre: XMame
	- Autores: El XMame Team.
	- Versión: 0.106
	- Web: http://x.mame.net
	- Wiki: http://es.wikipedia.org/wiki/Xmame
	- Compresión: Si, zip
	- Extensiones: .zip, .chd
 
2.32.2. Instalación (Debian)
	* Paquetes deb oficiales (v0.106) (Recomendado):
		XMame se encuentra en los repositorios oficiales de Debian, por lo que
	lo podemos instalar con:
	$ sudo apt-get install xmame-sdl
		Algunas veces podemos encontrarnos con problemas con la librería libGLU,
	que provoca el malfuncionamiento de OpenGl, por lo que tendremos que hacer
	un enlace a "libGLU.so.1":
	$ sudo  ln -s /usr/lib/libGLU.so.1 /usr/lib/libGLU.so

2.32.3. Comandos
	-Información:
	$ xmame -help

	-Uso básico:
	$ xmame _path_al_juego_
	
	-Uso avanzado:
	$ xmame -vidmod 0 -fullscreen -ef 1 -aa -ka -doublebuf -skip_gameinfo -rp
	_path_al_dir_de_juegos_  _path_al_juego_

2.32.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Terminar emulación				ESC
	Entrar/Salir opciones			Tab
	Insertar monedas jugador 1		5
	Insertar monedas jugador 2		6
	Start jugador 1					1
	Start jugador 2					2
	Pausar/Continuar emulación		P
	
	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------
	Arriba		 					Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha		 					Cursor derecha
	Botón 1 						LCtr
	Botón 2 						LAlt
	Botón 3	 						Espace
	Botón 4	 						LShift
	Botón 5 						Z
	Botón 6 						X
	Botón 7 						C
	Botón 8 						V	

2.32.5. Notas
	El estado de la emulación depende del juego emulado, aunque por norma
general funciona bastante bien.
	El emulador parece estar parado desde hace mucho tiempo.


2.33. XMess

	MESS (Multi Emulator Super System).

	Se trata de un proyecto que documenta el hardware de una gran variedad de
ordenadores, consolas de vídeo juegos y calculadoras (casi todos clásicos) a
través de la emulación por software.
	Como efecto colateral de esta documentación, MESS permite que programas y
juegos para estas plataformas, puedan ser ejecutados en PC's actuales.
	MESS está basado en MAME.
	XMess es una versión para GNU/Linux del MESS original.
	A partir de la versión 0.106, el desarrollo de XMess parece estar
abandonado.

2.33.1. Información general
	- Nombre: XMess
	- Autores: El XMame Team
	- Versión: 0.106
	- Web: http://x.mame.net
	- Wiki:	http://es.wikipedia.org/wiki/Xmame
	- Compresión: Si, zip
	- Extensiones: Depende del sistema emulado
	
2.33.2. Instalación (Debian)
	* Paquetes deb oficiales (v0.106) (Recomendado):
		XMess se encuentra en los repositorios oficiales de Debian, por lo que
	podremos instalarlo con:
	$ sudo apt-get install xmess-sdl
		Algunas veces podemos encontrarnos con problemas con la librería libGLU,
	que provoca el malfuncionamiento de OpenGl, por lo que tendremos que hacer
	un enlace a "libGLU.so.1":
	$ sudo ln -s /usr/lib/libGLU.so.1 /usr/lib/libGLU.so

2.33.3. Comandos
	-Información:
	$ xmess -help

	-Uso básico:
	$ xmess _sistema_ -cart _path_al_juego_

	-Uso avanzado:
	$ xmess _sistema_ -fullscreen -ef 1 -ka -skip_warnings -skip_gameinfo
	-doublebuf -cart _path_al_juego_ -bp _path_a_las_bios_

2.33.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Terminar emulación				ESC
	Entrar/Salir opciones			Tab
	Seleccionar Juego				0
	Resetear Juego					2	<<<< Comenzar juego
	Pausar/Continuar emulación		P

	* Joystick (Puede ser remapeado)
	Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------
	Arriba 							Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha		 					Cursor derecha
	Botón 1 						LCtr
	Botón 2 						LAlt
	Botón 3 						Espace
	Botón 4 						LShift
		
2.33.5. Notas
	El estado de la emulación depende del sistema emulado.
	Muchos sistemas necesitan bios y el uso del parámetro -bp.
	En los comandos hemos usado el parámetro "-cart" que se utiliza para indicar
la entrada de un cartucho, pero hay otros sistemas que usarán discos "-flop",
cassettes "-cass" o incluso CDRom's "-cdrm".


2.34. z26

	Un emulador de Atari 2600.

	z26 es un emulador de consola Atari 2600 muy preciso. Es OpenSource y
funciona bajo Windows y GNU/Linux, aunque también se puede encontrar una vieja
versión para MS-Dos.
	Su precisión en la emulación, lo hizo popular entre los desarrolladores de
juegos "homebrew".
	
2.34.1. Información general
	- Nombre: z26
	- Autores: John Saeger
	- Versión: 2.13
	- Web: http://www.whimsey.com/z26/z26.html
	- Wiki:	http://en.wikipedia.org/wiki/Z26
	- Compresión: No
	- Extensiones: .bin
	
2.34.2. Instalación (Debian)
	* Extracción de un paquete RPM e instalación local (Recomendado):
		En el momento de escribir esta entrada, la web oficial del emulador z26
	(http://www.whimsey.com/z26/z26.html) no existe o está caída por lo que
	resulta un tanto complejo localizar el código fuente para compilarlo.
		Una posible alternativa consiste en convertir un paquete RPM (más fácil
	de localizar en este caso) en un deb, tal y como veremos en el siguiente
	apartado. Otra posible alternativa, dadas las características de z26,
	consiste en extraer el binario de un paquete RPM e instalarlo localmente
	en nuestro home.
		Lo primero que haremos es descargar el paquete "z26-2.13-1.1.i586.rpm"
	para OpenSuse 11.3 desde (ftp://ftp5.gwdg.de/pub/opensuse/repositories/
	Emulators/openSUSE_11.3/i586/z26-2.13-1.1.i586.rpm). Este paquete
	básicamente contiene dos archivos, el ejecutable del emulador y la página
	del manual. Nosotros solo necesitaremos el ejecutable "z26".
	
	- Instalación local:
		Lo ideal, sería mantener los emuladores en un mismo	directorio para
	tenerlos un poco ordenados, así que vamos a suponer que	usamos el directorio
	"emulators" en nuestro home para guardar los emuladores. Así que crearemos un
	directorio para guardar el binario del z26:
	$ mkdir /home/myuser/emulators/z26
	Hay que	tener en cuenta que "myuser" debe ser sustituido por el nombre
	de nuestro usuario.
		El último paso, es extraer el ejecutable del emulador y copiarlo en el
	nuevo directorio para lo cual ejecutaremos:
	$ cd /home/myuser/emulators/z26
	$ rpm2cpio z26-2.13-1.1.i586.rpm | cpio --extract --make-directories
	$ cp usr/bin/z26 .
	$ rm -r usr
		Llegados a este punto tendremos el binario de nuestro emulador z26 en la
	ruta "/home/myuser/emulators/z26/z26".
		Hemos supuesto que el paquete "z26-2.13-1.1.i586.rpm" está localizado en
	el directorio "/home/myuser/emulators/z26/", si no es así, en el segundo
	comando tendríamos que poner la ruta completa hasta el paquete.
		Dado que el emulador está preparado para x86, puede que no nos funcione
	directamente en una	arquitectura amd64, por lo que después de la
	instalación, puede que necesitemos instalar alguna librerías de 32 bits,
	para lo cual, podemos hacer uso de getlibs:
	$ sudo getlibs /home/myuser/emulators/z26/z26

	* Alien del paquete de OpenSuse 11.3:
		Convertir un paquete RPM en un DEB no siempre es la mejor forma de
	instalar una aplicación, pero en este caso puede llegar a ser la única forma
	de hacerlo ya que en el momento de escribir esta entrada, la web oficial del
	emulador z26 (http://www.whimsey.com/z26/z26.html) no existe o parece estar
	caída y por lo tanto debemos buscarnos una manera adecuada de localizarlo.
		Lo primero que necesitamos es tener instalado el paquete alien, que nos
	ayudará a convertir un paquete rpm en un deb. Para instalarlo, nos vamos a
	una terminal y ejecutamos:
	$ sudo apt-get install alien
		Ahora descargamos el paquete "z26-2.13-1.1.i586.rpm" para OpenSuse 11.3.
	Lo podemos descargar de (ftp://ftp5.gwdg.de/pub/opensuse/repositories/
	Emulators/openSUSE_11.3/i586/z26-2.13-1.1.i586.rpm).
		El siguiente paso es convertirlo en un paquete deb para nuestra Debian:
	$ sudo alien z26-2.13-1.1.i586.rpm
	lo cual nos creará el paquete "z26_2.13-2.1_i386.deb". Ya solo nos queda
	instalarlo, para lo cual ejecutaremos:
	$ sudo dpkg -i z26_2.13-2.1_i386.deb	
		Para arquitecturas amd64, vamos a tener que forzar la instalación ya que
	el emulador está compilado (y también desarrollado) para arquitecturas x86,
	por lo que para instalarlo usaremos:
	$ sudo dpkg -i --force-architecture z26_2.13-2.1_i386.deb
		Dado que el emulador está preparado para x86, puede que no nos funcione
	directamente en una	arquitectura amd64, por lo que después de forzar la
	instalación, puede que necesitemos instalar alguna librerías de 32 bits,
	para lo cual, podemos hacer uso de getlibs:
	$ sudo getlibs /usr/bin/z26

2.34.3. Comandos
	-Información:
	$ z26

	-Uso básico:
	$ z26 _path_al_juego_

	-Uso avanzado:
	$ z26 -v8 _path_al_juego_

2.34.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Salir del emulador				ESC
	Resetear Juego					F1	<<<< Comenzar juego	
	Seleccionar juego				F2
	Jugador 1 dificultad A			F5
	Jugador 1 dificultad B			F6
	Jugador 2 dificultad A			F7
	Jugador 2 dificultad B			F8
	Pausar emulación				Backspace
	Continuar emulación				Enter

	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------
	Arriba 							Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha		 					Cursor derecha
	Botón 1 (Fire)					Ctrl
	Botón 2 (Trigger)				/
	Botón 3 (Booster)				RShift
		
	- Joy derecho (Joy1)
	Función 						Tecla
	-------------------------------------------------------
	Arriba 							E
	Abajo 							D
	Izquierda 						S
	Derecha		 					F
	Botón 1 (Fire)			 		N
	Botón 2 (Trigger)		 		B
	Botón 3 (Booster)		 		V
	
	Web:
	
2.34.5. Notas
	Emulación prácticamente perfecta.
	z26 es un gran emulador, como nota en contra hay que hacer notar que no
tiene soporte para archivos comprimidos y que parece 


2.35. ZiNc

	Emulador de juegos arcade basados en el hardware de PlayStation

	ZiNc es un emulador arcade por linea de comandos enfocado principalmente a
emular el hardware de Sony PlayStation. Esto incluye sistemas de Capcom, Taito,
Konami, Tecmo y Namco así como otras.
	Los juegos que emula ZiNc están soportados en MAME, pero ZiNc, normalmente,
puede ejecutarlos más rápido y con mejores gráficos y sonido. 
	Está disponible para GNU/Linux y Windows.
	Actualmente soporta 71 juegos

2.35.1. Información general
	- Nombre: ZiNc
	- Autores: The_Author y DynaChicken
	- Versión: 1.1
	- Web: http://www.emuhype.com/index.phtml?s=zinc&ss=index
	- Wiki:	???
	- Compresión: Si, zip
	- Extensiones: .zip, .chd

2.35.2. Instalación (Debian)	
	* Binarios oficiales (v1.1) (Recomendado):
		Para instalar el emulador, lo primero que necesitamos es descargar el
	paquete de binarios para GNU/Linux desde el apartado de descargas de la web
	oficial (http://www.emuhype.com/index.phtml?s=zinc&ss=index).
		Este paquete viene preparado con el binario y los plugins necesarios,
	aunque tendremos que prepararlo un poco antes de poder usarlo. Por desgracia
	solo existe versión de 32bits, por lo que para amd64 tendremos que hacer
	funcionar este binario.
		Descomprimimos el paquete por ejemplo en "zinc".
		Independientemente del tipo de instalación que queramos hacer, ZiNc
	necesita tener acceso a sus plugins a través del LD path, por lo que tenemos
	que colocar estos plugins en un sitio adecuado.
		Suponiendo que estamos dentro del directorio "zinc", para i386
	ejecutaremos:
	$ sudo mv *.so /usr/lib
		Para amd64 debemos ponerlos en otro directorio:
	$ sudo mv *.so /usr/lib32
		Ahora ya estamos preparados para continuar con la instalación.
		
	- Instalación local:
		Lo ideal, sería mantener los emuladores en un mismo	directorio para
	tenerlos un poco ordenados, así que vamos a suponer que	usamos el directorio
	"emulators" en nuestro home para guardar los emuladores. Así, suponiendo que
	aún estamos dentro del directorio donde hemos descomprimido ZiNc,
	ejecutaremos:
	$ mkdir /home/myuser/emulators/zinc
	con lo que crearemos un directorio para alojar el emulador. Hay que	tener en
	cuenta que "myuser" debe ser sustituido por el nombre de nuestro usuario.
		El último paso, en este caso, es copiar el emulador y sus archivos al
	nuevo directorio:
	$ cp -r * /home/myuser/emulators/zinc

	- Instalación en el sistema:
		Creamos un directorio en el sistema para alojar el emulador:		
	$ sudo mkdir /usr/share/games/zinc
		Copiamos el emulador y sus archivos al nuevo directorio creado en el
	sistema:
	$ sudo cp -r * /usr/share/games/zinc
		El último paso, en este caso, es enlazar el ejecutable del emulador para
	que el sistema pueda localizarlo:
	$ sudo ln -s /usr/share/games/zinc/zinc /usr/games/zinc
	
		La mayoría de las opciones gráficas no están disponibles utilizando
	parámetros por linea de comandos, por lo que es	aconsejable editar el
	archivo "renderer.cfg" y configurarlas desde ahí.
		ZiNc, por defecto, busca los archivos de configuración en el mismo
	directorio desde el que se lanza el emulador y Gelide por defecto utiliza el
	directorio de cada sistema para lanzar el emulador correspondiente, en el
	caso de zinc sería "/home/myuser/.gelide/ZiNc/", por lo que para que ZiNc
	encuentre la configuración, deberemos hacer una copia de este archivo en el
	directorio desde el que Gelide lanzará Zinc:
	$ cp renderer.cfg /home/myuser/.gelide/ZiNc/	

2.35.3. Comandos
	-Información:
	$ zinc --help

	-Uso básico:
	$ zinc _numero_de_juego --roms-directory=_path_al_directorio_de_juegos_ 
	
	-Uso avanzado:
	$ zinc _numero_de_juego --roms-directory=_path_al_directorio_de_juegos_ 
	zinc `zinc --list-games | awk '/\[_nombre_del_juego_/ {print $1}'`
	--roms-directory=_path_al_directorio_de_juegos	

2.35.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Salir del emulador				ESC
	Pausar / Continuar emulación	P
	Insertar monedas jugador 1		5
	Insertar monedas jugador 2		6	
	Start jugador 1					1
	Start jugador 2					2	

	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------	
 	Arriba 							Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha		 					Cursor derecha
	Botón 1 						A
	Botón 2 						S
	Botón 3 						D
	Botón 4 						Z
	Botón 5 						X
	Botón 6 						C

2.35.5. Notas
	Emulación bastante buena.
	Muchas de las opciones gráficas no están disponibles utilizando parámetros,
es muy aconsejable modificar el archivo de configuración "renderer.cfg".
	ZiNc usa para lanzar sus juegos un identificador de una lista que se puede
consultar con "zinc --list-games", por lo que en Gelide utilizamos un hack para
convertir el nombre de un juego en su identificador. Este hack consiste en un
pequeño script (`zinc --list-games | awk '/\[_nombre_del_juego_/ {print $1}'`)
que dado un nombre de juego, obtiene su identificador para poder lanzar ZiNc
correctamente. 
		
	
2.36. ZSNes

	Emulador de Nintendo SNes de OpenSource.

	ZSNes es un emulador en el que se está trabajando desde 1997. Originalmente
fue programado por zsKnight and _Demo_, desde entonces ha atraído a muchos
desarrolladores y colaboradores.
	En Abril de 2001, el proyecto ZSNes se convirtió en GPL y su código fuente
se hizo público.
	Está escrito en una combinación de ensamblador x86, C y C++. Actualmente es
capaz de correr en Widows, DOS, y versiones x86 de Linux y FreeBSD, ordenadores
x86 Macintosh y Microsoft Xbox. 

2.36.1. Información general
	- Nombre: ZSNes
	- Autores: zsKnight & _Demo_
	- Versión: 1.51b
	- Web: http://www.zsnes.com
	- Wiki:	http://es.wikipedia.org/wiki/ZSNES
	- Compresión: Si, zip, gzip
	- Extensiones: .sfc, .smc, .fig, .swc, .bin, .ufo, .gd3, .gd7 y otras	

2.36.2. Instalación (Debian)
	* Paquetes deb oficiales (v1.51) (Recomendado):
		ZSNes se encuentra en los repositorios oficiales de Debian Lenny para la
	arquitectura i386. Para instalarlo, tendremos que ejecutar:
	$ sudo apt-get install zsnes
		Por desgracia no existe un paquete para amd64, es más, no existe ninguna
	versión compilada hasta la fecha para amd64, así que para esta arquitectura
	tendrémos que descargar el paquete para i386 desde los repositorios de
	debian (http://packages.debian.org/lenny/i386/zsnes/download) e instalarlo 
	manualmente forzando la arquitectura:
	$ sudo dpkg -i --force-architecture zsnes_1.510-2.2_i386.deb
		Con esto conseguiremos instalar el paquete para i386.
		Puede que necesites instalar alguna librería de 32 bits, por ejemplo
	libao, haciendo uso de la utilidad getlibs:
	$ sudo getlibs -p libao2
	
		He de mencionar que en el momento de escribir esta entrada, ZSNes está
	teniendo muchos problemas tanto en i386 como en amd64, por lo que esperamos
	que pronto tengamos una nueva versión de este fantástico emulador. 

2.36.3. Comandos
	-Información:
	$ zsnes --help

	-Uso básico:
	$ zsnes -m -s -r 5 -k 75 -v 4 -ad sdl _path_al_juego_
	
	-Uso avanzado:
	$ zsnes -m -s -r 5 -k 75 -v 7 -ad sdl _path_al_juego_

2.36.4. Controles básicos
	* Acciones:
	Acción 							Tecla (Estándar)
	-------------------------------------------------------
	Terminar emulación				ESC
	Pausar/Continuar emulación		Enter
	
	* Joysticks (Pueden ser remapeado)
	- Joy izquierdo (Joy0)
	Función 						Tecla
	-------------------------------------------------------
	Arriba		 					Cursor arriba
	Abajo 							Cursor abajo
	Izquierda 						Cursor izquierda
	Derecha				 			Cursor derecha
	Botón A 						X
	Botón B 						Z
	Botón Y 						A
	Botón X 						S
	Botón L 						C
	Botón R 						D
	Select							RShift
	Start							Return	

2.36.5. Notas
	Emulación prácticamente perfecta, aunque como ya he mencionado, en estos
momentos no existe versión de 64bits y la de 32bits está teniendo muchos
problemas derivados de libao. Este es el motivo de la inclusión del parámetro
"-ad sdl" que fuerza el uso del driver de sonido sdl.	
		
		
		
3. Sistemas y Emuladores preconfigurados, otras alternativas

	En este apartado podrás encontrar información sobre cada uno de los sistemas
preconfigurados en la versión actual de Gelide.

	La intención principal de este apartado, es juntar en un solo lugar algo de
historia sobre los sistema, la parte de la documentación hardware más
significativa de cada uno y una lista actualizada de los emuladores con los que
se pueden recrear su funcionamiento bajo GNU/Linux.

	Hay que tener en cuenta que esta relación no se puede considerar como una
referencia 100% completa y fiable, es tan solo la parte de cada sistema que
he considerado interesante y en algunos casos, la única que he podido localizar.


3.1. Amstrad GX4000

	Consola de 8/16 bits de Amstrad.

	La GX4000 fue la apuesta de Amstrad, con una vida muy corta, para entrar en
el mercado de las vídeo consolas. La consola fue lanzada en Europa en 1990 y
estaba basada en la todavía popular tecnología CPC. Esta consola no era más que
una modificación del ordenador CPC 6128 Plus, lo cual permitía que la GX4000
fuera compatible con la mayoría del software para el ordenador CPC Plus.
	Los primeros análisis de la consola fueron muy favorables ya que tenía unos
gráficos y sonido bastante impresionantes, una paleta de 4096 colores (más que
la consola Mega Drive de 16 bits de Sega), sprites por hardware y scroll también
por hardware.
	Salió a la venta por £99 y venía con el juego Burnin' Rubber. Los cartuchos
de la GX4000 podían ser usados también por los nuevos ordenadores 464 y 6128
Plus lanzados al mismo tiempo.
	La consola fue un fallo comercial total, principalmente por el poco marketing
que Amstrad le dio en comparación con otras consolas de la época como Sega Mega
Drive o Super Nintendo. El escaso número de juegos y el hecho de que la mayoría
eran simplemente juegos de CPC de años anteriores lanzados en cartucho, también
ayudo a su fracaso.	

3.1.1. Información general:
	- Nombre: GX4000
	- Fabricante: Amstrad
	- Año: 1990
	- Generación: 4ª
	- Tipo: Consola-TV
	- Extensiones: .cpr, .bin

3.1.2. Información Hardware:
	- Tipo de soporte: Cartucho
	- CPU: Zilog Z80A (8/16 bits)
	- Velocidad: 4MHz
	- Ram: 64 KB RAM, 16 KB VRAM
	- Rom: 32 KB ROM
	- Controladores: Dos pads con dos botones cada uno
	- Modos gráficos: Desde 160x200 hasta 640x200
	- Colores:	32 colores en pantalla (Paleta de 4096 colores)
	- Sonido: Estéreo 3 canales (Chip AY-3-8912)

3.1.3. Emuladores preconfigurados en Gelide
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163

3.1.4. Otras posibles alternativas
	- Arnold: http://arnold.berlios.de/
	- Arnold-TNG: http://www.yasara.org/cpc/index.html
	- Caprice32: https://sourceforge.net/projects/caprice32/
	- Cpc4x: http://www.ulrich-cordes.de/cpc/english/cpcemu.htm
	- Rolad: http://rolandemu.de/
	- XCpc: http://xcpc.sourceforge.net/


3.2. Atari 2600

	Primera consola lanzada por Atari como Atari VCS.

	La Atari 2600 fue una consola de vídeo juegos lanzada al mercado en octubre
de 1977 bajo el nombre de Atari VCS, convirtiéndose en la primera en tener éxito
utilizando cartuchos intercambiables.
	En 1982, tras el lanzamiento de la Atari 5200, adoptó su nombre final basado
en el número de catálogo que la identificaba (CX2600).
	Esta consola fue un gran éxito y logró que durante los años 1980s "Atari"
fuese sinónimo de videojuegos. Se vendía acompañada con dos joysticks, un par de
controladores tipo paddle y un cartucho de juego.
	El nombre original, Atari VCS, proviene de Video Computer System (Sistema
Informático de Vídeo). El nombre Atari 2600 se utilizó por primera vez en 1982,
cuando salió al mercado la Atari 5200.
	La Atari 2600 generó unos espectaculares ingresos para Atari hasta el año
1983, cuando se produjo la caída de mercado de los videojuegos. Es uno de los
mayores éxitos de la industria del videojuego, al venderse durante más de 14
años, principalmente en Europa y Estados Unidos.
	
3.2.1. Información general:
	- Nombre: 2600
	- Fabricante: Atari inc.
	- Año: 1977
	- Generación: 2ª
	- Tipo: Consola-TV
	- Extensiones: .a26, .bin

3.2.2. Información Hardware:
	- Tipo de soporte: Cartucho
	- CPU: MOS 6507 (8 bits)
	- Velocidad: 1.19 MHz
	- Ram: 128 Bytes
	- Rom: 4 KB
	- Controladores: Dos joystick con un botón cada uno y dos controladores
	  paddle con un botón cada uno.
	- Modos gráficos: 160x102
	- Colores: 128 (16 colores con 8 intensidades cada uno)
	- Sonido: Mono 2 canales
	
3.2.3. Emuladores preconfigurados en Gelide
	- Stella (@2.27.): http://stella.sourceforge.net/
	- z26 (@2.34.): http://www.whimsey.com/z26/z26.html
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163
	- Xmess (@2.33.): http://x.mame.net
	
3.2.4. Otras posibles alternativas
	- Virtual 2600: http://www.hornby.dsl.pipex.com/v2600/
	- Bee: http://www.thebeehive.ws
	

3.3. Atari 5200

	Consola de 8 bits sucesora de la 2600.

	La Atari 5200 SuperSystem o simplemente Atari 5200 fue una vídeo consola
introducida por Atari Inc en 1982 como reemplazo de la popular Atari 2600.
	La 5200 fue creada para competir con Intellivision, pero después de su
lanzamiento, terminó compitiendo de una manera más directa con la ColecoVision.
	Estaba basada en los ordenadores existentes 400/800 de Atari, el hardware
interno prácticamente era idéntico, a pesar de ello el software no era
compatible directamente entre los dos sistemas. Una serie de defectos de diseño
tuvieron un grave impacto en la usabilidad, y el sistema se considera en general
que tuvo un comportamiento malo en el mercado.
	Uno de los grandes problemas que tuvo la Atari 5200 fue su incompatibilidad
con el software de la 2600. Otro gran problema fue la falta de atención que 
Atari le dio a la consola ya que la mayoría de los recursos estaban	enfocados a
la ya sobre saturada 2600.
	En Mayo de 1984, durante una presentación de la Atari 7800, los ejecutivos
de la compañía revelaron que la 5200 estaba apunto de ser discontinuada.
	
3.3.1. Información general:
	- Nombre: 5200 SuperSystem
	- Fabricante: Atari
	- Año: 1982
	- Generación: 2ª
	- Tipo: Consola-TV
	- Extensiones: .a52, .bin, .rom

3.3.2. Información Hardware:
	- Tipo de soporte: Cartucho
	- CPU: MOS 6502C (8 bits)
	- Velocidad: 1.79 MHz
	- Ram: 16 KB
	- Rom: 64 KB
	- Controladores: Un joystick analógico con cuatro botones de disparo (dos en
	  cada lateral), con un Keypad de 12 botones y con tres botones más: Start,
	  Pause y Reset.
	- Modos gráficos: 320x192
	- Colores: 16 colores en pantalla (Paleta de 256 colores)
	- Sonido: 4 canales (Atari Pokey)
		
3.3.3. Emuladores preconfigurados en Gelide
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163
	- Xmess (@2.33.): http://x.mame.net
	
3.3.4. Otras posibles alternativas
	- Kat5200: http://kat5200.jillybunch.com/links.html
	- Atari++: http://www.math.tu-berlin.de/~thor/atari++/ http://www.xl-project.com/
	- Atari800: http://atari800.sourceforge.net/
	- Jum52: http://jum.pdroms.de/emulators/emu5200.html


3.4. Atari 7800

	Consola sucesora de la 5200 lanzada al mercado por Atari en 1986
	
	La Atari 7800 (en USA incluye ProSystem en el nombre) fue la sucesora de la
consola Atari 5200, en un intento de Atari de recuperar su supremacía en el
mercado de la vídeo consola frente a sus rivales locales Intellivision y
Colecovision, y al desembarco japonés de la Sega Master System y Nintendo NES.
	La Atari 7800 fue la primera, pero no la única, consola de Atari
desarrollada por una compañía externa (General Computer Corporation). GCC
desarrolla un sistema mejorado compatible con la Atari 2600 que además puede
convertirse en un ordenador doméstico completo mediante el uso de algunos
dispositivos externos.
	Cuando la consola se encontraba en desarrollo, Nintendo le solicitó a Atari
que fuera la distribuidora de la Famicom en Estados Unidos. Atari se negó
rotundamente, porque no les parecía que los controladores de la NES fueran
adecuados, al carecer de Joysticks. Nintendo lanzó por su propia cuenta la
Nintendo Entertainment System, que acabaría siendo la dueña del mercado.
	La Atari 7800 fue descatalogada en 1991.

3.4.1. Información general:
	- Nombre: 7800 ProSystem 
	- Fabricante: Atari
	- Año: 1986
	- Generación: 3ª
	- Tipo: Consola-TV
	- Extensiones: .a78

3.4.2. Información Hardware:
	- Tipo de soporte: Cartucho
	- CPU: Sally (MOS 6502C modificado) (8 bits)
	- Velocidad: 1.79 MHz
	- Ram: 4 KB
	- Rom: 4 KB
	- Controladores: Un joystick con dos botones (USA), Dos pads con dos botones
	  cada uno (Europa). 
	- Modos gráficos: 320x200
	- Colores: 16 colores en pantalla (Paleta de 256 colores)
	- Sonido: 4 canales (Chip TIA)
			
3.4.3. Emuladores preconfigurados en Gelide
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163
	- Xmess (@2.33.): http://x.mame.net
	
3.4.4. Otras posibles alternativas
	En el momento de escribir esta entrada, no parece haber ningún emulador para
GNU/Linux orientado exclusivamente para Atari 7800.


3.5. Atari Jaguar

	Consola de 64 bits lanzada por Atari en 1993.
	
	La Atari Jaguar fue una vídeo consola introducida como plataforma de alcance
para la siguiente generación (futuras PlayStation y Sega Saturn).
	En principio la Jaguar iba a ser lanzada al mercado un par de años después
de la Atari Panther, pero al final la Panther no pasó de proyecto y la Jaguar
fue un fracaso en ventas.
	Las características de la máquina eran impresionantes para la época,
funcionaba a 64 bits cuando la competencia seguía en los 16 bits. En realidad
conseguían los 64 bits usando 5 procesadores de 32 bits contenidos en dos chips
funcionando en paralelo y un coprocesador.
	Atari trató de recuperar el terreno perdido en el mundo de las consolas,
buscando obtener un pedazo de la cuota de mercado ocupada por las consolas de
Sega y de Nintendo. Atari Jaguar era una consola 64 bit con capacidad para mover
juegos en 3D muy superior a los consolas en vida de ese entonces, Super Nintendo
y Sega Genesis/Mega Drive. Por desgracia, este último esfuerzo de la compañía
Atari para hacerse un sitio en el mercado para la consola falló por culpa de un
mal marketing.	
	
3.5.1. Información general:
	- Nombre: Jaguar
	- Fabricante: Atari
	- Año: 1993
	- Generación: 5ª
	- Tipo: Consola-TV
	- Extensiones: .j64, .rom

3.5.2. Información Hardware:
	- Tipo de soporte: Cartucho
	- CPU: Motorola 68000
	- Velocidad: 13.295 MHz
	- Ram: 2MB DRAM
	- Rom: 128 KB
	- Controladores: Un pad digital de 8 direcciones y 17 botones.
	- Modos gráficos: 720x576 (máximo)
	- Colores: 16,8 Millones
	- Sonido: 2 DAC's, 16 bits estéreo
			
3.5.3. Emuladores preconfigurados en Gelide
	- Virtual Jaguar (@2.29): http://icculus.org/virtualjaguar/
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163
	
3.5.4. Otras posibles alternativas
	- Tempest 2000 (T2k): http://www.yakyak.org/viewtopic.php?t=41691


3.6. Atari Lynx

	Consola portátil de 8 bits producida por Atari.

	La Atari Lynx fue una vídeo consola portátil lanzada en 1989, siendo la
primera con LCD en color. Si bien era superior a la Nintendo Game Boy y a la
Sega Game Gear, no tuvo demasiado éxito debido a su elevado precio y a la corta
duración de las baterías.
	En el momento de su lanzamiento, aunque el mercado era bastante escéptico a
causa de los reciente fracasos de Atari, la consola sorprendió por sus
características técnicas. Con una CPU de 8 bits y un procesador gráfico de 16, el
cual permitía realizar efectos como zooms o deformaciones, Atari superaba con
creces el nivel del resto de la portátiles.
	Sin embargo, la portabilidad de la consola quedaba en entredicho dadas sus
dimensiones, y la escasa autonomía, debido al alto consumo. El pobre marketing
que Atari ofrece a la consola, unido a la mediocridad de algunos de sus
videojuegos, dan al traste con las esperanzas que la empresa había puesto en el
sector de las portátiles.
	Atari lanzó una Lynx II. Fue un modelo con menor tamaño, una mayor autonomía
debido a la posibilidad de apagar la retro iluminación de la pantalla y con
sonido estéreo; aun así fue un intento fallido de corregir los escasos pero
importantes fallos de su antecesora. Al no cumplir sus objetivos, tuvo un corto
periodo de vida; por lo que hoy en día es una consola muy apreciada y valorada
por los coleccionistas.

3.6.1. Información general:
	- Nombre: Lynx
	- Fabricante: Atari
	- Año: 1989
	- Generación: 3ª
	- Tipo: Portátil (Handheld)
	- Extensiones: .lnx, .lyx

3.6.2. Información Hardware:
	- Tipo de soporte: Cartucho
	- CPU: MOS 6502 (8bits)
	- Velocidad: 4 MHz
	- Ram: 64 KB DRAM
	- Rom: 512 bytes
	- Controladores:  Un pad de 8 direcciones, 4 botones (dos para A y dos para
	  B), botones para opción y otros para encendido y apagado, todo ello
	  integrado en la propia consola.
	- Modos gráficos: 160x102
	- Colores: Paleta de 4096 colores, 16 por scanline.
	- Sonido: 4 canales mono (Lynx II estéreo), 8 bits DAC por canal.
			
3.6.3. Emuladores preconfigurados en Gelide
	- Mednafen (@2.17.): http://mednafen.sourceforge.net
	- Handy/SDL (@2.13): http://sdlemu.ngemu.com/sdlemu/handysdl.php
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163
	- Xmess (@2.33.): http://x.mame.net
	
3.6.4. Otras posibles alternativas
	En el momento de escribir esta entrada, no parece haber ningún emulador más
para GNU/Linux orientado exclusivamente para Atari Lynx.

	
3.7. Bandai WonderSwan
	
	Consola portátil de 16 bits de la compañía Bandai.
	
	WonderSwan es una consola portátil de 16 bits de la compañía Bandai que fue
lanzada en Japón en 1999. Bandai siempre ha estado muy ligada al manga y al
anime, y sobre esta consola se han desarrollado adaptaciones de muchas series de
animación japonesas.
	La WonderSwan ofrecía un reducido tamaño, una capacidad de cartuchos de
hasta 128 Mega bits (16 Mega bytes) y larga duración con tan solo una pila (de 30
a 40 horas). Lo único que se le podía mejorar era su falta de color, cosa que
fue cuestión de tiempo ya que se empezó a solucionar en la versión WonderSwan
Color, con idénticas prestaciones y total compatibilidad con la anterior.
	La pantalla de WonderSwan también desempeña un papel fundamental, ya que se
trataba de una pantalla de gran tamaño y gran definición.
	Como curiosidad a destacar, con la WonderSwan se tiene la posibilidad de
jugar a sus juegos tanto horizontalmente como verticalmente, esto es ideal para
poder jugar a distintos tipos de juegos, Bandai sabe que no es lo mismo un
mata marcianos, un RPG o un plataformas, la WonderSwan ponía solución a este
problema de una forma sencilla y nunca vista.

3.7.1. Información general:
	- Nombre: WonderSwan
	- Fabricante: Bandai
	- Año: 1999
	- Generación: 5ª
	- Tipo: Portátil (Handheld)
	- Extensiones: .ws, .wsc, .bin

3.7.2. Información Hardware:
	- Tipo de soporte: Cartucho
	- CPU: 	NEC V30 MZ (16bits)
	- Velocidad: 3.072 MHz
	- Ram: 16 KB
	- Rom: 1 KB
	- Controladores: 11 botones integrado en la propia consola.
	- Modos gráficos: 224x144
	- Colores: 8 tonos de gris (B/N).
	- Sonido: 4 canales estéreo (mono mediante el altavoz interno)
			
3.7.3. Emuladores preconfigurados en Gelide
	- Mednafen (@2.17.): http://mednafen.sourceforge.net
	- Xe emulator (@2.31.): http://www.xe-emulator.com
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163
	- Xmess (@2.33.): http://x.mame.net
	
3.7.4. Otras posibles alternativas
	- Oswan: http://bumba.net/~hmaon/oswanport/
	- Cygne-sdl: http://icculus.org/Cygne-SDL/ 


3.8. Bandai WonderSwan Color
	
	Versión color de la WonderSwan lanzada en 2000 en Japón.
	
	La WonderSwan Color es una consola portátil de videojuegos diseñada por
Bandai. Fue lanzada en Japón en 30 de diciembre del año 2000, teniendo un éxito
moderado.
	Aunque la WonderSwan Color fue un poco más grande y más pesada (7 mm y 2 g)
en comparación con el WonderSwan original, la versión en color tiene 64K de
memoria RAM y una gran pantalla LCD a color. Además, la WonderSwan Color es
compatible con la biblioteca de los juegos de la original.
	Antes del lanzamiento de la WonderSwan, Nintendo tenia prácticamente un
monopolio en el mercado japonés de videojuegos de mano. Después del lanzamiento
de la WonderSwan Color, Bandai tomó aproximadamente 8% de la cuota del mercado
en Japón en parte debido a su bajo precio de ¥6800 yen (aproximadamente $59
USD).
	Otra razón para el éxito de la WonderSwan en Japón fue el hecho de que
Bandai consiguió llegar a un acuerdo con Squaresoft para adaptar los juegos de
Final Fantasy del Famicom con gráficas y controles mejorados. Sin embargo, con
la popularidad del Game Boy Advance y la reconciliación entre Squaresoft y
Nintendo, el WonderSwan Color y su sucesor, el SwanCrystal, pierde rápidamente
su ventaja competitiva.
	Se interrumpieron en 2003.

3.8.1. Información general:
	- Nombre: WonderSwan Color
	- Fabricante: Bandai
	- Año: 2000
	- Generación: 6ª
	- Tipo: Portátil (Handheld)
	- Extensiones: .ws, .wsc, .bin

3.8.2. Información Hardware:
	- Tipo de soporte: Cartucho
	- CPU: 	NEC V30 MZ (16bits)
	- Velocidad: 3.072 MHz
	- Ram: 64 KB
	- Rom: 1 KB
	- Controladores: 11 botones integrado en la propia consola.
	- Modos gráficos: 224x144
	- Colores: 241 de una paleta de 4096 colores.
	- Sonido: 4 canales estéreo (mono mediante el altavoz interno).
			
3.8.3. Emuladores preconfigurados en Gelide
	- Mednafen (@2.17.): http://mednafen.sourceforge.net
	- Xe emulator (@2.31.): http://www.xe-emulator.com
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163
	- Xmess (@2.33.): http://x.mame.net
	
3.8.4. Otras posibles alternativas
	- Oswan: http://bumba.net/~hmaon/oswanport/
	- Cygne-sdl: http://icculus.org/Cygne-SDL/ 


3.9. Coleco ColecoVision

	Vídeo consola de segunda generación lanzada por Coleco en 1982.

	La ColecoVision ofrecía para su tiempo gráficos y jugabilidad de calidad
arcade, la capacidad de jugar con cartuchos de su principal competidora la Atari
2600, y medios para ampliar el hardware del sistema.
	Se lanzó con un catálogo inicial de 12 juegos con otros 10 títulos
programados a lo largo de 1982. En total, aproximadamente 100 títulos se
lanzaron como cartuchos para la consola entre 1982 y 1984.
	Coleco licenció con Nintendo el Donkey Kong como el cartucho oficial
incluido con cada consola y esta versión del videojuego recibe de la prensa
especializada el calificativo de port casi perfecto de la máquina arcade, lo
que ayuda a aumentar su popularidad. En las Navidades de 1982, Coleco había
vendido 500.000 unidades, mayoritariamente por la excelencia de su paquete
inicial. Su principal competidor fue la más avanzada pero de menor éxito
comercial Atari 5200.
	Esta consola fue distribuida por CBS Corporation fuera de Estados Unidos,
bajo la marca CBS ColecoVision.
	Las ventas sobrepasaron rápidamente el millón de unidades a principios de
1983, antes de la Crisis del videojuego de 1983.
	Fue descatalogada en la primavera de 1984.

3.9.1. Información general:
	- Nombre: ColecoVision
	- Fabricante: Coleco
	- Año: 1982
	- Generación: 2ª
	- Tipo: Consola-TV
	- Extensiones: .rom, .col, .bin

3.9.2. Información Hardware:
	- Tipo de soporte: Cartucho
	- CPU: Zilog Z80A
	- Velocidad: 3,58 MHz
	- Ram: 8 KB
	- Rom: 8KB/16KB/24KB/32KB
	- Controladores: Dos joystick con 2 botones de disparo y un keypad de  12
	  botones.
	- Modos gráficos: 259x192
	- Colores: 16.
	- Sonido: 3 canales de sonido, 1 de ruido (Texas Instruments SN76489AN).
			
3.9.3. Emuladores preconfigurados en Gelide
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163
	- Xmess (@2.33.): http://x.mame.net
	
3.9.4. Otras posibles alternativas
	- ColEm: http://fms.komkon.org/ColEm/
	- Meka: http://www.smspower.org/meka/
	- Bee: http://www.thebeehive.ws/
	

3.10. Emerson Arcadia 2001

	Consola de 8 bits de 2ª generación lanzada por Emerson Radio Corp en 1982.

	La Arcadia fue una consola más pequeña que sus competidoras contemporáneas
que estaba alimentada por 12 voltios, característica que le permitía ser usada
en vehículos tales como coches, barcos, etc. El problema de esta portabilidad,
fue que también necesitaba un televisor portable cosa que era bastante raro en
su época.	
	La librería de juegos estaba compuesta de 51 juegos únicos y unas 10
variaciones. Su calidad gráfica era similar a que tenía la Odyssey de
Intellivision.
	Emerson licenció la Arcadia 2001 a nivel mundial por lo que existen más de
30 clones de la consola. La versión original de Emerson, fue considerada "dead
on arrival" (muerta antes de salir) en USA ya que su salida al mercado coincidió
con la 5200 de Atari y la ColecoVisión de Coleco, además de que Atari poseía los
derechos exclusivos de la mayoría de los juegos populares, lo cual hacía
prácticamente imposible que Emerson portara estos a su consola.
	Emerson llegó a crear muchos de los títulos arcade populares para su Arcadia
como por ejemplo Pac-Man, Galaxian, etc, pero Atari comenzó a demandar a sus
competidores por lanzar juegos de los que poseían los derechos exclusivos, así
que Emerson se quedó con miles de juegos fabricados que nunca pudo vender.

3.10.1. Información general:
	- Nombre: Arcadia 2001
	- Fabricante: Emerson Radio Corp
	- Año: 1982
	- Generación: 2ª
	- Tipo: Consola-TV
	- Extensiones: .bin

3.10.2. Información Hardware:
	- Tipo de soporte: Cartucho
	- CPU: Signetics 2650A
	- Velocidad: 3.58 Mhz
	- Ram: 1024 bytes
	- Rom: Ninguna
	- Controladores: Dos joystick con 2 botones de disparo y un keypad de 12
	  botones.
	- Modos gráficos: 128x208 / 128x104
	- Colores: 8.
	- Sonido: Un canal de sonido ("Beeper") y un canal de ruido ("Noise")
			
3.10.3. Emuladores preconfigurados en Gelide
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163
	- Xmess (@2.33.): http://x.mame.net
	
3.10.4. Otras posibles alternativas
	En el momento de escribir esta entrada, no parece haber ningún emulador más
para GNU/Linux orientado exclusivamente para Emerson Arcadia 2001.


3.11. Entex Adventure Vision

	Consola portable de segunda generación lanzada por Entex en 1982.
	
	La Adventure Vision fue una consola de videojuegos portable auto contenida
(no necesitaba de un monitor externo). La máquina se controlaba a través de un
joystick integrado en la propia consola multi-posición y dos pares de botones
(un par de cada lado del joystick) que permitía un manejo cómodo de la consola
tanto para las personas diestras como las personas zurdas.
	Una interesante característica del Adventure Vision era su "monitor". En
lugar de usar una pantalla de cristal líquido o un televisor externo, la consola
usaba una línea de 40 LEDs rojos combinados con un espejo rotante localizado
dentro de la máquina. Esto permitía una resolución de 150 x 40 píxeles. Otro
producto que usaba esta técnica fue producido por Nintendo a mediados de los
noventa bajo el nombre de Virtual Boy. Al igual que el Adventure Vision, el
Virtual Boy estaba adelantado para su época y no fue bien recibido.
	Los contratiempos del Adventure Vision eran su pantalla monocroma y el
espejo, que consumía una gran cantidad de energía de las baterías (aunque este
último inconveniente se podía solucionar usando una fuente de energía externa).
	Entex publicó solamente cuatro juegos para el Adventure Vision:
- Defender, basado en el videojuego arcade homónimo de la empresa Williams.
- Super Cobra, basado en el videojuego arcade de Konami del mismo nombre.
- Turtles, basado en el videojuego arcade de Konami del mismo nombre.
- Space Force, un clon del Asteroids de Atari. 

3.11.1. Información general:
	- Nombre: Adventure Vision
	- Fabricante: Entex Industries
	- Año: 1982
	- Generación: 2ª
	- Tipo: Portable con monitor auto contenido.
	- Extensiones: .bin

3.11.2. Información Hardware:
	- Tipo de soporte: Cartucho
	- CPU: Intel 8048
	- Velocidad: 733 KHz
	- Ram: 64 bytes internos al 8048 y  1 KB en la placa base.
	- Rom: 1KB interna al 8048, 4K en los cartuchos
	- Controladores: Un joystick con 4 botones (dos a cada lado del joystick)
	  integrados en la propia consola.
	- Modos gráficos: 150x40.
	- Colores: 2.
	- Sonido: National Semiconductor COP411L a 52.6 KHz
			
3.11.3. Emuladores preconfigurados en Gelide
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163
	- Xmess (@2.33.): http://x.mame.net
	
3.11.4. Otras posibles alternativas
	En el momento de escribir esta entrada, no parece haber ningún emulador más
para GNU/Linux orientado exclusivamente para Entex Adventure Vision


3.12. Fairchild Channel F

	Consola de segunda generación lanzada por Fairchild Semiconductor en 1976.

	La Channel F fue el primer sistema de vídeo juegos programable con cartuchos
plug-in que contenían roms con código de microprocesador en vez de circuitos
dedicados. No fue un sistema muy popular pero si que fue importante por sus
nuevas características que más tarde fueron copiadas por otros sistemas.
	Una característica única de la consola, era un botón que permitía al jugador
congelar el juego y también cambiar el tiempo, la velocidad o los dos durante
la partida sin alterar la puntuación.
	Los mandos de la Channel F estaban conectados directamente a la consola con
cables dedicados. No tenían ningún botón de disparo y el joystick permitía
movimientos en 8 direcciones y también rotación a la izquierda y derecha para
juegos de paddle.
	La popularidad de la consola bajo considerablemente cuando Atari lanzó su
VCS en 1977 ya que esta tenía mucho mejores gráficos y sonido.

3.12.1. Información general:
	- Nombre: Channel F
	- Fabricante: Fairchild Semiconductor
	- Año: 1976
	- Generación: 2ª
	- Tipo: Consola-TV.
	- Extensiones: .bin, .chf

3.12.2. Información Hardware:
	- Tipo de soporte: Cartucho
	- CPU: Fairchild F8
	- Velocidad: 2 MHz
	- Ram: 64 bytes.
	- Rom: Ninguna
	- Controladores: Dos controladores conectados directamente en la consola con
	  un joystick que permitía 8 direcciones, rotación izquierda y derecha y
	  pulsación que hacía de botón de disparo. 
	- Modos gráficos: 128x64.
	- Colores: 8 aunque solo 4 diferentes por linea.
	- Sonido: Altavoz incrustado en la propia consola, más tarde en la segunda
	  versión se usaba el sonido de la TV.
			
3.12.3. Emuladores preconfigurados en Gelide
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163
	- Xmess (@2.33.): http://x.mame.net
	
3.12.4. Otras posibles alternativas
	En el momento de escribir esta entrada, no parece haber ningún emulador más
para GNU/Linux orientado exclusivamente para la Fairchild Channel F.

	
3.13. GCE Vectrex

	Consola con monitor vectorial integrado de segunda generación.
	
	Vectrex es una consola que integraba una pantalla de gráficos vectoriales en
blanco y negro. La principal desventaja era la ausencia de colores para lo que
se usaron "overlays", unos filtros para la pantalla para que se viera colorida
la imagen, no eran más que acetatos coloreados que se ponían encima de la
pantalla.
	La consola fue lanzada en 1982 en Estados Unidos por 199 dólares y en 1983
GCE es comprada por la Milton Bradley. De esa manera la Vectrex se abrió al
mundo.
	Cuando llegó al mercado se agotaron las existencias, debido a la demanda de
un juego que venía incluido en el sistema, llamado Mine Storm, clon de
Asteroids. En ese año, se estudió la posibilidad de dotarla de una pantalla en
color, pero se desechó la idea por el alto precio que hubiera implicado.
	En 1984, la Vectrex, junto con otras consolas, fueron descontinuadas, por
muchas razones: catálogo de juegos grande y mediocre y el hecho de que las
computadoras eran más baratas y se podía hacer muchísimas cosas con ellas (entre
ellas, hacer los propios juegos).

3.13.1. Información general:
	- Nombre: Vectrex
	- Fabricante: GCE
	- Año: 1982
	- Generación: 2ª
	- Tipo: Consola-TV.
	- Extensiones: .bin, .gam, .vec, .vex

3.13.2. Información Hardware:
	- Tipo de soporte: Cartucho
	- CPU: Motorola 68A09
	- Velocidad: 1.6 MHz
	- Ram: 1 KB.
	- Rom: 8 KB.
	- Controladores: Un pad con joystick analógico y 4 botones de disparo. El
	  segundo pad era opcional. 
	- Modos gráficos: Gráficos vectoriales (Monitor vectorial Samsung de 9
	  pulgadas en blanco y negro.
	- Colores: Blanco y negro (Colores simulados por los overlays)
	- Sonido: General Instrument AY-3-8912.
			
3.13.3. Emuladores preconfigurados en Gelide
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163
	- Xmess (@2.33.): http://x.mame.net
	
3.13.4. Otras posibles alternativas
	- ParaJVE: http://parabellum.pagesperso-orange.fr/bin/ParaJVE/ParaJVE.html


3.14. Magnavox Odyssey2

	Consola de 2ª generación lanzada en 1978 por Magnavox.
	
	La Odyssey2 se conoció en Europa como Philips Videopac G7000. Tuvo otros
muchos nombres dependiendo de la zona de lanzamiento. 
	Magnavox fue la compañía que fabricó la primera vídeo consola, la Odyssey
que fue seguida de otros muchos modelos con mejoras tecnológicas. En 1978,
Magnavox, que ya era subsidiaria de Philips America, lanzó la Odyssey2.
	La Odyssey2 siguió el camino de la Fairchild Channel F, integrando cartuchos
con roms programables para competir en el mercado de la época, liderado entonces
principalmente por Atari con su VCS.
	Aunque no llegó a ser tan popular como la Atari VCS o la Intellivision, la
consola funcionó bien en USA e incluso mejor en Europa donde fue lanzada por 
Philips. En Europa se llegó a lanzar una evolución del hardware llamándose
Philips G7400, Videopac+, pero esta versión en USA (Odyssey 3) no pasó de la
fase de prototipado. 
  
3.14.1. Información general:
	- Nombre: Odyssey2 / Videopac G7000 
	- Fabricante: Magnavox / Philips
	- Año: 1978
	- Generación: 2ª
	- Tipo: Consola-TV.
	- Extensiones: .bin, .rom

3.14.2. Información Hardware:
	- Tipo de soporte: Cartucho
	- CPU: Intel 8048 (8 bits)
	- Velocidad: 1.79 MHz
	- Ram: 64 bytes (internos al 8048) + 128 bytes
	- Rom: 1 KB.
	- Controladores: Dos joysticks de 8 direcciones con un botón de disparo. 
	- Modos gráficos: 154x100.
	- Colores: 12
	- Sonido: 1 canal mono.
			
3.14.3. Emuladores preconfigurados en Gelide
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163
	- Xmess (@2.33.): http://x.mame.net
	
3.14.4. Otras posibles alternativas
	- o2em: http://o2em.sourceforge.net/
	- loem: http://www.zophar.net/linux/odyssey2/loem.html


3.15. Mame

	MAME (Multiple Arcade Machine Emulator).
	
	Se trata de un proyecto sin fines de lucro cuyo objetivo principal es ser
una referencia del funcionamiento interno de las máquinas arcade emuladas. Esto
se hace tanto con propósitos educativos como con de	preservación con el fin de
evitar que muchos de los juegos históricos desaparezcan para siempre una vez que
su hardware deja de funcionar.
	Como efecto colateral de esta documentación y preservación, MAME permite 
jugar a estos juegos en PC's actuales y otras plataformas, aunque esto no es el
objetivo principal del proyecto.
	En enero de 1997, Nicola Salmoria creó el MAME al fusionar varios emuladores
en los que había estado trabajando. Basó su estructura en una arquitectura
modular, en la que cada componente del hardware era emulado por medio de un
driver específico, de tal forma que para la emulación de una máquina, basta con
dar la información de qué componentes tiene, y cómo se relacionan.
	El desarrollo del proyecto MAME se ha visto en estos años obstaculizado por
distintos factores:
- La dificultad de acceder a las placas (hardware) de las recreativas
originales, para estudiarlas y extraer las ROMs (copia del software de la
máquina, que contiene el juego en sí).
- El cifrado utilizado internamente por muchas recreativas, como medio para
evitar la piratería.
- Los posibles problemas legales que podrían producirse si se emularan juegos
demasiado recientes, o aún comercializados.

3.15.1. Información general:
	- Nombre: MAME 
	- Fabricante: Nicola Salmoria y el MAME team
	- Año: 1997
	- Generación: N/A
	- Tipo: Arcade.
	- Extensiones: .zip, .chd
			
3.15.2. Emuladores preconfigurados en Gelide
	- MAME (@2.16.): http://www.mess.org/
	- SdlMame (@2.23.): http://rbelmont.mameworld.info/?page_id=163
	- Xmame (@2.32.): http://x.mame.net
	
3.15.3. Otras posibles alternativas
	Básicamente el resto de alternativas están basadas en estas y son muy
viejas.


3.16. Mattel Intellivision

	La primera consola de 16 bits lanzada por Mattel en 1979.
	
	El desarrollo de la máquina comenzó en 1978, a menos de un año de la
introducción de su principal competidor, el Atari 2600. La palabra intellivision
es una unión de "intelligent" y "television" ("Televisión inteligente").
	La Intellivision fue desarrollada por Mattel Electronics y se lanzó en todo
Estados Unidos en 1980 con un coste de 299 dólares y un juego de regalo. A pesar
de no ser el primer sistema que se enfrentó a Atari (sistemas hechos por
Fairchild Semiconductor, Bally, y Magnavox ya estaban en el mercado), fue la
primera consola que significó una seria amenaza a su dominio.
	Al igual que Atari, Mattel licenció su consola a otras empresas para que la
vendan bajo su propia marca. Estos modelos incluyen el Tandyvision de Radio
Shack, el Intellivision de GTE-Sylvania, y el Super Video Arcade de Sears. (El
modelo de Sears fue un golpe para Mattel, ya que esta empresa ya vendía una
versión del Atari 2600, haciendo una gran contribución a la popularidad de
Atari.)
	En ese primer año Mattel vendió 175.000 consolas Intellivision, y la
librería de juegos creció hasta alcanzar los 19 juegos. Hasta este punto, todos
los juegos estaban producidos por una compañía llamada APh. Mattel se dio cuenta
que lo que hasta ahora habían visto como un producto secundario se convirtió en
un gran éxito. Entonces, Mattel decidió abrir su propio equipo de desarrollo de
software para el Intellivision. Para evitar que los programadores fueran
contratados por el rival Atari, su identidad y lugar de trabajo fue guardada en
secreto. En público, los programadores eran conocidos colectivamente como los
"Blue Sky Rangers".
	Para 1982 las ventas se habían disparado. Más de dos millones de unidades
habían sido vendidas para el final de ese año, dándole a Mattel una ganancia de
100 millones de dólares. Las compañías Activision e Imagic empezaron a lanzar
títulos para la consola, al igual que sus rivales, y Atari y Coleco lanzaron
nuevos productos para poder competir con Mattel: el Atari 5200 y el
Colecovision, respectivamente. Mattel creó juegos bajo la marca M Network para
los sistemas de Atari y Coleco. Los títulos más populares vendieron más de un
millón de copias. El Intellivision también fue vendido en Japón de la mano de
Bandai.

3.16.1. Información general:
	- Nombre: Intellivision 
	- Fabricante: Mattel
	- Año: 1979
	- Generación: 2ª
	- Tipo: Consola-TV.
	- Extensiones: .int, .rom, .bin, .itv

3.16.2. Información Hardware:
	- Tipo de soporte: Cartucho
	- CPU: General Instrument CP1610 (16bits)
	- Velocidad: 895 KHz
	- Ram: 1352 bytes
	- Rom: 7168 bytes
	- Controladores: Pad con un disco con 16 direcciones, keypad de 12 botones y
	  4 botones de acción laterales. 
	- Modos gráficos: 160x196.
	- Colores: Paleta de 16.
	- Sonido: 3 canales de sonido y uno de ruido (General Instrument AY-3-8914)
			
3.16.3. Emuladores preconfigurados en Gelide
	- jzIntv (@2.15.): http://spatula-city.org/~im14u2c/intv
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163
	- Xmess (@2.33.): http://x.mame.net
	
3.16.4. Otras posibles alternativas
	- Bliss: http://bliss.kylesblog.com


3.17. NEC Pc Engine

	Consola de 4ª generación lanzada por NEC en Japón en 1987.
	
	Aunque la consola fue lanzada primero en Japón como PC Engine, fue 
renombrada para el mercado norteamericano TurboGrafx-16 y se lanzó en 1989.
	La consola era un sistema de 8 bits, aunque incorporaba un chip gráfico de
16 bits, capaz de mostrar 482 colores en pantalla. Fue un trabajo correalizado
entre el creador de software japonés Hudson Soft y NEC. El primero buscaba ayuda
financiera para una consola habían diseñado, el segundo buscaba como entrar en
el lucrativo mercado de los videojuegos.
	Se trata de una consola muy pequeña debido principalmente a una arquitectura
eficiente de tres chips y a las HuCards, que eran unos cartuchos del tamaño de
una tarjeta de crédito, pero algo más anchas.
	Fue la primera consola que tenía la opción de un añadido de CD permitiendo 
obtener las mejoras por utilizar un sistema basado en CDs: más memoria, costes 
más baratos y compatibilidad con Red Book.
	La PC Engine fue extremadamente popular en Japón, vendiendo más que la
Famicom de Nintendo en los primeros compases desde su lanzamiento, algo bastante
difícil teniendo en cuenta que entre 1987 y 1993 se lanzaron 12 consolas. Uno de
los factores claves para que la PC Engine se hiciera popular fueron los juegos
eróticos.
	A pesar del éxito del sistema, empezó a perder fuerza cuando aparecieron la 
Sega Mega Drive (Sega Génesis en América) en 1989, y posteriormente la Super 
Famicom en 1991, ambas consolas con procesadores centrales de 16-bits, a
diferencia de la PC Engine cuyo procesador central es de 8 bits, y sólo el de
vídeo era de 16 bits.

3.17.1. Información general:
	- Nombre: PC Engine 
	- Fabricante: NEC
	- Año: 1987
	- Generación: 4ª
	- Tipo: Consola-TV.
	- Extensiones: .pce, .bin

3.17.2. Información Hardware:
	- Tipo de soporte: HuCard
	- CPU: Hudson Soft HuC6280A (8bits)
	- Velocidad: 1.79 o 7.16 MHz (Intercambiable por el software)
	- Ram: 8 KB
	- Rom: Desconocido
	- Controladores: Un pad de 8 direcciones, dos botones de acción y otros dos
	  para Select y Run. 
	- Modos gráficos: Normalmente 256x240, máximo de 512x240
	- Colores: Paleta 512, 482 simultáneos en pantalla (241 para fondos y 241
	  para sprites)
	- Sonido: 6 canales PSG, llegando hasta 111.87 KHz de frecuencia por canal.
			
3.17.3. Emuladores preconfigurados en Gelide
	- Hu-go! (@2.14.): http://www.zeograd.com/parse.php?src=hugof&path=0,1,
	- Mednafen (@2.17.): http://mednafen.sourceforge.net
	- Xe emulator (@2.31.): http://www.xe-emulator.com
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163
	- Xmess (@2.33.): http://x.mame.net
	
3.17.4. Otras posibles alternativas
	- Darknes: http://www.dridus.com/~nyef/darcnes/
	- XYame: ???
	- Neco: http://www.vtching.com/neco/index.php
	- TGEmu: http://cgfm2.emuviews.com/tgemu.php
	- VPCe: ???


3.18. NEC SuperGrafx

	Evolución de la PC Engine con algunos cambios en el hardware.
	
	La SuperGrafx no es más que una versión mejorada de la PC Engine. Aunque en
un principio se dijo que sería una consola realmente de 16 bits con muchas
mejoras en los gráficos y el sonido, al final se lanzo antes de lo esperado y
solo proporcionó una mejora en los gráficos, respecto a la PC Engine original.
	Las mejoras de la SuperGrafx respecto a la PC Engine, residían primero en la
cantidad de memoria RAM, que fue multiplicada por cuatro y la inclusión de un
segundo chip de vídeo así como otro chip controlador para sincronizar el trabajo
entres los dos chips de vídeo
	La consola no fue muy bien recibida, sobre todo a causa de su falta de
juegos que aprovecharan realmente las nuevas habilidades; solamente se lanzaron
siete títulos. Tampoco se hicieron juegos en CD que aprovecharan las nuevas
características de la plataforma. Además, hay que añadir que los juegos eran
muy caros. De todas formas la consola era compatible con los juegos de su
predecesora.

3.18.1. Información general:
	- Nombre: SuperGrafx
	- Fabricante: NEC
	- Año: 1989
	- Generación: 4ª
	- Tipo: Consola-TV.
	- Extensiones: .pce, .bin, .sgx

3.18.2. Información Hardware:
	- Tipo de soporte: HuCard
	- CPU: Hudson Soft HuC6280A (8bits)
	- Velocidad: 1.79 o 7.16 MHz (Intercambiable por el software)
	- Ram: 32 KB
	- Rom: Desconocido
	- Controladores: Un pad de 8 direcciones, dos botones de acción y otros dos
	  para Select y Run. 
	- Modos gráficos: Normalmente 256x240, máximo de 512x240
	- Colores: Paleta 512, 482 simultáneos en pantalla (241 para fondos y 241
	  para sprites)
	- Sonido: 6 canales PSG, llegando hasta 111.87 KHz de frecuencia por canal.
			
3.18.3. Emuladores preconfigurados en Gelide
	- Mednafen (@2.17.): http://mednafen.sourceforge.net
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163
	
3.18.4. Otras posibles alternativas
	En el momento de escribir esta entrada no he localizado ningún otro emulador
de la NEC SuperGrafx para GNU/Linux.


3.19. Nintendo DS

	Consola portátil con doble pantalla lanzada por Nintendo en 2004. 

	La Nintendo DS (NDS) es una consola portátil desarrollada y manufacturada
por Nintendo. Fue lanzada en 2004 en Norte América y Japón. Tiene un diseño
similar a la Game Boy Advance SP, con dos pantallas LCD donde la inferior actúa
como touchscreen. Incorpora también un micrófono y soporta Wireless IEEE 802.11,
que permite la interacción de los jugadores en un rango pequeño u online.
	Fue la primera consola de Nintendo que se lanzó antes en Norte América que
en Japón.
	La denominación "DS" proviene de "Developers' System" y también de "Dual
Screen".
	En 2006, Nintendo lanzó en Japón, la Nintendo DS Lite, un rediseño de la DS.
Se trata de una versión más delgada y ligera que incluye unas pantallas más
brillantes que la original. En 2008 la DS sufrió otro rediseño, esta vez se
trataba de la Nintendo DSi, que incluyó una mejora hardware sustancial con un
procesador más rápido y más memoria RAM.
	Hasta Junio de 2010, los distintos modelos de la DS han vendido 132.04
millones de unidades, convirtiéndola en la consola portátil más vendida hasta el
momento, y la segunda más vendida de todas las consolas, solo por detrás de la
Sony PlayStation 2.

3.19.1. Información general:
	- Nombre: DS
	- Fabricante: Nintendo
	- Año: 2004
	- Generación: 7ª
	- Tipo: Portátil (Handheld)
	- Extensiones: .nds

3.19.2. Información Hardware:
	- Tipo de soporte: 	Cartucho
	- CPU: Dos procesadores ARM, ARM946E-S, ARM7TDMI
	- Velocidad: 67 MHz (ARM946E-S), 33 MHz (ARM7TDMI)
	- Ram: 4 MB
	- Rom: 256 KB
	- Controladores: Pad de 8 direcciones, 6 botones de acción (A, B, X, Y, L,
	  R), 2 para Select y Start, pantalla táctil todo integrado en la consola. 
	- Modos gráficos: 256x192 en las dos pantallas
	- Colores: 262,144 (18 bits)
	- Sonido: Altavoces estéreo con virtual surround. 
			
3.19.3. Emuladores preconfigurados en Gelide
	- DeSMuME (@2.3.): http://www.desmume.org/
	
3.19.4. Otras posibles alternativas
	- iDeaS: http://ideasemu.biz/


3.20. Nintendo Famicom Disk System

	Periférico para la Nintendo Famicom que añadía soporte para discos floppy.
	
	El Family Computer Disk System (abreviado "Famicom Disk System" o "FDS") fue
lanzado el 21 de febrero de 1986 por Nintendo como periférico para su popular
Family Computer ("Famicom") en Japón. La unidad se situaba debajo de la consola
y usaba disquetes para el almacenamiento de datos, en vez de cartuchos.	Se
conectaba a la Famicom mediante un cartucho modificado llamado RAM Adapter que
se introducía en la ranura para cartuchos de la Famicom. Este cartucho tenía un
cable que conectaba con el FDS.
	Fue anunciado para los EE.UU., pero nunca llegó a ver la luz fuera de Japón.
En Japón, Sharp lanzó bajo licencia la Twin Famicom, que unía la Famicom y esta
unidad de disco en un solo aparato.
	El principal atractivo del FDS era su bajo coste: un disquete podía ser
producido por un precio considerablemente menor que el de un cartucho. El precio
de venta al público también era menor que el de un cartucho. Muchos
desarrolladores optaron por lanzar sus juegos para este sistema, en vez para la
Famicom gracias a los bajos costes de producción y a las ventajas del hardware
del FDS.
	En 1986, los disquetes de 128 kilobytes de almacenamiento eran bastante
atractivos. El aspecto de poder reescribir los disquetes abría interesantes
oportunidades. Juegos como The Legend of Zelda (el primer juego del FDS),
Metroid y Kid Icarus fueron lanzados para el FDS con la capacidad de guardar los
progresos, toda una novedad.
	Nintendo impulsó su FDS con fuerza en Japón, lanzando videojuegos exclusivos
en este formato durante unos dos años. Sin embargo, el aparato no tuvo el éxito
que se esperaba. Nintendo reclamó en un principio a las desarrolladoras un
porcentaje de los derechos de autor en cada juego que se lanzara para el FDS.
Esto fue la causa de que muchas empresas licenciadas ignoraran el sistema.
	Para terminar de sepultar al sistema, se desarrolló un aparato, sin licencia
ninguna, que conectaba dos FDS para copiar los juegos. En 1993 Nintendo ordenó
desmantelar todas las máquinas Disk Writer, marcando así el fin definitivo del
Famicom Disk System.

3.20.1. Información general:
	- Nombre: Family Computer Disk System
	- Fabricante: Nintendo
	- Año: 1986
	- Generación: 3ª
	- Tipo: Consola-TV Add-On.
	- Extensiones: .fds

3.20.2. Información Hardware:
	- Tipo de soporte: Floppy Disks
	- CPU: Ricoh 2A03 (8bits)
	- Velocidad: Desconocida.
	- Ram: 32 KB
	- Rom: Desconocido
	- Controladores: N/A 
	- Modos gráficos: N/A
	- Colores: N/A
	- Sonido: N/A
			
3.20.3. Emuladores preconfigurados en Gelide
	- FCEUX (@2.5.): http://fceux.com
	- Nestopia (@2.20.): http://nestopia.sourceforge.net/
	- Mednafen (@2.17.): http://mednafen.sourceforge.net
	- Xe emulator (@2.31.): http://www.xe-emulator.com
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163
	
3.20.4. Otras posibles alternativas
	- iNes: http://fms.komkon.org/iNES
	- RockNES: http://rocknes.kinox.org


3.21. Nintendo Game Boy

	Consola portátil con pantalla monocroma lanzada por Nintendo en 1989. 

	Game Boy es una serie de vídeo consolas portátiles alimentadas con pilas (a
excepción del modelo SP y Micro) y comercializadas por Nintendo. Es uno de los
sistemas más vendidos hasta la fecha.
	Comenzó como un modelo de consola parcialmente experimental, y en su primer
año vendió relativamente poco (la Mega Drive de SEGA, por ejemplo, vendió 2
millones de consolas su primer año en el mercado), alrededor de los 4 millones
de unidades en todo el mundo. Sin embargo, con la llegada del fenómeno Tetris y
el grandísimo apoyo de los licenciatarios que trabajaban para NES y Super
Nintendo (Capcom, Konami, Enix/Quintet, Namco, Culture Brain, Jaleco,
Interplay, Ocean, Square...) las ventas se dispararon. Sólo el modelo clásico
(Game Boy original) consiguió vender hasta 1998 más de 100 millones de unidades
en todo el mundo. Más adelante, la GB Color añadiría en tres años cerca de 30
millones de unidades. 
	La Game Boy se llamaba en su fase prototipo Dot Matrix Game o DMG, nombre
que conservó en sus registros de número de modelo desarrollado por la división
Intelligent Systems encabezada por Gunpei Yokoi y lanzado al mercado el 21 de
abril de 1989 en Japón.

3.21.1. Información general:
	- Nombre: Game Boy
	- Fabricante: Nintendo
	- Año: 1989
	- Generación: 3ª
	- Tipo: Portátil (Handheld)
	- Extensiones: .gb, .gmb, .bin, .sgb

3.21.2. Información Hardware:
	- Tipo de soporte: 	Cartucho
	- CPU: Versión modificada del Sharp Z80 (8bits)
	- Velocidad: 4.194304 MHz
	- Ram: 8 KB
	- Rom: 256 Bbit, 512 Kbit, 1 Mbit, 2 Mbit, 4 Mbit y 8 Mbit (Cartuchos)
	- Controladores: Pad de 4 direcciones, 2 botones de acción y 2 para Select y
	  Start, todo integrado en la consola. 
	- Modos gráficos: 160×144
	- Colores: 4 tonos de gris
	- Sonido: 1 canal mono por el altavoz integrado, 4 canales estéreo con
	  auriculares. 
			
3.21.3. Emuladores preconfigurados en Gelide
	- Gambatte (@2.7.): https://sourceforge.net/projects/gambatte
	- Gngb (@2.10.): http://m.peponas.free.fr/gngb/index.html
	- Gnuboy (@2.12.): http://gnuboy.unix-fu.org/
	- VisualBoyAdvance (@2.30.): http://vba.ngemu.com
	- Mednafen (@2.17.): http://mednafen.sourceforge.net
	- Xe emulator (@2.31.): http://www.xe-emulator.com
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163
	- Xmess (@2.33.): http://x.mame.net
	
3.21.4. Otras posibles alternativas
	- Boycott: http://emu5ever.emuunlim.com/
	- Cingb: http://cingb.sourceforge.net/
	- Goober
	- KiGb: http://kigb.emuunlim.com/
	- VirtualGameBoy: http://fms.komkon.org/VGB
	- VisualBoyAdvance-M: http://www.vba-m.com/


3.22. Nintendo Game Boy Color

	Consola portátil de 5ª generación con pantalla a color.

	Game Boy Color es una vídeo consola portátil de la quinta generación de la
familia de sistemas de videojuegos de Nintendo Game Boy .
	Fue lanzada al mercado en Japón el 23 de octubre de 1998.
	Una particularidad de esta consolas es ser la primera compatible con su
antecesora, así que los antiguos juegos de la Game Boy clásica pueden correr en
esta nueva Game Boy e incluirles color de un modo similar al Super Game Boy.
Pero la Game Boy Color no es solo una Game Boy con color, se le ha mejorado el
hardware con mayor resolución en los gráficos y velocidad, pero era inferior de
todas formas a sus contemporáneos como Neo Geo Pocket o Wonderswan e incluso
consolas antiguas como Atari Lynx, como mucho la mejora técnica podría ser
similar al Sega Game Gear.

3.22.1. Información general:
	- Nombre: Game Boy Color
	- Fabricante: Nintendo
	- Año: 1998
	- Generación: 5ª
	- Tipo: Portátil (Handheld)
	- Extensiones: .gc, .cgm, .bin, .sgb

3.22.2. Información Hardware:
	- Tipo de soporte: 	Cartucho
	- CPU: Zilogic Z80 (8bits)
	- Velocidad: 4-8 MHz (dependiendo del cartucho insertado)
	- Ram: 32 KB
	- Rom: 256 Bbit, 512 Kbit, 1 Mbit, 2 Mbit, 4 Mbit y 8 Mbit (Cartuchos)
	- Controladores: Pad de 4 direcciones, 2 botones de acción y 2 para Select y
	  Start, todo integrado en la consola. 
	- Modos gráficos: 160×144
	- Colores: 32.768, máximo 56 en pantalla
	- Sonido: 1 canal mono por el altavoz integrado, 4 canales estéreo con
	  auriculares. 
			
3.22.3. Emuladores preconfigurados en Gelide
	- Gambatte (@2.7.): https://sourceforge.net/projects/gambatte
	- Gngb (@2.10.): http://m.peponas.free.fr/gngb/index.html
	- Gnuboy (@2.12.): http://gnuboy.unix-fu.org/
	- VisualBoyAdvance (@2.30.): http://vba.ngemu.com
	- Mednafen (@2.17.): http://mednafen.sourceforge.net
	- Xe emulator (@2.31.): http://www.xe-emulator.com
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163
	- Xmess (@2.33.): http://x.mame.net
	
3.22.4. Otras posibles alternativas
	- Boycott: http://emu5ever.emuunlim.com/
	- Cingb: http://cingb.sourceforge.net/
	- Goober
	- KiGb: http://kigb.emuunlim.com/
	- VirtualGameBoy: http://fms.komkon.org/VGB
	- VisualBoyAdvance-M: http://www.vba-m.com/


3.23. Nintendo Game Boy Advance

	La Game Boy Advance (GBA) es una consola portátil de 32bits de  Nintendo.

	Es una consola de 32bits desarrollada y manufacturada por Nintendo. Fue
lanzada en 2001 en Japón.  
	Sucesora de la popular Game Boy Color, es capaz de ejecutar casi todo el
software escrito para la Game Boy Original Color, así como nuevos programas
desarrollados teniendo en cuenta las mayores capacidades del sistema. Al igual 
que prácticamente cualquier consola 2D, tiene soporte por hardware para dibujar 
la pantalla, aunque las capacidades de la GBA resultaron sorprendentes en su
presentación: hasta 128 sprites simultáneos y hasta cuatro planos de scroll, que
pueden ser escalados, rotados y mezclados sin consumir tiempo de la CPU
principal.

3.23.1. Información general:
	- Nombre: Game Boy Advance
	- Fabricante: Nintendo
	- Año: 2001
	- Generación: 6ª
	- Tipo: Portátil (Handheld)
	- Extensiones: .gba, .bin

3.23.2. Información Hardware:
	- Tipo de soporte: 	Cartucho
	- CPU: ARM7TDMI con memoria incluida (32bits)
	       Z80 para compatibilidad con Game Boy.
	- Velocidad: 16.8 MHz (8 MHz el Z80)
	- Ram: 32 KB más 256 KB WRAM más 96 KB VRAM integrada en la CPU.
	- Rom: 16 KB incluida en el procesador.
	- Controladores: Pad de 4 direcciones, 4 botones de acción (A, B, L y R) y 2
	  para Select y Start, todo integrado en la consola. 
	- Modos gráficos: 240x160
	- Colores: 15 bit RGB, 512 colores simultaneos en "modo carácter" y 32,768
	  colores simultáneos en "modo bitmap".
	- Sonido: 1 canal mono por el altavoz integrado, 4 canales estéreo con
	  auriculares. 
			
3.23.3. Emuladores preconfigurados en Gelide
	- VisualBoyAdvance (@2.29.): http://vba.ngemu.com
	- BoyCott Advance-SDL (@2.1.)
	- Mednafen (@2.17.): http://mednafen.sourceforge.net
	- Xe emulator (@2.31.): http://www.xe-emulator.com
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163
	
3.23.4. Otras posibles alternativas
	- VirtualGameBoyAdvance: http://fms.komkon.org/VGBA/
	- VisualBoyAdvance-M: http://www.vba-m.com/
	

3.24. Nintendo Entertainment System (NES)

	Nintendo Entertainment System o NES, consola de 3ª generación de Nintendo.
	
	La NES fue una vídeo consola de ocho bits perteneciente a la tercera
generación en la industria de los videojuegos. Fue lanzada por Nintendo en
Norteamérica, Europa y Australia entre 1985 y 1987. En la mayor parte del
continente asiático, incluyendo a Japón (donde debutó originalmente en 1983),
China, Vietnam, Singapur y Filipinas se la conoció con el nombre de Family
Computer (Famicom). En 1990, la Super Nintendo reemplazó a Nintendo NES en el
mercado.
	Está considerada como la vídeo consola más exitosa de su época y contribuyó a
revitalizar de forma significativa la industria estadounidense de los
videojuegos, la cual había sufrido previamente una debacle financiera que
ocasionó que varias empresas especializadas quebraran, además de establecer el
nivel estándar para consolas posteriores en aspectos primordiales como el diseño
de cada juego y planteamiento de mandos. Asimismo, a partir de esta consola
Nintendo estableció un modelo de negocios estandarizado en la era contemporánea
y referente a la licencia de software para desarrolladores tipo third-party.
	En los años 1990 surgieron sistemas tecnológicamente superiores a la NES
(entre ellos Sega Mega Drive), los cuales habrían de marcar el fin del
prevalecimiento en la industria de la NES. Eclipsada asimismo por la nueva Super
Nintendo, la base de usuarios de la NES disminuyó de manera gradual con el paso
del tiempo. A pesar de ello, Nintendo continuó comercializando el sistema en
Norteamérica durante la primera mitad de la década, lanzando igualmente una
nueva versión. Los últimos juegos que se distribuyeron para la NES fueron
Takahashi Meijin no Bōken Jima IV (perteneciente a la serie Adventure Island) en
Japón, mientras que Sunday Funday y Wario's Woods se convirtieron en sus últimos
títulos publicados en Norteamérica.
	Debido a las ventas decrecientes y la ausencia de nuevos juegos, Nintendo of
America descontinuó oficialmente el sistema en 1995. No obstante, Nintendo of
Japón siguió produciendo nuevas unidades Famicom hasta septiembre de 2003,
momento en el que finalmente descontinuó la línea. Aun cuando los
desarrolladores cesaron la producción de dicho sistema, algunas franquicias
exitosas de la NES se trasladaron a nuevas consolas (primordialmente a SNES),
permaneciendo populares desde entonces. Ejemplos de estas son Super Mario Bros.,
The Legend of Zelda y Metroid. A su vez, Nintendo of Japan siguió reparando
Famicoms hasta el 31 de octubre de 2007, instante en que se hizo evidente una
mayor escasez de los accesorios necesarios para el funcionamiento del sistema.
	Cuando la NES dejó de existir en el mercado, más de 60 millones de unidades
habían sido comercializadas a nivel mundial.

3.24.1. Información general:
	- Nombre: Nintendo Entertainment System (NES)
	- Fabricante: Nintendo
	- Año: 1983
	- Generación: 3ª
	- Tipo: Consola-TV
	- Extensiones: .nes, .unf 

3.24.2. Información Hardware:
	- Tipo de soporte: 	Cartucho
	- CPU: Ricoh basado en MOS Technology 6502 (8bits)
	- Velocidad: 1.79 MHz.
	- Ram: 2 KB
	- Rom: 4 KB.
	- Controladores: Pad de 8 direcciones, 2 botones de acción (A, B) y 2 para
	  Select y Start. 
	- Modos gráficos: 256x240
	- Colores: 152 colores, aunque solo 16 en pantalla, 4 colores por sprite. 
	- Sonido: 4 canales mono (2 ondas cuadradas, 1 onda triangular y 1 de ruido) 
			
3.24.3. Emuladores preconfigurados en Gelide
	- FCEUX (@2.5.): http://fceux.com
	- Nestopia (@2.20.): http://nestopia.sourceforge.net/
	- Mednafen (@2.17.): http://mednafen.sourceforge.net
	- Xe emulator (@2.31.): http://www.xe-emulator.com
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163
	- Xmess (@2.33.): http://x.mame.net
		
3.24.4. Otras posibles alternativas
	- Darknes: http://www.dridus.com/~nyef/darcnes/
	- Emilnes: http://www.geocities.com/egm_nes/
	- Fakenes: http://sourceforge.net/projects/fakenes/reviews/
	- iNes: http://fms.komkon.org/iNES
	- Infones: http://web.archive.org/web/20070214111834/www.geocities.co.jp/
	           SiliconValley/5604/infones.html
	- Nesemu: http://code.google.com/p/nesemu/
	- RockNES: http://rocknes.kinox.org
	- TuxNes: http://tuxnes.sourceforge.net/download.php

	
3.25. Nintendo Super Nintendo Entertainment System (SNES)

	Consola de 16 bits sucesora de la NES, lanzada por Nintendo en 1990.

	La Super Nintendo Entertainment System (SNES) fue la segunda vídeo consola de
sobremesa de Nintendo y es la sucesora de la NES en América y Europa.
	La ventaja de la SNES fueron sus avanzados gráficos y capacidades de sonido
en comparación con las consolas contemporáneas.
	Mantuvo una gran rivalidad en todo el mundo con la Sega Mega Drive (o Sega
Genesis) durante la era de 16 bits. Para la crítica y el público, es una de las
mejores y de las más importantes que han aparecido junto con la NES y la
PlayStation de Sony, siendo la más exitosa y vendida en la generación de los
16 bits a pesar de su relativamente tarde entrada en el mercado.
	La consola continuó siendo popular en la era de los 32bits y aunque Nintendo
ya ha retirado el soporte de la consola, esta sigue siendo popular entre fans,
coleccionistas, jugadores retro y entusiastas de la emulación. 
	En 2009, IGN nombro a la Super Nintendo Entertainment System como la 4ª
mejor consola de un grupo de 25.

3.25.1. Información general:
	- Nombre: Super Nintendo Entertainment System (SNES)
	- Fabricante: Nintendo
	- Año: 1990
	- Generación: 4ª
	- Tipo: Consola-TV
	- Extensiones: .sfc, .smc, .fig, .swc, .bin 

3.25.2. Información Hardware:
	- Tipo de soporte: 	Cartucho
	- CPU: Ricoh 5A22, basado en 65c816 (16bits)
	- Velocidad: 3.6 MHz.
	- Ram: 128 KB
	- Rom: ???
	- Controladores: Pad de 8 direcciones, 6 botones de acción (A, B, X, Y, L,
	  R) y 2 para Select y Start. 
	- Modos gráficos: Desde 256x224 hasta 512x448
	- Colores: 256 en pantalla de una paleta de 32768 
	- Sonido: Sony S-SPM 8 canales, Sony/Nintendo S-DSP 3 canales  
			
3.25.3. Emuladores preconfigurados en Gelide
	- Snes9x-Gtk (@2.25.): http://code.google.com/p/snes9x-gtk
	- Bsnes (@2.2.): http://byuu.org/bsnes/
	- Zsnes (@2.36.): http://www.zsnes.com
	- Xe emulator (@2.31.): http://www.xe-emulator.com
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163
	- Xmess (@2.33.): http://x.mame.net
		
3.25.4. Otras posibles alternativas
	- SNeESe: http://sneese.sourceforge.net/files.html
	- SNemul: http://web.archive.org/web/20020401220322/membres.lycos.fr/cassiop


3.26. Nintendo 64

	Cuarta consola de sobremesa de Nintendo con potencia de 64bits.
	
	La Nintendo 64 (N64) fue desarrollada para suceder a la Super Nintendo y
para competir con la Saturn de Sega y la PlayStation de Sony. Incorpora en su
arquitectura un procesador principal de 64 bits. El soporte de almacenamiento de
los juegos es en forma de cartuchos, alguno de ellos con memoria interna. El uso
de este tipo de almacenamiento le supuso una seria desventaja comercial frente a
sus competidores, ya que encarecía los costes de producción lo que aumentaba el
precio final, y además era de una capacidad de almacenamiento menor al de un
CD-ROM.
	Técnicamente, la utilización de cartuchos ofrece algunas ventajas frente al
formato CD-ROM, siendo ésta la idea que mantenía Nintendo frente a la
competencia. El cartucho tiene tiempos de acceso al sistema mucho más cortos,
hace posible la inclusión de coprocesadores y otros chips dentro del cartucho
para mejorar las capacidades del sistema, logrando ampliar su vida útil; y en un
principio parecía que podría ser más económico por no pagar derechos ("regalías"
o "royalties") por uso del formato CD-ROM, ni una unidad lectora para el mismo
que sería además mucho más delicada que una ranura o slot para cartuchos.
	La Nintendo 64 fue innovadora en diversos aspectos. El mando de control fue
el primero en incluir unos botones dispuestos en cruz diseñados especialmente
para que el usuario tomara el control de aspectos propios de juegos basados en
entornos tridimensionales (el control de la perspectiva de juego o cámaras, por
ejemplo), los cuales fueron utilizados por primera vez por el juego Super Mario
64. Otra innovación fue el incluir un stick analógico, el cual permite un
control de movimiento más preciso ya que por ejemplo en Super Mario 64 si se
movía levemente el stick analógico Mario caminaba, pero al mover el stick
analógico al máximo Mario corría. Otro de los aspectos novedosos a destacar fue
la función de vibración gracias al llamado Rumble Pak, que consiguió que el
mando de Nintendo 64 fuera el primero en vibrar y transmitir sensaciones al
jugador.
	Su producción cesó al ser sustituida por GameCube.

3.26.1. Información general:
	- Nombre: Nintendo 64
	- Fabricante: Nintendo
	- Año: 1996
	- Generación: 5ª
	- Tipo: Consola-TV
	- Extensiones: .n64, .v64, .z64, .rom, .bin 

3.26.2. Información Hardware:
	- Tipo de soporte: 	Cartucho
	- CPU: MIPS R4300i (64bits)
	- Velocidad: 93.75 MHz
	- Ram: 4 MB RDRAM
	- Rom: 64 MB max
	- Controladores: Pad de 8 direcciones, un stick analógico, 9 botones de
	  acción más 1 para Start. 
	- Modos gráficos: Desde 256x224 hasta 640x480
	- Colores: 32,768 en pantalla de una paleta de 16.7 milliones
	- Sonido: 2 DACs
			
3.26.3. Emuladores preconfigurados en Gelide
	- Mupen64Plus (@2.19.): http://code.google.com/p/mupen64plus
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163
	- Xmess (@2.33.): http://x.mame.net
		
3.26.4. Otras posibles alternativas
	- Mupen64: http://mupen64.emulation64.com/
 

3.27. Raine

	Emulador multi arcade enfocado principalmente en el hardware de Taito y
	Jaleco.

	Raine es un emulador de maquinas arcade. Emula algunas de las basadas en el
hardware M68000, M68020 así como algunas otras. Inicialmente estaba enfocado a
emular el hardware de Taito y Jaleco.	
	Comenzó como un experimento con el romset del Rainbow Island, dumpeado por
Aracorn/Romlist. Ahora Raine es capaz de emular muchos buenos juegos, incluyendo
nuevas adiciones de Cave y otras compañías.
	El engine de sonido fue mejorado gracias al trabajo de Hiromitsu Shioya.
	Recientemente muchos programadores se han unido al Raine Team, añadiendo
nuevos drivers y realizando muchas mejoras.

3.27.1. Información general:
	- Nombre: Raine 
	- Fabricante: Antiriad y el Raine Team
	- Año: 1998
	- Generación: N/A
	- Tipo: Arcade.
	- Extensiones: .zip
			
3.27.2. Emuladores preconfigurados en Gelide
	- Raine (@2.21.): http://rainemu.swishparty.co.uk/
	- MAME (@2.16.): http://www.mess.org/
	- SdlMame (@2.23.): http://rbelmont.mameworld.info/?page_id=163
	- Xmame (@2.32.): http://x.mame.net

3.27.3. Otras posibles alternativas
	El resto de alternativas están basadas en estas y son más viejas.


3.28. RCA Studio II	

	Consola de segunda generación lanzada por RCA en 1977.

	La RCA Studio II, que debutó en 1977, era una consola de juegos en blanco y
negro muy parecidos a las anteriores Pong y sus clones.
	No disponía de joysticks o similares, en su lugar usaba dos keypads de 10
botones que estaban integrados en la propia consola. Esto hacía que el juego
simultaneo de dos jugadores fuera muy difícil. 
	En el apartado de sonido, solo era capaz de emitir simples beeps con algunas
variaciones de tono y longitud.
	Una de las características que diferenció a la Studio II, fue que incluía,
internamente, cinco juegos.
	Esta consola no fue un producto exitoso, es más, ya estaba obsoleta cuando
entro en el mercado, comparándola con la Fairchild Channel F y para colmo, diez
meses después apareció la Atari 2600. Fue suspendida en 1979.
  
3.28.1. Información general:
	- Nombre: Studio II
	- Fabricante: RCA
	- Año: 1977
	- Generación: 2ª
	- Tipo: Consola-TV
	- Extensiones: .st2 

3.28.2. Información Hardware:
	- Tipo de soporte: 	Cartucho
	- CPU: RCA 1802
	- Velocidad: 1.78 MHz
	- Ram: 512 bytes (normalmente 256 para vídeo, 256 para programa)
	- Rom: 2 KB
	- Controladores: Dos keypads de 10 botones (números del 0 al 9) integrados
	  en la propia consola.
	- Modos gráficos: Desde 64x32 hasta 64x128
	- Colores: Blanco y negro
	- Sonido: Un buzzer mono
			
3.28.3. Emuladores preconfigurados en Gelide
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163
	- Xmess (@2.33.): http://x.mame.net

3.28.4. Otras posibles alternativas
	En el momento de escribir esta entrada, no parece haber ningún emulador más
para GNU/Linux orientado exclusivamente para la RCA Studio II.


3.29. Sega 32X

	Add-on para Mega Drive que la dotaba de 32bits y otras mejoras.

	La 32X fue un add-on para SEGA Mega Drive lanzado en 1994, como ampliación
de 32 bits para la consola, que era de 16 bits, aunque resultó ser un fracaso
comercial por múltiples causas, incluyendo un elevado precio de lanzamiento y un
catálogo de juegos pequeño.
	SEGA había confirmado que, debido al lanzamiento de una nueva consola de
32bits (Sega Saturn), este combo seria compatible; o en su defecto, la suma de
Mega Drive + Sega Mega-CD + 32X igualaría a Sega Saturn. Así la mayoría de los
consumidores decidieron esperar a Sega Saturn.
	No llego a triunfar, y la verdad sus juegos eran de gran calidad totalmente
enfocado a las 3D. Por aquella época, los polígonos estaban de moda, pero SEGA
no pudo con la Super Nintendo. El 32X fue un intento de desbancar a la Super
Nintendo de su recién conseguido primer puesto pero la Nintendo respondió al 32X
incorporando chips en sus cartuchos que mejoraban las prestaciones de la consola
de manera espectacular y también supieron explotar su consola al máximo con
juegos como Donkey Kong Country y sus dos secuelas; sin embargo, fueron muy
pocos juegos los que desarrollo SEGA para 32X.

3.29.1. Información general:
	- Nombre: 32X
	- Fabricante: Sega
	- Año: 1994
	- Generación: 4ª
	- Tipo: Consola-TV Add-on
	- Extensiones: .32x, .bin

3.29.2. Información Hardware:
	- Tipo de soporte: 	Cartucho
	- CPU: 2 procesadores Hitachi SH2 RISC (32bits)
	- Velocidad: 23.011 MHz
	- Ram: 256 KB
	- Rom: Desconocido
	- Controladores: Pad de 8 direcciones, 3 botones de acción y 1 botón para
	  start.
	- Modos gráficos: 320x224
	- Colores: 32.768 colores simultáneos en pantalla. 
	- Sonido: 12 canales (en conjunto con Mega Drive)
			
3.29.3. Emuladores preconfigurados en Gelide
	- Gens/GS (@2.9.): ttp://www.segaretro.org/Gens/GS
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163

3.29.4. Otras posibles alternativas
	- Kega Fusion: 	http://www.eidolons-inn.net/tiki-index.php?page=Kega
	- SDLHazeMD: http://mamedev.emulab.it/haze/


3.30. Sega Game Gear

	Consola portátil de 8bits lanzada por Sega en 1990.
	
	La Game Gear es una vídeo consola portátil creada por Sega en respuesta a la
Game Boy de Nintendo. Fue la tercera consola portátil con pantalla en color de
la historia, después de la Atari Lynx y la Turbo Express.
	El proyecto comenzó en 1989 bajo el nombre de "Project Mercury" y fue
lanzada en Japón el 6 de octubre de 1990. En América y Europa fue lanzada en
1991 y en Australia en 1992.
	La Game Gear fue básicamente una Master System portátil con menor resolución
pero que permitía una paleta de colores mayor, y potencialmente mejores
gráficos. Además podía producir sonido estéreo (disponible utilizando su salida
de auriculares), una característica que la Master System, con su salida mono,
tampoco poseía. Sin embargo, muy pocos juegos fueron programados con sonido
estéreo.
	Debido a las semejanzas técnicas de la Game Gear con la Master System, era
muy sencillo portar los juegos para la portátil. De hecho, era posible escribir
directamente los juegos de Master System en cartuchos para Game Gear sin
necesidad de reprogramación. Además, un adaptador llamado "Master Gear
Converter" permitía insertar cartuchos de la Master System directamente en la
Game Gear. El proceso inverso (usar juegos de Game Gear en la Master System) no
era posible debido a la mayor paleta de colores de la portátil.
	A pesar de su diseño ergonómico y su magnífica pantalla para la época, la
Game Gear no consiguió arrebatar a Nintendo una cuota de mercado significativa.
Alcanzó un 10.7% de la cuota de mercado. Y aunque fue claramente derrotada por
Game Boy, esta consola fue rentable para Sega, y tuvo unos seis años de vida, lo
normal en la mayoría de consolas. Su precio pasó de los 130€ en 1990 a los 90€
en 1996.
	El soporte para este sistema se abandonó a principios de 1997.

3.30.1. Información general:
	- Nombre: Game Gear
	- Fabricante: Sega
	- Año: 1990
	- Generación: 3ª
	- Tipo: Portátil (Handheld)
	- Extensiones: .gg, .bin

3.30.2. Información Hardware:
	- Tipo de soporte: 	Cartucho
	- CPU: Zilog Z80 (8bits)
	- Velocidad: 3.58 MHz
	- Ram: 24 KB
	- Rom: ???
	- Controladores: Pad de 8 direcciones, 2 botones de acción y 1 para Start,
	  todo integrado en la consola. 
	- Modos gráficos: 160x144
	- Colores: 64 en pantalla de una paleta de 4096
	- Sonido: 1 canal mono por el altavoz integrado, 4 canales estéreo con
	  auriculares.
			
3.30.3. Emuladores preconfigurados en Gelide
	- Osmose (@2.28): http://bcz.emu-france.com/osmose.htm
	- Mednafen (@2.17.): http://mednafen.sourceforge.net
	- Xe emulator (@2.31.): http://www.xe-emulator.com
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163

3.30.4. Otras posibles alternativas
	- Bee: http://www.thebeehive.ws
	- CrabEmu: http://crabemu.sourceforge.net
	- DarkNes: http://www.dridus.com/~nyef/darcnes/
	- Dega: http://www.emulinks.de/emus/
	- Kega Fusion: http://www.eidolons-inn.net/tiki-index.php?page=Kega
	- MasterGear: http://fms.komkon.org/MG
	- Meka: http://www.smspower.org/meka/
	- Regen: http://aamirm.hacking-cult.org/www/regen.html
	- Sms Plus: http://www.emulinks.de/emus/
	

3.31. Sega Master System

	Consola de 8bits de tercera generación lanzada por SEGA en 1986.

	La SEGA Master System (SMS), comercializada en Japón bajo el nombre SEGA
Mark III, fue una consola de videojuegos de 8 bit basada en cartuchos, que fue
producida por SEGA para competir con la Nintendo NES. Aunque estuvo muy por
detrás en ventas fuera de Europa y Brasil, la experiencia sentó los cimientos
para que Sega continuara con su liderazgo en esos mercados durante la siguiente
generación con la Megadrive.
	Aunque era más avanzada técnicamente que la NES, no alcanza en EE.UU. el
mismo nivel de popularidad. Esto se ha atribuido a varias causas, entre ellas el
retraso en el lanzamiento y un número de cartuchos de otras compañías distintas
a Sega mucho menor. Esto último debido al draconiano contrato que Nintendo
obligaba a suscribir a quienes querían licenciar juegos para la NES, con
cláusulas de exclusividad o retrasos de varios años entre la aparición de un
juego en NES y en otras plataformas (esto le valió varias reprimendas del
gobierno japonés, pero siguió en sus trece hasta su derrota legal por
Codemasters). La Master System vendió 125.000 consolas en los primeros cuatro
meses, y la NES 2.000.000.
	En 1990, Sega había alcanzado el éxito con la Sega Mega Drive/Sega Genesis y
como resultado recupera los derechos de Tonka sobre la SMS. Diseña entonces la
Sega Master System II, una nueva consola mucho más ligera y pequeña pero que
para abaratar costes de producción, carece del botón de reset, de toma
Audio/Video, del bus de expansión y del slot de tarjeta de la original.	A la vez
lanza un adaptador de Master System para MegaDrive/Genesis, que sí que tiene el
slot de tarjeta y usa la circuitería de la MegaDrive (que, de hecho es dos
consolas en una, incluso con dos juegos de chips gráficos y de sonido), que
precisamente incluye la toma de A/V. Cuando Sega Game Gear es lanzada al
mercado, uno de sus periféricos, Master Gear Converter permitiría a esta consola
portátil insertar cartuchos de Master System.
	En un esfuerzo de luchar contra el Super Mario Bros. de Nintendo el nuevo
sistema incluye en ROM el juego Alex Kidd in Miracle World, y posteriormente
Sonic the Hedgehog, que se ejecutaban si no se insertaba un cartucho. Sega se
volcó en promocionar el nuevo sistema, pero el cambio de generación ya se había
producido y nada logró.
	En Japón la consola fue abandonada al salir a la venta la Sega Mega Drive.
En 1991, las ventas en América del Norte eran prácticamente inexistentes, por lo
que se decide abandonar ese mercado también, para intentar potenciar en mayor
medida el creciente éxito de la Sega Genesis.

3.31.1. Información general:
	- Nombre: Master System
	- Fabricante: Sega
	- Año: 1986
	- Generación: 3ª
	- Tipo: Consola-TV
	- Extensiones: .sms, .bin

3.31.2. Información Hardware:
	- Tipo de soporte: 	Cartucho
	- CPU: Zilog Z80 (8bits)
	- Velocidad: 3.54 MHz
	- Ram: 8 KB
	- Rom: De 8 a 256 Kilobytes, dependiendo del juego en memoria.
	- Controladores: Pad de 8 direcciones, 2 botones de acción. 
	- Modos gráficos: 256x192, 256x224, 256x240 (solo PAL)
	- Colores: 32 en pantalla de una paleta de 64. 
	- Sonido: 4 canales mono (3 canales de tonos, 1 canal de ruido)
			
3.31.3. Emuladores preconfigurados en Gelide
	- Osmose (@2.28): http://bcz.emu-france.com/osmose.htm
	- Mednafen (@2.17.): http://mednafen.sourceforge.net
	- Xe emulator (@2.31.): http://www.xe-emulator.com
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163

3.31.4. Otras posibles alternativas
	- Bee: http://www.thebeehive.ws
	- CrabEmu: http://crabemu.sourceforge.net
	- DarkNes: http://www.dridus.com/~nyef/darcnes/
	- Dega: http://www.emulinks.de/emus/
	- Kega Fusion: http://www.eidolons-inn.net/tiki-index.php?page=Kega
	- MasterGear: http://fms.komkon.org/MG
	- Meka: http://www.smspower.org/meka/
	- Regen: http://aamirm.hacking-cult.org/www/regen.html
	- Sms Plus: http://www.emulinks.de/emus/


3.32. Sega Mega Drive

	Consola producida por SEGA, fue la primera consola de 16bits reales.

	Sega Mega Drive es una vídeo consola de sobremesa producida por SEGA, fue
lanzada en 1988. Esta vídeo consola es la sucesora directa de la Sega Master
System y compitió contra la SNES de Nintendo como parte de las vídeo consolas de
cuarta generación.
	En Estados Unidos y algunos países de Sudamérica, como Argentina, se
comercializó bajo el nombre Sega Genesis y tuvo un amplio mercado. 
	Fue la primera vídeo consola de 16 bits reales y la primera de su generación
en obtener una buena tasa de mercado en Europa y Norte America. Fue competidora
directa de la PC Engine y también de la SNES que fue lanzada dos años después.
	La producción de la consola comenzó en 1988 y finalizó con el último juego
licenciado y lanzado en 2002. 
	La Mega Drive fue la consola más rentable de SEGA aunque no está muy claro
cual fue el número de unidades vendidas en todo el mundo. Sigue siendo popular
entre fans, coleccionistas, jugadores retro y entusiastas de la emulación.
También existen desarrolladores de juegos indie que continúan produciendo juegos
para la consola.
	Muchos de los juegos lanzados para Mega Drive están siendo relanzados en
compilaciones para consolas actuales como Wii, Xbox o PlayStation.	
	En 2009, IGN nombro a la SEGA Mega Drive como la 4ª mejor consola de un
grupo de 25. 

3.32.1. Información general:
	- Nombre: Mega Drive
	- Fabricante: Sega
	- Año: 1988
	- Generación: 4ª
	- Tipo: Consola-TV
	- Extensiones: .smd, .bin, .md, .gen

3.32.2. Información Hardware:
	- Tipo de soporte: 	Cartucho
	- CPU: Motorola 68000 (16bits)
	- Velocidad: 7.61 MHz
	- Ram: 64 KB
	- Rom: 2 KB, pero los primeros modelos no tenían.
	- Controladores: Pad de 8 direcciones, 3 botones de acción y 1 botón para
	  start.
	- Modos gráficos: 256x224, 320x224 (NTSC), 256x240, 320x240 (PAL)
	- Colores: 64 en pantalla de una paleta de 512. 
	- Sonido: 6 canales FM más 4 canales PSG
			
3.32.3. Emuladores preconfigurados en Gelide
	- Gens/GS (@2.9.): ttp://www.segaretro.org/Gens/GS
	- Regen (@2.22.): http://aamirm.hacking-cult.org/www/regen.html
	- Generator (cbiere) (@2.8.): http://www.ghostwhitecrab.com/generator/
	- Xe emulator (@2.31.): http://www.xe-emulator.com
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163

3.32.4. Otras posibles alternativas
	- Dgen: http://tamentis.com/projects/dgen/
	- Kega Fusion: 	http://www.eidolons-inn.net/tiki-index.php?page=Kega
	- SDLHazeMD: http://mamedev.emulab.it/haze/
	- XGenEm: ???
	- Xmess: http://x.mame.net
	
	
3.33. Sega SG-1000

	Primera consola de videojuegos desarrollada por SEGA en 1981.

	SG-1000, fue la primera videoconsola de sobremesa desarrollada por Sega. Fue
primero lanzada al mercado en una primera fase de pruebas en Japón en 1981 y
finalmente lanzada al mercado japonés en Julio de 1983 por 15.000¥. La consola
no consiguió gran éxito en ese mercado. Sin embargo, el sistema se vendió bien
en Asia hasta 1985. Fue también comercializada en Australia por John Sands, en
Nueva Zelanda por Grandstand Leisure Limited, y en otros países como Italia,
España, y Sudáfrica. La consola en su versión original nunca llegó a
Norteamérica.
	En Julio de 1984, Sega lanzó una versión actualizada de la consola llamada
SG-1000 II, que contaba con un conector para una ampliación de teclado opcional.
Una versión en forma de ordenador de esta consola con el teclado integrado fue
comercializada bajo el nombre de SC-3000. Irónicamente, la SC-3000 acabaría
vendiendo más que la SG-1000.
	La Sega Mark III, una versión todavía más nueva lanzada en Japón con
hardware de vídeo mejorado y una mayor cantidad de RAM, sería rediseñada para
convertirse en la Sega Master System.
	El fabricante de videojuegos Tsukada Original hizo el Othello Multivision,
un clon del SG-1000. El clon de Colecovision de Bit Corporation fue llevado a
Norteamérica por una compañía llamada Telegames. Telegames llamó a este clon
Telegames Personal Arcade, y con él se podía jugar a juegos de Colecovision y
SG-1000.
	La SG-1000 es una consola extremadamente difícil de encontrar hoy día y esta
considerada objeto de coleccionista.

3.33.1. Información general:
	- Nombre: SG-1000
	- Fabricante: Sega
	- Año: 1981
	- Generación: 2ª
	- Tipo: Consola-TV
	- Extensiones: .sg, .bin

3.33.2. Información Hardware:
	- Tipo de soporte: 	Cartucho
	- CPU:NEC D780C (clon del Zilog Z80) (8bits)
	- Velocidad: 3.54 MHz
	- Ram: 2 KB
	- Rom: Desconocida.
	- Controladores: Joystick de 8 direcciones, 2 botones de acción. 
	- Modos gráficos: 256x192
	- Colores: 16 
	- Sonido: 4 canales mono (3 canales de tonos, 1 canal de ruido)
			
3.33.3. Emuladores preconfigurados en Gelide
	- Mednafen (@2.17.): http://mednafen.sourceforge.net
	- Xe emulator (@2.31.): http://www.xe-emulator.com
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163

3.33.4. Otras posibles alternativas
	- Bee: http://www.thebeehive.ws
	- CrabEmu: http://crabemu.sourceforge.net
	- DarkNes: http://www.dridus.com/~nyef/darcnes/
	- Kega Fusion: http://www.eidolons-inn.net/tiki-index.php?page=Kega
	- MasterGear: http://fms.komkon.org/MG
	- Meka: http://www.smspower.org/meka/
	- Regen: http://aamirm.hacking-cult.org/www/regen.html
	- Sms Plus: http://www.emulinks.de/emus/


3.34. Sinclair ZX Spectrum

	Ordenador de 8-bits basado en el Zilog Z80A lanzado por Sinclair R. en 1982.

	En Europa, el Sinclair ZX Spectrum fue uno de los microordenadores
domésticos más populares de los años 1980. Su optimizado y compacto diseño hizo
las delicias de miles de aficionados a la informática y los videojuegos. Aún hoy
perduran miles de fans del Spectrum que siguen jugando a sus juegos (con
emuladores que cargan sus ROM). Además hay un mercado de coleccionismo tanto de
cintas de juegos originales como de los propios Spectrum.
	El Spectrum llegó a lanzarse hasta en ocho modelos diferentes, desde el
modelo inicial de 16k de RAM hasta el ZX Spectrum +3 con 128k y unidad de disco
acoplada. Entre todos, se calcula que se vendieron más de 5 millones de unidades
en todo el mundo.
	La introducción del ZX Spectrum supuso un boom en las compañías de
desarrollo de software y hardware para esta máquina, tanto que aún hoy día se
pueden ver estos efectos.
	El Commodore 64, BBC Microcomputer y más tarde el Amstrad CPC fueron los
principales rivales del Spectrum.


3.34.1. Información general:
	- Nombre: ZX Spectrum
	- Fabricante: Sinclair Research Ltd.
	- Año: 1982
	- Generación:
	- Tipo: Ordenador
	- Extensiones: .tzx, .tap, .wav, .rom, .z80, .sna, .sp

3.34.2. Información Hardware:
	- Tipo de soporte: 	Cinta
	- CPU: Zilog Z80A (8bits)
	- Velocidad:  3.5 MHz
	- Ram: 16 KB o 48 KB
	- Rom: 16 KB.
	- Controladores: Teclado QWERTY de 40 teclas con hasta 6 funciones por tecla.
	- Modos gráficos: 256x192, 32x24 en modo texto
	- Colores: 16 (8 con dos tonos cada uno)
	- Sonido: 1 voz, 10 octavas (Beeper)
			
3.34.3. Emuladores preconfigurados en Gelide
	- FBZX (@2.4): http://www.rastersoft.com/fbzx.html
	- Fuse (@2.6): http://fuse-emulator.sourceforge.net
	- SpectEmu (@.26): http://www.inf.bme.hu/~mszeredi/spectemu
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163

3.34.4. Otras posibles alternativas
	- Glukalka:http://glukalka.sourceforge.net
	- XZX-Pro:  http://zx-spectrum.net
	- Spectrum: web:http://jlozevis.free.fr/spectrum.html


3.35. SNK Neo Geo Pocket

	Primera consola portátil lanzada por SNK en 1998 con potencia de 16bits.
	
	La Neo Geo Pocket es una consola portátil de SNK. Fue lanzada en Japón hacia
1998, y descontinuada en 1999, para dar paso a la Neo Geo Pocket Color, debido a
las bajas ventas del sistema monocromo.
	Aunque tuvo una corta vida, hay algunos juegos para el sistema que vale la
pena mencionar como Samurai Shodown y King of Fighters R-1.
	En la Neo Geo Pocket se pueden jugar varios de los nuevos juegos en color.
Existen excepciones notables como Sonic the Hedgehog Pocket Adventure o SNK vs.
Capcom: Match Of The Millennium. La Neo Geo Pocket Color es totalmente
compatible con los juegos antiguos de la Neo Geo Pocket.
 
3.35.1. Información general:
	- Nombre: Neo Geo Pocket
	- Fabricante: SNK
	- Año: 1998
	- Generación: 5ª
	- Tipo: Portátil (Handheld)
	- Extensiones: .ngp,  .npc, .bin 

3.35.2. Información Hardware:
	- Tipo de soporte: 	Cartucho
	- CPU: Toshiba TLCS900H (16bits)
	- Velocidad: 6.144 MHz
	- Ram: 12 KB 
	- Rom: 64 KB 
	- Controladores: Thumbstick de 8 direcciones, 2 botones de acción y 1 para
	  Option todo integrado en la consola. 
	- Modos gráficos: 160x152
	- Colores: 8 tonos de grises.
	- Sonido: Estéreo 6 canales PSG.
			
3.35.3. Emuladores preconfigurados en Gelide
	- Mednafen (@2.17.): http://mednafen.sourceforge.net
	- Xe emulator (@2.31.): http://www.xe-emulator.com
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.24.): http://rbelmont.mameworld.info/?page_id=163

3.35.4. Otras posibles alternativas
	- Neopocott: http://neopocott.emuunlim.com
	- NeoPop-SDL: http://www.nih.at/NeoPop-SDL/


3.36. SNK Neo Geo Pocket Color

	Consola portátil de 16bits y color lanzada por SNK en 1999.
	
	La Neo Geo Pocket Color (también conocida por su abreviatura NGPC) es la
sucesora de la Neo Geo Pocket.
	Fue fue lanzada por SNK en el año 1999 en Japón, Estados Unidos y Europa.
Sin embargo solo tuvo repercusión en Japón debido a una inversión publicitaria,
que fuera de este país, fue bastante escasa. En Japón, no obstante, llegó a
competir con la Game Boy Color y con la SwanCrystal; pero nunca llegó a manejar
el volumen de mercado que consiguió la Game Boy Advance.
	La consola estaba disponible en múltiples colores, pero internamente, el
hardware era el mismo que en la Neo Geo Pocket excepto por la pantalla a color.
 	La Neo Geo Pocket Color fue la última consola que lanzó SNK.
 
3.36.1. Información general:
	- Nombre: Neo Geo Pocket
	- Fabricante: SNK
	- Año: 1999
	- Generación: 6ª
	- Tipo: Portátil (Handheld)
	- Extensiones: .ngc, .ngp,  .npc, .bin 

3.36.2. Información Hardware:
	- Tipo de soporte: 	Cartucho
	- CPU: Toshiba TLCS900H (16bits)
	- Velocidad: 6.144 MHz
	- Ram: 12 KB 
	- Rom: 64 KB 
	- Controladores: Thumbstick de 8 direcciones, 2 botones de acción y 1 para
	  Option todo integrado en la consola. 
	- Modos gráficos: 160x152
	- Colores: 146 colores en pantalla de una paleta de 4096.
	- Sonido: Estéreo 6 canales PSG.
			
3.36.3. Emuladores preconfigurados en Gelide
	- Mednafen (@2.17.): http://mednafen.sourceforge.net
	- Xe emulator (@2.31.): http://www.xe-emulator.com
	- MESS (@2.18.): http://www.mess.org/
	- SdlMess (@2.33.): http://rbelmont.mameworld.info/?page_id=163

3.36.4. Otras posibles alternativas
	- Neopocott: http://neopocott.emuunlim.com
	- NeoPop-SDL: http://www.nih.at/NeoPop-SDL/


3.37. SNK Neo Geo AES

	Consola lanzada por SNK basada en cartuchos arcade.

	Neo-Geo es el nombre de un sistema basado en cartuchos para arcades así como
vídeo consolas para el hogar lanzado en 1990 por la compañía japonesa de juegos
SNK (ahora SNK Playmore). La tecnología del sistema estaba adelantada varios
años a la de otros sistemas caseros de su época, ofreciendo gráficos 2D
coloridos, y sonido de alta calidad. El sistema Neo-Geo era una plataforma para
máquinas recreativas, aunque también estaba disponible como vídeo consola normal
a un precio quizás demasiado elevado para muchos.
	Las dos versiones del sistema eran conocidas como el AES, siglas de Advanced
Entertainment System (Sistema Avanzado de Entretenimiento) para la consola y el
MVS, siglas de Multi Video System (Sistema Multi Video) para las arcades.
	Al principio, el sistema para el hogar no se podía comprar, sino que se
alquilaba, o se podía encontrar en hoteles, pero SNK comenzó rápidamente a
vender la consola en tiendas cuando las reacciones de los clientes indicaron que
estaban dispuestos a pagar una interesante suma de dinero por el sistema.
Comparada con las otras consolas de la época, la Neo-Geo AES era increíblemente
potente. Para esto usaba dos CPUs: un Motorola 68000 de 16-bit como procesador
principal a 12 MHz y otro de 8 bits ZiLOG Z-80A que funcionaba a 4 MHz. La CPU
principal del sistema era un 50 por ciento más rápida que el procesador 68000
encontrado en la consola Mega Drive de SEGA.
	No obstante, toda esta potencia tenia un precio. Para su lanzamiento, se
planeaba poner la consola a $599 USD, incluyendo dos joysticks y un juego
(Baseball Stars o NAM-1975). Sin embargo, este plan fue rápidamente descartado,
ya que en lanzamiento americano oficial tuvo el precio de $649.99 USD con dos
joysticks, una tarjeta de memoria, y el juego Magician Lord. Los juegos costaban
$200 o más cada uno. Con estos precios "premium", la mayoría de los aficionados
a los juegos no podían pagar el sistema y por consecuencia, la consola era
accesible solamente a un pequeño mercado, aunque rentable.
	El último juego del sistema Neo-Geo, Samurai Spirits Zero Special, fue
lanzado el 19 de octubre del 2004. Originalmente, no existía ningún tipo de
protección de copia en los cartuchos del sistema, aunque fue agregado
posteriormente, y pudo prevenir la piratería de software durante un tiempo. Uno
de los factores más importantes que contribuyeron al fin del longevo sistema fue
cuando los hackers lograron romper la protección de copia, llevando finalmente a
la piratería de los datos de memoria de sólo lectura contenida en los cartuchos.
	SNK dejó de fabricar las vídeo consolas para el hogar a finales del 1997,
pero el software para ambos formatos y el hardware para máquinas recreativas fue
producido durante varios años más.
	Desde la introducción del hardware para máquinas recreativas hasta el
lanzamiento del último cartucho en el 2004, hacen que los 14 años de soporte al
sistema Neo-Geo por parte del fabricante lo conviertan en el sistema arcade y
vídeo consola de mayor duración en producción, inclusive más que el Sega Naomi o
el Capcom Play System 2.

3.37.1. Información general:
	- Nombre: Neo Geo Advanced Entertainment System (AES)
	- Fabricante: SNK
	- Año: 1990
	- Generación: 4ª
	- Tipo: Consola-TV
	- Extensiones: .zip

3.37.2. Información Hardware:
	- Tipo de soporte: 	Cartucho
	- CPU: Motorola 68000 (bits)
	- Velocidad: 12 MHz
	- Ram: 64 KB
	- Rom: 128 KB
	- Controladores: Joystick de 8 direcciones, 4 botones de acción, 2 botones
	  para Select y Start. 
	- Modos gráficos: 304x224
	- Colores: 4096 en pantalla de una paleta de 65,536. 
	- Sonido: Yamaha YM2610, 15 canales (7 digitales, 4 FM, 3 PSG, 1 noise)

3.37.3. Emuladores preconfigurados en Gelide
	- MAME (@2.16.): http://www.mess.org/
	- SdlMame (@2.23.): http://rbelmont.mameworld.info/?page_id=163
	- GnGeo (@2.11.): http://gngeo.berlios.de
	- Xmame (@2.32.): http://x.mame.net

3.37.4. Otras posibles alternativas
	- Xe emulator (@2.9.): http://www.xe-emulator.com


3.38. ZiNc

	Emulador de juegos arcade basados en el hardware de PlayStation

	ZiNc es un emulador arcade por linea de comandos enfocado principalmente a
emular el hardware de Sony PlayStation. Esto incluye sistemas de Capcom, Taito,
Konami, Tecmo y Namco así como otras.
	Los juegos que emula ZiNc están soportados en MAME, pero ZiNc, normalmente,
puede ejecutarlos más rápido y con mejores gráficos y sonido. 
	Está disponible para GNU/Linux y Windows.
	Actualmente soporta 71 juegos

3.38.1. Información general:
	- Nombre: ZiNc 
	- Fabricante: The_Author y DynaChicken
	- Año: 1997
	- Generación: N/A
	- Tipo: Arcade.
	- Extensiones: .zip, .chd
			
3.38.2. Emuladores preconfigurados en Gelide
	- ZiNc (@2.35.): http://www.emuhype.com/index.phtml?s=zinc&ss=index
	- MAME (@2.16.): http://www.mess.org/
	- SdlMame (@2.23.): http://rbelmont.mameworld.info/?page_id=163
	- Xmame (@2.32.): http://x.mame.net

3.38.3. Otras posibles alternativas
	El resto de alternativas están basadas en estas y son más viejas.



4. Cómo contribuir

	Este documento está pensado para ayudar a todas aquellas personas que, como
yo, utilizan un sistema GNU/Linux y en algún momento han intentado instalar el
emulador "x".
	Muchas veces la instalación de un emulador es tan simple como instalar su
paquete desde los repositorios de tu distribución, aunque en la mayoría de los
casos, puede convertirse en una tarea bastante larga y compleja. Es por ello
que decidí escribir este documento, al mismo tiempo que comprobaba cierto
emulador para Gelide, con la intención de simplificarle a otras personas este
proceso.
	La principal forma de ayudar en la ampliación / corrección de este documento
es mandarme al correo del proyecto <gelide.prj@gmail.com> cómo has conseguido
instalar / configurar cierto emulador y cuales son los parámetros que has 
utilizado para ello.
	Puedes ayudarnos también a que este texto esté traducido a tu lenguaje
nativo. Si esta es tu intención, una vez que tengas la traducción terminada, me
la puedes enviar a <gelide.prj@gmail.com> para que la pueda añadir en la
siguiente versión de Gelide.
	Por supuesto todas las colaboraciones quedarán reflejadas en la sección de
créditos del documento.
		


5. Créditos
	
	La mayor parte de la información contenida en este documento, en cuanto a
emuladores, está basada en la documentación y páginas webs de los emuladores
presentados, cuyos créditos son de sus autores originales. Si quieres obtener
más información sobre un emulador en concreto, puedes visitar su web o consultar
su manual, donde podrás encontrar información mucho más extensa y precisa.
	También se ha hecho uso intensivo de la Wikipedia que junto con el fichero
"sysinfo.dat" contenido en la distribución de MESS (http://www.mess.org),
componen la fuente principal en cuanto a información sobre sistemas se refiere.
Otras fuentes con bastante información a las que se ha acudido son:
	- Pugo: http://www.pugo.org
	- El museo de los 8 bits: http://www.museo8bits.com
	- Museo del vídeo juego: http://www.museodelvideojuego.com
	- Old Computers: http://www.old-computers.com
	
	Este texto ha sido escrito íntegramente por Juan Ángel Moreno Fernández, en
su versión Española, como parte del proyecto Gelide (http://gelide.sf.net).



6. Agradecimientos

	A Minisoriex Vimatoga por sus ideas y ayuda.
	A JesusDa por darme la idea para los nombres de las versiones.
	A Tom G.P. por ponerme en la pista de los emuladores Regen y Gambatte.
	A Loris Cuoghi, Emeric Grange, Niklas Grahn, Manuel Wächter,
Daniel Nylander, Kamil Ślepowroński, Oleg Koptev por sus esfuerzos para traducir
Gelide a otros idiomas.
	A Pablo Casas (pablo33) por todas sus sugerencias y por reportar el solo
prácticamente todos los bugs de la versión 0.1.4. 
	Quiero dar las gracias muy especialmente a todas y cada una de las personas
que participan o han participado en el diseño e implementación de un emulador,
así como a todas aquellas personas que han pasado horas y horas documentando el
funcionamiento de un sistema determinado, sin vosotros el mundo de la emulación
no existiría. 

		
		
7. Licencia

Gelide
Systems & Emulators HowTo
Copyright (C) 2008 - 2011 Juan Ángel Moreno Fernández

Permission is granted to copy, distribute and/or modify this
document under the terms of the GNU Free Documentation
License (GFDL), Version 1.1 or any later version published
by the Free Software Foundation with no Invariant Sections,
no Front-Cover Texts, and no Back-Cover Texts.  You can find
a copy of the GFDL at this link or in the file COPYING-DOCS
distributed with this manual.

This manual is part of a collection of GNOME manuals
distributed under the GFDL.  If you want to distribute this
manual separately from the collection, you can do so by
adding a copy of the license to the manual, as described in
section 6 of the license.

Many of the names used by companies to distinguish their
products and services are claimed as trademarks. Where those
names appear in any GNOME documentation, and the members of
the GNOME Documentation Project are made aware of those
trademarks, then the names are in capital letters or initial
capital letters.

DOCUMENT AND MODIFIED VERSIONS OF THE DOCUMENT ARE PROVIDED
UNDER  THE TERMS OF THE GNU FREE DOCUMENTATION LICENSE
WITH THE FURTHER UNDERSTANDING THAT:

1.
	DOCUMENT IS PROVIDED ON AN "AS IS" BASIS,
	WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR
	IMPLIED, INCLUDING, WITHOUT LIMITATION, WARRANTIES
	THAT THE DOCUMENT OR MODIFIED VERSION OF THE
	DOCUMENT IS FREE OF DEFECTS MERCHANTABLE, FIT FOR
	A PARTICULAR PURPOSE OR NON-INFRINGING. THE ENTIRE
	RISK AS TO THE QUALITY, ACCURACY, AND PERFORMANCE
	OF THE DOCUMENT OR MODIFIED VERSION OF THE
	DOCUMENT IS WITH YOU. SHOULD ANY DOCUMENT OR
	MODIFIED VERSION PROVE DEFECTIVE IN ANY RESPECT,
	YOU (NOT THE INITIAL WRITER, AUTHOR OR ANY
	CONTRIBUTOR) ASSUME THE COST OF ANY NECESSARY
	SERVICING, REPAIR OR CORRECTION. THIS DISCLAIMER
	OF WARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS
	LICENSE. NO USE OF ANY DOCUMENT OR MODIFIED
	VERSION OF THE DOCUMENT IS AUTHORIZED HEREUNDER
	EXCEPT UNDER THIS DISCLAIMER; AND
	UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL
	THEORY, WHETHER IN TORT (INCLUDING NEGLIGENCE),
	CONTRACT, OR OTHERWISE, SHALL THE AUTHOR,
	INITIAL WRITER, ANY CONTRIBUTOR, OR ANY
	DISTRIBUTOR OF THE DOCUMENT OR MODIFIED VERSION
	OF THE DOCUMENT, OR ANY SUPPLIER OF ANY OF SUCH
	PARTIES, BE LIABLE TO ANY PERSON FOR ANY
	DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR
	CONSEQUENTIAL DAMAGES OF ANY CHARACTER
	INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS
	OF GOODWILL, WORK STOPPAGE, COMPUTER FAILURE OR
	MALFUNCTION, OR ANY AND ALL OTHER DAMAGES OR
	LOSSES ARISING OUT OF OR RELATING TO USE OF THE
	DOCUMENT AND MODIFIED VERSIONS OF THE DOCUMENT,
	EVEN IF SUCH PARTY SHALL HAVE BEEN INFORMED OF
	THE POSSIBILITY OF SUCH DAMAGES.
                         

-------------------------------------------------------------------------------
Para obtener más información, visita la página web del proyecto, que podrás 
encontrar en:
http://gelide.sourceforge.net
-------------------------------------------------------------------------------

